{"version":3,"sources":["images/projects/sketch/sketch-carousel.png","images/projects/sketch/sketch-carousel-big.png","images/contacts/gmail.png","images/contacts/github.png","images/contacts/linkedin.png","images/me/EubyKuma.png","shared/colors.tsx","shared/device.ts","components/Header.tsx","components/common/LinkButton.tsx","shared/animations.ts","components/contacts/ContactCard.tsx","data/contacts.ts","components/common/PageTitle.tsx","components/contacts/ContactsModal.tsx","components/contacts/ContactsButton.tsx","components/Menu.tsx","components/carousel/slide/Tag.tsx","components/carousel/slide/TagContainer.tsx","components/carousel/slide/SlideDescription.tsx","components/carousel/slide/SlideContent.tsx","components/carousel/CarouselContent.tsx","components/home/homeAnimation.ts","components/common/PageStyle.tsx","components/home/HomePage.tsx","components/AboutPage.tsx","components/project-list/ProjectCard.tsx","components/project-list/ProjectListPage.tsx","components/Body.tsx","App.tsx","index.tsx"],"names":["module","exports","colors","deviceSize","device","tablet","desktop","Background","styled","header","NameContainer","div","DevName","JobTitle","Header","LinkButton","button","AnimationDirection","GetAnimationStyle","component","animationDirection","GetTranslateFromTransform","GetEnterStartPosition","FromUp","x","y","FromDown","FromLeft","FromRight","transform","ContactCardStyled","ContactImage","img","ContactInfo","ContactCard","props","src","image","message","contact","contacts","gmailLogo","contactText","linkedinLogo","githubLogo","TitleContent","centered","PageTitle","children","ModalBackground","ModalWrapper","ContactsContainer","LinkButtonStyled","ContactsModal","modalMarkup","map","onClick","onClose","ReactDOM","createPortal","document","body","ContactsButton","React","useState","modalIsOpen","setIsOpen","CSSTransition","in","classNames","unmountOnExit","timeout","NavMenu","nav","LinkContainer","ul","Item","li","MenuButton","border","Menu","to","TagName","Tag","Tags","TagContainer","tags","value","i","key","DescriptionContainer","Title","strong","Description","SlideDescription","projectName","ImageContainer","section","Image","SlideContent","project","window","screen","width","imageBig","alt","imageAlt","name","projectsInCarousel","sketchImage","sketchImageBig","CarouselContainer","CarouselStyled","Carousel","CarouselContent","showArrows","showThumbs","showStatus","showIndicators","emulateTouch","autoPlay","interval","stopOnHover","infiniteLoop","index","homePathHash","getAnimationBasedOnLocation","location","PageStyle","HomePageStyled","HomePage","currentLocation","hash","lastLocation","useLastLocation","replace","getCurrentAnimation","pathname","AboutPageAnimated","Info","Bio","NavigationButtons","AboutPage","ProjectCardStyle","CardHeader","ProjectTitle","TagContainerStyled","ProjectDescription","p","ProjectCard","tag","ProjectListPageAnimated","ProjectCardContainer","mockProjects","LinkStyled","Link","ReturnButton","ProjectListPage","a","BodyGrid","TransitionGroupStyled","TransitionGroup","Body","basename","render","exact","path","App","getElementById"],"mappings":"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","file":"static/js/main.af039891.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sketch-carousel.7b5eb98f.png\";","module.exports = __webpack_public_path__ + \"static/media/sketch-carousel-big.86fcbb81.png\";","module.exports = __webpack_public_path__ + \"static/media/gmail.0202b153.png\";","module.exports = __webpack_public_path__ + \"static/media/github.45f3e0f1.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.1dbd8941.png\";","module.exports = __webpack_public_path__ + \"static/media/EubyKuma.0bdb45f3.png\";","const colors = {\r\n  mainColor: \"#7673ff\",\r\n  mainTextColor: \"#fff\",\r\n  mainBackgroundColor: \"#f1f1f1\",\r\n  secondColor: \"#6B68EE\",\r\n  secondBackgroundColor: \"#f7f7f7\",\r\n\r\n  buttonClickedColor: \"#dedede\",\r\n};\r\n\r\nconst buttonColors = {\r\n  onHoverColor: \"#e6e6e6\",\r\n};\r\n\r\nexport { colors, buttonColors };\r\n","export const deviceSize = {\r\n  tablet: 500,\r\n  desktop: 2560\r\n};\r\n\r\nexport function isInDesktop() {\r\n  return window.screen.width >= deviceSize.desktop;\r\n}\r\n\r\nexport const device = {\r\n  tablet: `(min-width: ${deviceSize.tablet}px)`,\r\n  desktop: `(min-width: ${deviceSize.desktop}px)`\r\n};\r\n","import React from \"react\";\r\nimport { colors } from \"../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../shared/device\";\r\n\r\nconst Background = styled.header`\r\n  width: 100%;\r\n  background-color: ${colors.mainColor};\r\n  color: ${colors.mainTextColor};\r\n  z-index: 10;\r\n`;\r\n\r\nconst NameContainer = styled.div`\r\n  padding: 20px;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 30px;\r\n  }\r\n`;\r\n\r\nconst DevName = styled.div`\r\n  font-size: 1em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.4em;\r\n  }\r\n`;\r\n\r\nconst JobTitle = styled.div`\r\n  font-size: 1.5em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.9em;\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Background>\r\n      <NameContainer>\r\n        <DevName>Gustavo Passos</DevName>\r\n        <JobTitle>Game & Software Developer</JobTitle>\r\n      </NameContainer>\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\nimport { device } from \"../../shared/device\";\r\nimport { colors } from \"../../shared/colors\";\r\n\r\nconst LinkButton = styled.button`\r\n  color: ${colors.mainColor};\r\n  background: ${colors.secondBackgroundColor};\r\n  font-size: 1.2em;\r\n  border: none;\r\n  padding: 4% 0;\r\n\r\n  :focus,\r\n  :hover {\r\n    cursor: pointer;\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.4em;\r\n  }\r\n`;\r\n\r\nexport default LinkButton;\r\n","import styled, { AnyStyledComponent } from \"styled-components\";\r\n\r\nexport const animationSpeed = 400;\r\n\r\nexport enum AnimationDirection {\r\n  FromUp,\r\n  FromDown,\r\n  FromRight,\r\n  FromLeft,\r\n}\r\n\r\nexport const GetAnimationStyle = (\r\n  component: AnyStyledComponent,\r\n  animationDirection: AnimationDirection\r\n) => styled(component)`\r\n  &.animation-enter {\r\n    transform: ${GetTranslateFromTransform(\r\n      GetEnterStartPosition(animationDirection)\r\n    )};\r\n  }\r\n\r\n  &.animation-enter-active {\r\n    transform: translate(0, 0);\r\n    transition-timing-function: ease-in-out;\r\n    transition: transform ${animationSpeed}ms;\r\n  }\r\n\r\n  &.animation-exit {\r\n    transform: translate(0, 0);\r\n  }\r\n\r\n  &.animation-exit-active {\r\n    transform: ${GetTranslateFromTransform(\r\n      GetEnterStartPosition(animationDirection)\r\n    )};\r\n    transition-timing-function: ease-in-out;\r\n    transition: transform ${animationSpeed}ms;\r\n  }\r\n`;\r\n\r\nexport const GetEnterStartPosition = (\r\n  animationDirection: AnimationDirection\r\n): Transform => {\r\n  switch (animationDirection) {\r\n    case AnimationDirection.FromUp:\r\n      return { x: 0, y: -100 };\r\n\r\n    case AnimationDirection.FromDown:\r\n      return { x: 0, y: 100 };\r\n\r\n    case AnimationDirection.FromLeft:\r\n      return { x: -100, y: 0 };\r\n\r\n    case AnimationDirection.FromRight:\r\n      return { x: 100, y: 0 };\r\n  }\r\n};\r\n\r\nexport const GetTranslateFromTransform = (transform: Transform): string => {\r\n  return `translate(${transform.x}%, ${transform.y}%)`;\r\n};\r\n\r\nexport interface Transform {\r\n  x: number;\r\n  y: number;\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ContactCardStyled = styled.div`\r\n  padding: 5% 10%;\r\n  display: flex;\r\n  font-size: 0.9em;\r\n`;\r\n\r\nconst ContactImage = styled.img`\r\n  width: 20%;\r\n  height: 20%;\r\n`;\r\n\r\nconst ContactInfo = styled.div`\r\n  align-self: flex-end;\r\n\r\n  span,\r\n  strong {\r\n    display: block;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\ninterface ContactCardProps {\r\n  image: string;\r\n  message: string;\r\n  contact: string;\r\n}\r\n\r\nconst ContactCard = (props: ContactCardProps) => {\r\n  return (\r\n    <ContactCardStyled>\r\n      <ContactImage src={props.image}></ContactImage>\r\n      <ContactInfo>\r\n        <strong>{props.message}</strong>\r\n        <span>{props.contact}</span>\r\n      </ContactInfo>\r\n    </ContactCardStyled>\r\n  );\r\n};\r\n\r\nexport default ContactCard;\r\n","import Contact from \"../models/contact\";\r\nimport gmailLogo from \"../images/contacts/gmail.png\";\r\nimport githubLogo from \"../images/contacts/github.png\";\r\nimport linkedinLogo from \"../images/contacts/linkedin.png\";\r\n\r\nexport const contacts: Contact[] = [\r\n  {\r\n    image: gmailLogo,\r\n    message: \"mail me\",\r\n    contactText: \"theguspassos@gmail.com\",\r\n  },\r\n  {\r\n    image: linkedinLogo,\r\n    message: \"connect with me\",\r\n    contactText: \"linkedin.com/in/theguspassos/\",\r\n  },\r\n  {\r\n    image: githubLogo,\r\n    message: \"code with me\",\r\n    contactText: \"github/theguspassos\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { colors } from \"../../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../shared/device\";\r\n\r\ninterface TitleProps {\r\n  centered: boolean;\r\n}\r\n\r\nconst TitleContent = styled.div`\r\n  background: ${colors.secondColor};\r\n  color: ${colors.mainTextColor};\r\n  padding: 10px 20px;\r\n  font-size: 0.95em;\r\n  text-align: ${(props: TitleProps) => (props.centered ? \"center\" : \"unset\")};\r\n\r\n  box-shadow: 0px 3px 11px 0px #0000009c;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 10px 30px;\r\n    font-size: 1.4em;\r\n  }\r\n`;\r\n\r\ninterface PageTitleProps {\r\n  children: string;\r\n  centered: boolean;\r\n}\r\n\r\nconst PageTitle = (props: PageTitleProps) => {\r\n  return (\r\n    <TitleContent centered={props.centered}>{props.children}</TitleContent>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components\";\r\nimport { animationSpeed } from \"../../shared/animations\";\r\nimport ContactCard from \"./ContactCard\";\r\nimport LinkButton from \"../common/LinkButton\";\r\nimport { contacts } from \"../../data/contacts\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport { colors } from \"../../shared/colors\";\r\nimport { device } from \"../../shared/device\";\r\n\r\nconst ModalBackground = styled.div`\r\n  background: rgba(0, 0, 0, 0.2);\r\n  height: 100%;\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 99999;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &.animation-enter {\r\n    opacity: 0;\r\n\r\n    > div:first-child {\r\n      transform: translate(0, 100%);\r\n    }\r\n  }\r\n\r\n  &.animation-enter-active {\r\n    opacity: 1;\r\n    transition: opacity ${animationSpeed}ms;\r\n\r\n    > div:first-child {\r\n      transform: translate(0, 0);\r\n      transition-timing-function: ease-in-out;\r\n      transition: transform ${animationSpeed}ms;\r\n    }\r\n  }\r\n\r\n  &.animation-exit {\r\n    opacity: 1;\r\n\r\n    > div:first-child {\r\n      transform: translate(0, 0);\r\n    }\r\n  }\r\n\r\n  &.animation-exit-active {\r\n    opacity: 0;\r\n    transition: opacity ${animationSpeed}ms;\r\n\r\n    > div:first-child {\r\n      transform: translate(0, 100%);\r\n      transition-timing-function: ease-in-out;\r\n      transition: transform ${animationSpeed}ms;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ModalWrapper = styled.div`\r\n  background-color: #fff;\r\n  z-index: 999999;\r\n  width: 100%;\r\n  max-width: 500px;\r\n`;\r\n\r\nconst ContactsContainer = styled.div`\r\n  padding: 20px;\r\n\r\n  > div:nth-child(2) {\r\n    border-top: 1px solid ${colors.mainColor};\r\n    border-bottom: 1px solid ${colors.mainColor};\r\n  }\r\n`;\r\n\r\nconst getContacts = () => {\r\n  return contacts.map((contact) => {\r\n    return (\r\n      <ContactCard\r\n        contact={contact.contactText}\r\n        image={contact.image}\r\n        message={contact.message}\r\n      ></ContactCard>\r\n    );\r\n  });\r\n};\r\n\r\nconst LinkButtonStyled = styled(LinkButton)`\r\n  width: 100%;\r\n  background-color: #fff;\r\n  box-shadow: 0px 3px 11px 0px #0000009c;\r\n  padding: 10px 20px;\r\n`;\r\n\r\ninterface ContactsModalProps {\r\n  onClose(): void;\r\n}\r\n\r\nconst ContactsModal = (props: ContactsModalProps) => {\r\n  const modalMarkup = (\r\n    <ModalBackground>\r\n      <ModalWrapper>\r\n        <PageTitle centered>My Contacts</PageTitle>\r\n        <ContactsContainer>{getContacts()}</ContactsContainer>\r\n        <LinkButtonStyled onClick={() => props.onClose()}>\r\n          Close\r\n        </LinkButtonStyled>\r\n      </ModalWrapper>\r\n    </ModalBackground>\r\n  );\r\n\r\n  return ReactDOM.createPortal(modalMarkup, document.body);\r\n};\r\n\r\nexport default ContactsModal;\r\n","import React from \"react\";\r\nimport LinkButton from \"../common/LinkButton\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { animationSpeed } from \"../../shared/animations\";\r\nimport ContactsModal from \"./ContactsModal\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ContactsButton = () => {\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <LinkButton onClick={() => setIsOpen(true)}>My Contacts</LinkButton>\r\n      <CSSTransition\r\n        in={modalIsOpen}\r\n        classNames=\"animation\"\r\n        unmountOnExit\r\n        timeout={animationSpeed}\r\n      >\r\n        <ContactsModal onClose={() => setIsOpen(false)}></ContactsModal>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../shared/device\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LinkButton from \"./common/LinkButton\";\r\nimport ContactsButton from \"./contacts/ContactsButton\";\r\n\r\nconst NavMenu = styled.nav`\r\n  flex: 1;\r\n  display: flex;\r\n`;\r\n\r\nconst LinkContainer = styled.ul`\r\n  margin: auto;\r\n  padding: 0;\r\n  width: 100%;\r\n\r\n  @media ${device.tablet} {\r\n    display: inline-flex;\r\n  }\r\n`;\r\n\r\nconst Item = styled.li`\r\n  text-align: center;\r\n  list-style: none;\r\n\r\n  @media ${device.tablet} {\r\n    margin: auto;\r\n    width: 30%;\r\n  }\r\n`;\r\n\r\ninterface ButtonProps {\r\n  border?: boolean;\r\n}\r\n\r\nconst MenuButton = styled(LinkButton)`\r\n  width: 70%;\r\n  border-bottom: ${(props: ButtonProps) =>\r\n    props.border ? \"solid 1px\" : \"none\"};\r\n  border-top: ${(props: ButtonProps) => (props.border ? \"solid 1px\" : \"none\")};\r\n\r\n  @media ${device.tablet} {\r\n    width: 100%;\r\n    border-bottom: none;\r\n    border-top: none;\r\n    border-left: ${(props: ButtonProps) =>\r\n      props.border ? \"solid 1px\" : \"none\"};\r\n    border-right: ${(props: ButtonProps) =>\r\n      props.border ? \"solid 1px\" : \"none\"};\r\n  }\r\n`;\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <NavMenu>\r\n      <LinkContainer>\r\n        <Item>\r\n          <Link to=\"/projects\">\r\n            <MenuButton>My other projects</MenuButton>\r\n          </Link>\r\n        </Item>\r\n        <Item>\r\n          <Link to=\"/about\">\r\n            <MenuButton border>About me</MenuButton>\r\n          </Link>\r\n        </Item>\r\n        <Item>\r\n          <ContactsButton></ContactsButton>\r\n        </Item>\r\n      </LinkContainer>\r\n    </NavMenu>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport { colors } from \"../../../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../shared/device\";\r\n\r\nconst TagName = styled.div`\r\n  font-size: 0.8em;\r\n  background: ${colors.mainBackgroundColor};\r\n  color: ${colors.mainColor};\r\n  text-align: center;\r\n  min-width: 60px;\r\n  margin: 10px;\r\n  padding: 3px 7px;\r\n  border: 3px solid;\r\n  border-color: ${colors.mainColor};\r\n  border-radius: 50px;\r\n  float: right;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.2em;\r\n    min-width: 90px;\r\n    margin: 15px;\r\n  }\r\n`;\r\n\r\ninterface TagProps {\r\n  children: string;\r\n}\r\n\r\nconst Tag = (props: TagProps): React.ReactElement => {\r\n  return <TagName>{props.children}</TagName>;\r\n};\r\n\r\nexport default Tag;\r\n","import React from \"react\";\r\nimport Tag from \"./Tag\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Tags = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n`;\r\n\r\ninterface TagContainerProps {\r\n  tags: string[];\r\n}\r\n\r\nconst TagContainer = (props: TagContainerProps) => {\r\n  return (\r\n    <Tags>\r\n      {props.tags.map((value: string, i: number) => {\r\n        return <Tag key={i}>{value}</Tag>;\r\n      })}\r\n    </Tags>\r\n  );\r\n};\r\n\r\nexport default TagContainer;\r\n","import React from \"react\";\r\nimport { colors } from \"../../../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../shared/device\";\r\n\r\nconst DescriptionContainer = styled.div`\r\n  display: block;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  @media ${device.tablet} {\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst Title = styled.strong`\r\n  background: ${colors.mainColor};\r\n  color: #fff;\r\n  font-size: 1.1em;\r\n  letter-spacing: 5px;\r\n  text-transform: uppercase;\r\n  border: 1px solid #c2c2c2;\r\n  position: absolute;\r\n  top: -35px;\r\n  left: 0;\r\n  padding: 10px 20px;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.3em;\r\n    top: -60px;\r\n    padding: 20px 30px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.div`\r\n  font-size: 0.9em;\r\n  background: #e6e6e6;\r\n  padding: 10px 20px;\r\n  text-align: left;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.2em;\r\n    border-radius: 0 30px 0 0;\r\n    padding: 20px 30px;\r\n  }\r\n`;\r\n\r\nconst SlideDescription = (props: SlideDescriptionProps) => {\r\n  return (\r\n    <DescriptionContainer>\r\n      <Description>\r\n        My firt project made with commercial intent. There’s a playable demo\r\n        available\r\n      </Description>\r\n      <Title>{props.projectName}</Title>\r\n    </DescriptionContainer>\r\n  );\r\n};\r\n\r\ninterface SlideDescriptionProps {\r\n  projectName: string;\r\n}\r\n\r\nexport default SlideDescription;\r\n","import React from \"react\";\r\nimport Project from \"../../../models/project\";\r\nimport styled from \"styled-components\";\r\nimport { deviceSize } from \"../../../shared/device\";\r\nimport { colors } from \"../../../shared/colors\";\r\nimport TagContainer from \"./TagContainer\";\r\nimport SlideDescription from \"./SlideDescription\";\r\n\r\nconst ImageContainer = styled.section`\r\n  position: relative;\r\n  display: block;\r\n  background-color: ${colors.mainBackgroundColor};\r\n`;\r\n\r\nconst Image = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  margin: auto;\r\n`;\r\n\r\ninterface ProjectSlideProps {\r\n  index: number;\r\n  project: Project;\r\n}\r\n\r\nconst getImageByDeviceSize = (project: Project) => {\r\n  return window.screen.width < deviceSize.tablet\r\n    ? project.image\r\n    : project.imageBig;\r\n};\r\n\r\nconst SlideContent = (props: ProjectSlideProps) => {\r\n  return (\r\n    <ImageContainer>\r\n      <TagContainer tags={props.project.tags}></TagContainer>\r\n      <Image\r\n        src={getImageByDeviceSize(props.project)}\r\n        alt={props.project.imageAlt}\r\n      ></Image>\r\n      <SlideDescription projectName={props.project.name}></SlideDescription>\r\n    </ImageContainer>\r\n  );\r\n};\r\n\r\nexport default SlideContent;\r\n","import React from \"react\";\r\nimport SlideContent from \"./slide/SlideContent\";\r\nimport Project from \"../../models/project\";\r\nimport styled from \"styled-components\";\r\nimport sketchImage from \"../../images/projects/sketch/sketch-carousel.png\";\r\nimport sketchImageBig from \"../../images/projects/sketch/sketch-carousel-big.png\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { isInDesktop } from \"../../shared/device\";\r\n\r\nconst projectsInCarousel: Project[] = [\r\n  {\r\n    image: sketchImage,\r\n    imageBig: sketchImageBig,\r\n    imageAlt: \"Image the game Sketch\",\r\n    name: \"sketch 1\",\r\n    tags: [\"Unity\", \"C#\"],\r\n  },\r\n  {\r\n    image: sketchImage,\r\n    imageBig: sketchImageBig,\r\n    imageAlt: \"Image the game Sketch\",\r\n    name: \"sketch 2\",\r\n    tags: [\"Unity\", \"C#\"],\r\n  },\r\n  {\r\n    image: sketchImage,\r\n    imageBig: sketchImageBig,\r\n    imageAlt: \"Image the game Sketch\",\r\n    name: \"sketch 3\",\r\n    tags: [\"Unity\", \"C#\"],\r\n  },\r\n];\r\n\r\nconst CarouselContainer = styled.div`\r\n  z-index: 10;\r\n`;\r\n\r\nconst CarouselStyled = styled(Carousel)`\r\n  .control-dots {\r\n    top: 0;\r\n    bottom: unset;\r\n  }\r\n`;\r\n\r\nfunction projectSlides() {\r\n  return projectsInCarousel.map((value: Project, i: number) => {\r\n    return <SlideContent index={i} project={value} key={i}></SlideContent>;\r\n  });\r\n}\r\n\r\nconst CarouselContent = () => {\r\n  return (\r\n    <CarouselContainer>\r\n      <CarouselStyled\r\n        showArrows={isInDesktop()}\r\n        showThumbs={false}\r\n        showStatus={false}\r\n        showIndicators\r\n        emulateTouch\r\n        autoPlay\r\n        interval={4000}\r\n        stopOnHover\r\n        infiniteLoop\r\n      >\r\n        {projectSlides()}\r\n      </CarouselStyled>\r\n    </CarouselContainer>\r\n  );\r\n};\r\n\r\nexport default CarouselContent;\r\n","import {\r\n  GetEnterStartPosition,\r\n  AnimationDirection,\r\n} from \"../../shared/animations\";\r\n\r\nconst homePath = \"/\";\r\nconst homePathHash = `#${homePath}`;\r\n\r\nconst aboutPath = \"/about\";\r\nconst projectListPath = \"/projects\";\r\n\r\nexport const getCurrentAnimation = (\r\n  currentLocation: string,\r\n  lastLocation: string | undefined\r\n) => {\r\n  return currentLocation === homePathHash\r\n    ? getAnimationBasedOnLocation(lastLocation)\r\n    : getAnimationBasedOnLocation(currentLocation.replace(\"#\", \"\"));\r\n};\r\n\r\nconst getAnimationBasedOnLocation = (location: string | undefined) => {\r\n  if (location === aboutPath)\r\n    return GetEnterStartPosition(AnimationDirection.FromRight);\r\n  else if (location === projectListPath)\r\n    return GetEnterStartPosition(AnimationDirection.FromLeft);\r\n  else return GetEnterStartPosition(AnimationDirection.FromUp);\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst PageStyle = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n`;\r\n\r\nexport default PageStyle;\r\n","import React from \"react\";\r\nimport Menu from \"../Menu\";\r\nimport CarouselContent from \"../carousel/CarouselContent\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  GetTranslateFromTransform,\r\n  Transform,\r\n  animationSpeed,\r\n} from \"../../shared/animations\";\r\nimport { useLastLocation } from \"react-router-last-location\";\r\nimport { getCurrentAnimation } from \"./homeAnimation\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport PageStyle from \"../common/PageStyle\";\r\n\r\ninterface HomePageProps {\r\n  transform: Transform;\r\n}\r\n\r\nconst HomePageStyled = styled(PageStyle)`\r\n  &.animation-enter {\r\n    transform: ${(props: HomePageProps) =>\r\n      GetTranslateFromTransform(props.transform)};\r\n  }\r\n\r\n  &.animation-enter-active {\r\n    transform: translateX(0);\r\n    transition-timing-function: ease-in-out;\r\n    transition: transform ${animationSpeed}ms;\r\n  }\r\n\r\n  &.animation-exit {\r\n    transform: translateX(0);\r\n  }\r\n\r\n  &.animation-exit-active {\r\n    transform: ${(props: HomePageProps) =>\r\n      GetTranslateFromTransform(props.transform)};\r\n    transition-timing-function: ease-in-out;\r\n    transition: transform ${animationSpeed}ms;\r\n  }\r\n`;\r\n\r\nconst HomePage = () => {\r\n  const currentLocation = window.location.hash;\r\n  const lastLocation = useLastLocation();\r\n\r\n  const animationDirection = getCurrentAnimation(\r\n    currentLocation,\r\n    lastLocation?.pathname\r\n  );\r\n\r\n  return (\r\n    <HomePageStyled transform={animationDirection}>\r\n      <PageTitle centered={false}>\r\n        some of the projects I've worked on\r\n      </PageTitle>\r\n      <CarouselContent></CarouselContent>\r\n      <Menu></Menu>\r\n    </HomePageStyled>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport PageTitle from \"./common/PageTitle\";\r\nimport styled from \"styled-components\";\r\nimport { GetAnimationStyle, AnimationDirection } from \"../shared/animations\";\r\nimport image from \"../images/me/EubyKuma.png\";\r\nimport { device } from \"../shared/device\";\r\nimport LinkButton from \"./common/LinkButton\";\r\nimport PageStyle from \"./common/PageStyle\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ContactsButton from \"./contacts/ContactsButton\";\r\nimport { colors } from \"../shared/colors\";\r\n\r\nconst AboutPageStyled = styled(PageStyle)`\r\n  font-size: 0.9em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.1em;\r\n  }\r\n`;\r\n\r\nconst AboutPageAnimated = GetAnimationStyle(\r\n  AboutPageStyled,\r\n  AnimationDirection.FromLeft\r\n);\r\n\r\nconst ImageContainer = styled.div``;\r\n\r\nconst Image = styled.img`\r\n  display: flex;\r\n  width: 45%;\r\n  margin: 5% auto;\r\n\r\n  @media ${device.tablet} {\r\n    width: 30%;\r\n  }\r\n`;\r\n\r\nconst Info = styled.div`\r\n  margin: 0 10%;\r\n\r\n  span {\r\n    display: block;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst Bio = styled.div`\r\n  padding: 3% 20px;\r\n  height: 70%;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 30px;\r\n\r\n    p {\r\n      margin: 30px 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NavigationButtons = styled.nav`\r\n  flex: 1;\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst LinkContainer = styled.ul`\r\n  margin: 0 auto;\r\n  font-size: 1.1em;\r\n  padding: 0;\r\n\r\n  a {\r\n    -webkit-tap-highlight-color: transparent;\r\n    display: block;\r\n    text-align: center;\r\n  }\r\n\r\n  button {\r\n    padding: 15px;\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 0.9em;\r\n  }\r\n`;\r\n\r\nconst Item = styled.li`\r\n  text-align: center;\r\n  list-style: none;\r\n`;\r\n\r\nconst LinkButtonStyled = styled(LinkButton)`\r\n  width: 100%;\r\n  border-top: 1px solid ${colors.mainColor};\r\n`;\r\n\r\nconst AboutPage = () => {\r\n  return (\r\n    <AboutPageAnimated>\r\n      <PageTitle centered>about me</PageTitle>\r\n      <ImageContainer>\r\n        <Image\r\n          src={image}\r\n          alt={\"drawing of me and my pets by @kumamaskie\"}\r\n        ></Image>\r\n        <Info>\r\n          <span>Gustavo Passos, 22 years old, Brazillian</span>\r\n          <span>currently working @ lambda3</span>\r\n        </Info>\r\n      </ImageContainer>\r\n      <Bio>\r\n        <p>\r\n          I’ve been programming for 5 years now, 4 of those as a professional\r\n          software developer in brazillian companies.\r\n        </p>\r\n        <p>\r\n          I’m always studying and developing new projects with different\r\n          technologies, specially games my defin\r\n        </p>\r\n      </Bio>\r\n      <NavigationButtons>\r\n        <LinkContainer>\r\n          <Item>\r\n            <ContactsButton></ContactsButton>\r\n          </Item>\r\n          <Item>\r\n            <Link to=\"/\">\r\n              <LinkButtonStyled>Return</LinkButtonStyled>\r\n            </Link>\r\n          </Item>\r\n        </LinkContainer>\r\n      </NavigationButtons>\r\n    </AboutPageAnimated>\r\n  );\r\n};\r\n\r\nexport default AboutPage;\r\n","import React from \"react\";\r\nimport Project from \"../../models/project\";\r\nimport styled from \"styled-components\";\r\nimport Tag from \"../carousel/slide/Tag\";\r\nimport { device } from \"../../shared/device\";\r\nimport { colors } from \"../../shared/colors\";\r\nimport LinkButton from \"../common/LinkButton\";\r\n\r\ninterface ProjectCardProps {\r\n  project: Project;\r\n}\r\n\r\nconst ProjectCardStyle = styled.div`\r\n  padding: 20px 0;\r\n  border-bottom: 1px solid ${colors.mainColor};\r\n  transition: 0.3s;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 30px 0;\r\n  }\r\n`;\r\n\r\nconst CardHeader = styled.div`\r\n  display: flow-root;\r\n  position: relative;\r\n`;\r\n\r\nconst ProjectTitle = styled.strong`\r\n  color: ${colors.mainColor};\r\n  float: left;\r\n  font-size: 1.3em;\r\n  position: absolute;\r\n  bottom: 0;\r\n`;\r\n\r\nconst TagContainerStyled = styled.div`\r\n  float: right;\r\n\r\n  div {\r\n    margin: 0;\r\n  }\r\n\r\n  div:first-child {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nconst ProjectDescription = styled.p`\r\n  clear: both;\r\n  padding: 20px 0 10px 0;\r\n  margin: 0;\r\n`;\r\n\r\nconst getProjectTags = (project: Project) => {\r\n  return project.tags.map((tag) => {\r\n    return <Tag>{tag}</Tag>;\r\n  });\r\n};\r\n\r\nconst LinkButtonStyled = styled(LinkButton)`\r\n  padding: 20px 0 0 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst ProjectCard = (props: ProjectCardProps) => {\r\n  return (\r\n    <ProjectCardStyle>\r\n      <CardHeader>\r\n        <ProjectTitle>{props.project.name}</ProjectTitle>\r\n        <TagContainerStyled>{getProjectTags(props.project)}</TagContainerStyled>\r\n      </CardHeader>\r\n      <ProjectDescription>\r\n        2D fast paced game inspired in hits like Castlevania SOTN and Hollow\r\n        Knight. Not a Metroidvania, though.\r\n      </ProjectDescription>\r\n      <LinkButtonStyled>check this project</LinkButtonStyled>\r\n    </ProjectCardStyle>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PageStyle from \"../common/PageStyle\";\r\nimport { AnimationDirection, GetAnimationStyle } from \"../../shared/animations\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport Project from \"../../models/project\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport LinkButton from \"../common/LinkButton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { device } from \"../../shared/device\";\r\n\r\nconst ProjectListPageStyled = styled(PageStyle)``;\r\n\r\nconst ProjectListPageAnimated = GetAnimationStyle(\r\n  ProjectListPageStyled,\r\n  AnimationDirection.FromRight\r\n);\r\n\r\nconst ProjectCardContainer = styled.section`\r\n  height: 90%;\r\n  overflow: auto;\r\n  padding: 20px;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 0 30px;\r\n  }\r\n`;\r\n\r\nconst mockProjects: Project[] = [\r\n  {\r\n    name: \"sketch\",\r\n    image: \"\",\r\n    imageAlt: \"\",\r\n    imageBig: \"\",\r\n    tags: [\"C#\", \"Unity\"],\r\n  },\r\n  {\r\n    name: \"blockchain\",\r\n    image: \"\",\r\n    imageAlt: \"\",\r\n    imageBig: \"\",\r\n    tags: [\"hyperledger\"],\r\n  },\r\n  { name: \"big\", image: \"\", imageAlt: \"\", imageBig: \"\", tags: [\"java\"] },\r\n  {\r\n    name: \"src racing game\",\r\n    image: \"\",\r\n    imageAlt: \"\",\r\n    imageBig: \"\",\r\n    tags: [\"unity\"],\r\n  },\r\n  { name: \"big\", image: \"\", imageAlt: \"\", imageBig: \"\", tags: [\"java\"] },\r\n  { name: \"big\", image: \"\", imageAlt: \"\", imageBig: \"\", tags: [\"java\"] },\r\n  { name: \"big\", image: \"\", imageAlt: \"\", imageBig: \"\", tags: [\"java\"] },\r\n];\r\n\r\nconst getProjectCards = () => {\r\n  return mockProjects.map((a: Project) => {\r\n    return <ProjectCard project={a}></ProjectCard>;\r\n  });\r\n};\r\n\r\nconst LinkStyled = styled(Link)`\r\n  height: 10%;\r\n`;\r\n\r\nconst ReturnButton = styled(LinkButton)`\r\n  width: 100%;\r\n  position: fixed;\r\n  bottom: 0;\r\n  box-shadow: 0px 3px 11px 0px #0000009c;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.4em;\r\n    padding: 3% 0;\r\n  }\r\n`;\r\n\r\nconst ProjectListPage = () => {\r\n  return (\r\n    <ProjectListPageAnimated>\r\n      <PageTitle centered>my projects</PageTitle>\r\n      <ProjectCardContainer>{getProjectCards()}</ProjectCardContainer>\r\n      <LinkStyled to=\"/\">\r\n        <ReturnButton>Return</ReturnButton>\r\n      </LinkStyled>\r\n    </ProjectListPageAnimated>\r\n  );\r\n};\r\n\r\nexport default ProjectListPage;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport styled from \"styled-components\";\r\nimport HomePage from \"./home/HomePage\";\r\nimport AboutPage from \"./AboutPage\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { LastLocationProvider } from \"react-router-last-location\";\r\nimport ProjectListPage from \"./project-list/ProjectListPage\";\r\n\r\nconst BodyGrid = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  max-width: 900px;\r\n  margin: auto;\r\n`;\r\n\r\nconst TransitionGroupStyled = styled(TransitionGroup)`\r\n  height: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Body = () => {\r\n  return (\r\n    <BodyGrid>\r\n      <Header></Header>\r\n      <HashRouter basename=\"/\">\r\n        <LastLocationProvider>\r\n          <Route\r\n            render={({ location }) => (\r\n              <TransitionGroupStyled>\r\n                <CSSTransition\r\n                  key={location.pathname}\r\n                  classNames=\"animation\"\r\n                  timeout={400}\r\n                >\r\n                  <Switch location={location}>\r\n                    <Route exact path=\"/\" component={HomePage}></Route>\r\n                    <Route exact path=\"/about\" component={AboutPage}></Route>\r\n                    <Route exact path=\"/projects\">\r\n                      <ProjectListPage></ProjectListPage>\r\n                    </Route>\r\n                  </Switch>\r\n                </CSSTransition>\r\n              </TransitionGroupStyled>\r\n            )}\r\n          ></Route>\r\n        </LastLocationProvider>\r\n      </HashRouter>\r\n    </BodyGrid>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Body from \"./components/Body\";\n\nconst App = () => {\n  return <Body></Body>;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\n"],"sourceRoot":""}