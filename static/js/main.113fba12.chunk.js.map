{"version":3,"sources":["images/contacts/gmail.png","images/contacts/github.png","images/contacts/linkedin.png","images/projects/sketch/sketch-carousel.png","images/projects/sketch/sketch-carousel-big.png","images/me/EubyKuma.png","shared/colors.tsx","shared/device.ts","data/contacts.ts","components/header/HeaderContacts.tsx","components/common/LinkButton.tsx","components/header/HeaderMenu.tsx","components/header/Header.tsx","components/common/PageStyle.tsx","shared/animations.ts","components/common/PageTitle.tsx","components/project/tag/Tag.tsx","components/project/list/ProjectCard.tsx","data/projects/sketch/SketchDescription.tsx","data/projects/sketch/sketch.ts","data/projects/projectList.ts","components/common/ReturnButton.tsx","shared/locationToAnim.ts","shared/dynamicAnimation.ts","models/routes.ts","components/project/list/ProjectListPage.tsx","components/home/carousel/slide/SlideDescription.tsx","components/project/tag/tagList.tsx","components/home/carousel/slide/SlideContent.tsx","components/home/carousel/CarouselContent.tsx","components/home/HomePage.tsx","components/contacts/ContactCard.tsx","components/contacts/ContactsModal.tsx","components/contacts/ContactsButton.tsx","components/about/NavigationButtons.tsx","components/about/AboutPage.tsx","components/project/view/ProjectViewPage.tsx","components/Routes.tsx","components/Body.tsx","App.tsx","index.tsx"],"names":["module","exports","colors","deviceSize","isInDesktop","currentWidth","device","tablet","desktop","contacts","image","gmailLogo","message","contactText","linkedinLogo","githubLogo","ContactContainer","styled","div","ContactIcon","img","HeaderContacts","map","contact","key","src","LinkButton","button","HeaderMenuStyled","section","LinkContainer","ul","Item","li","MenuButton","props","border","HeaderMenu","to","Background","header","InfoContainer","NameContainer","DevName","JobTitle","withResizeDetector","onClick","createHashHistory","push","width","PageStyle","AnimationDirection","GetAnimator","component","GetTranslateFromTransform","transform","GetAnimationTransform","animationDirection","FromUp","x","y","FromDown","FromLeft","FromRight","TitleContent","centered","PageTitle","children","TagName","Tag","ProjectCardStyle","CardHeader","ProjectTitle","strong","TagContainerStyled","ProjectDescription","p","LinkButtonStyled","ProjectCard","project","name","tags","tag","projectId","id","SketchDescription","sketch","imageAlt","imageBig","imgBig","container","projectList","LinkStyled","Link","ReturnButtonStyled","getLastVisited","lastLocation","pathname","ReturnButton","useLastLocation","returnToHome","getLocationToAnim","currentLocation","pageHashLocation","replace","getAnimationBasedOnLocation","animation","homePathHash","projectListPathHash","ProjectListPageAnimated","ProjectCardContainer","ProjectListPage","location","window","hash","animationTransform","animationMap","getAnimationMap","a","DescriptionContainer","Title","Description","SlideDescription","projectName","getTagsInProject","getTags","ImageContainer","TagContainer","Image","SlideContent","screen","alt","CarouselContainer","CarouselStyled","Carousel","CarouselContent","showArrows","showThumbs","showStatus","showIndicators","emulateTouch","autoPlay","interval","stopOnHover","infiniteLoop","value","i","index","HomePageAnimated","ContactCardStyled","ContactImage","ContactInfo","ContactCard","ModalBackground","ModalWrapper","ContactsContainer","ContactsModal","modalMarkup","onClose","ReactDOM","createPortal","document","body","ContactsButton","React","useState","modalIsOpen","setIsOpen","CSSTransition","in","classNames","unmountOnExit","timeout","Navigation","nav","NavigationButtons","AboutPageAnimated","AnimationTransform","Info","Bio","AboutPage","ProjectViewPageAnimated","ProjectText","ProjectViewPage","Number","filter","Routes","exact","path","handleWidth","render","match","params","BodyGrid","TransitionGroupStyled","TransitionGroup","Body","basename","App","getElementById"],"mappings":"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","file":"static/js/main.113fba12.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gmail.0202b153.png\";","module.exports = __webpack_public_path__ + \"static/media/github.45f3e0f1.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.1dbd8941.png\";","module.exports = __webpack_public_path__ + \"static/media/sketch-carousel.7b5eb98f.png\";","module.exports = __webpack_public_path__ + \"static/media/sketch-carousel-big.86fcbb81.png\";","module.exports = __webpack_public_path__ + \"static/media/EubyKuma.0bdb45f3.png\";","const colors = {\r\n  mainColor: \"#7673ff\",\r\n  mainTextColor: \"#fff\",\r\n  mainBackgroundColor: \"#f1f1f1\",\r\n  secondColor: \"#6B68EE\",\r\n  secondBackgroundColor: \"#f7f7f7\",\r\n\r\n  buttonClickedColor: \"#dedede\",\r\n};\r\n\r\nconst buttonColors = {\r\n  onHoverColor: \"#e6e6e6\",\r\n};\r\n\r\nexport { colors, buttonColors };\r\n","export const deviceSize = {\r\n  tablet: 500,\r\n  desktop: 1200,\r\n};\r\n\r\nexport function isInDesktop(currentWidth: number) {\r\n  return currentWidth >= deviceSize.desktop;\r\n}\r\n\r\nexport const device = {\r\n  tablet: `(min-width: ${deviceSize.tablet}px)`,\r\n  desktop: `(min-width: ${deviceSize.desktop}px)`,\r\n};\r\n","import Contact from \"../models/contact\";\r\nimport gmailLogo from \"../images/contacts/gmail.png\";\r\nimport githubLogo from \"../images/contacts/github.png\";\r\nimport linkedinLogo from \"../images/contacts/linkedin.png\";\r\n\r\nexport const contacts: Contact[] = [\r\n  {\r\n    image: gmailLogo,\r\n    message: \"mail me\",\r\n    contactText: \"theguspassos@gmail.com\",\r\n  },\r\n  {\r\n    image: linkedinLogo,\r\n    message: \"connect with me\",\r\n    contactText: \"linkedin.com/in/theguspassos/\",\r\n  },\r\n  {\r\n    image: githubLogo,\r\n    message: \"code with me\",\r\n    contactText: \"github/theguspassos\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { contacts } from \"../../data/contacts\";\r\nimport Contact from \"../../models/contact\";\r\n\r\nconst ContactContainer = styled.div`\r\n  width: 50%;\r\n  margin: auto;\r\n  display: flex;\r\n  flex: 1;\r\n`;\r\n\r\nconst ContactIcon = styled.img`\r\n  opacity: 0.3;\r\n  width: 20%;\r\n  margin: auto;\r\n`;\r\n\r\nconst getContacts = () => {\r\n  return contacts.map((contact: Contact, key: number) => {\r\n    return <ContactIcon src={contact.image} key={key}></ContactIcon>;\r\n  });\r\n};\r\n\r\nconst HeaderContacts = () => {\r\n  return <ContactContainer>{getContacts()}</ContactContainer>;\r\n};\r\n\r\nexport default HeaderContacts;\r\n","import styled from \"styled-components\";\r\nimport { device } from \"../../shared/device\";\r\nimport { colors } from \"../../shared/colors\";\r\n\r\nconst LinkButton = styled.button`\r\n  color: ${colors.mainColor};\r\n  background: ${colors.secondBackgroundColor};\r\n  font-size: 1.2em;\r\n  border: none;\r\n  padding: 4% 0;\r\n\r\n  :focus,\r\n  :hover {\r\n    cursor: pointer;\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.4em;\r\n  }\r\n`;\r\n\r\nexport default LinkButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LinkButton from \"../common/LinkButton\";\r\nimport { colors } from \"../../shared/colors\";\r\n\r\nconst HeaderMenuStyled = styled.section`\r\n  padding: 15% 15% 0 15%;\r\n  height: 25%;\r\n`;\r\n\r\nconst LinkContainer = styled.ul`\r\n  margin: auto;\r\n  padding: 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  text-align: center;\r\n  list-style: none;\r\n`;\r\n\r\ninterface ButtonProps {\r\n  border?: boolean;\r\n}\r\n\r\nconst MenuButton = styled(LinkButton)`\r\n  width: 100%;\r\n  padding: 7% 0;\r\n  color: #fff;\r\n  background: ${colors.mainColor};\r\n  border-top: ${(props: ButtonProps) =>\r\n    props.border ? \"solid 1px white\" : \"none\"};\r\n`;\r\n\r\nconst HeaderMenu = () => {\r\n  return (\r\n    <HeaderMenuStyled>\r\n      <LinkContainer>\r\n        <Item>\r\n          <Link to=\"/projects\">\r\n            <MenuButton>My other projects</MenuButton>\r\n          </Link>\r\n        </Item>\r\n        <Item>\r\n          <Link to=\"/about\">\r\n            <MenuButton border>About Me</MenuButton>\r\n          </Link>\r\n        </Item>\r\n      </LinkContainer>\r\n    </HeaderMenuStyled>\r\n  );\r\n};\r\n\r\nexport default HeaderMenu;\r\n","import React, { Fragment } from \"react\";\r\nimport { colors } from \"../../shared/colors\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { device, isInDesktop } from \"../../shared/device\";\r\nimport HeaderContacts from \"./HeaderContacts\";\r\nimport { withResizeDetector } from \"react-resize-detector\";\r\nimport ResizeListenerProps from \"../../shared/ResizeListenerProps\";\r\nimport HeaderMenu from \"./HeaderMenu\";\r\nimport { createHashHistory } from \"history\";\r\n\r\nconst Background = styled.header`\r\n  width: 100%;\r\n  background-color: ${colors.mainColor};\r\n  color: ${colors.mainTextColor};\r\n  z-index: 10;\r\n\r\n  @media ${device.desktop} {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 350px;\r\n    height: 100%;\r\n    float: left;\r\n  }\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  padding: 20px;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 30px;\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    height: 50%;\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst NameContainer = styled.div`\r\n  margin: auto;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst DevName = styled.div`\r\n  font-size: 1em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.4em;\r\n  }\r\n`;\r\n\r\nconst JobTitle = styled.div`\r\n  font-size: 1.5em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.9em;\r\n  }\r\n`;\r\n\r\nconst goToHome = () => {\r\n  const history = createHashHistory();\r\n  history.push(\"/\");\r\n};\r\n\r\ninterface HeaderProps extends ResizeListenerProps {}\r\n\r\nconst Header = (props: HeaderProps) => {\r\n  return (\r\n    <Background>\r\n      <InfoContainer>\r\n        <NameContainer onClick={() => goToHome()}>\r\n          <DevName>Gustavo Passos</DevName>\r\n          <JobTitle>Game & Software Developer</JobTitle>\r\n        </NameContainer>\r\n      </InfoContainer>\r\n      {isInDesktop(props.width) ? (\r\n        <Fragment>\r\n          <HeaderMenu></HeaderMenu>\r\n          <HeaderContacts></HeaderContacts>\r\n        </Fragment>\r\n      ) : null}\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default withResizeDetector(Header);\r\n","import styled from \"styled-components\";\r\n\r\nconst PageStyle = styled.section`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n`;\r\n\r\nexport default PageStyle;\r\n","import styled, { AnyStyledComponent } from \"styled-components\";\r\n\r\nexport const animationSpeed = 500;\r\n\r\nexport enum AnimationDirection {\r\n  FromUp,\r\n  FromDown,\r\n  FromRight,\r\n  FromLeft,\r\n}\r\n\r\nexport interface Transform {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface AnimatorProps {\r\n  transform: Transform;\r\n}\r\n\r\nexport const GetAnimator = (component: AnyStyledComponent) => {\r\n  return styled(component)`\r\n    &.animation-enter {\r\n      transform: ${(props: AnimatorProps) =>\r\n        GetTranslateFromTransform(props.transform)};\r\n    }\r\n\r\n    &.animation-enter-active {\r\n      transform: translateX(0);\r\n      transition-timing-function: ease-in-out;\r\n      transition: transform ${animationSpeed}ms;\r\n    }\r\n\r\n    &.animation-exit {\r\n      transform: translateX(0);\r\n    }\r\n\r\n    &.animation-exit-active {\r\n      transform: ${(props: AnimatorProps) =>\r\n        GetTranslateFromTransform(props.transform)};\r\n      transition-timing-function: ease-in-out;\r\n      transition: transform ${animationSpeed}ms;\r\n    }\r\n  `;\r\n};\r\n\r\nexport const GetAnimationTransform = (\r\n  animationDirection: AnimationDirection\r\n): Transform => {\r\n  switch (animationDirection) {\r\n    case AnimationDirection.FromUp:\r\n      return { x: 0, y: -100 };\r\n\r\n    case AnimationDirection.FromDown:\r\n      return { x: 0, y: 100 };\r\n\r\n    case AnimationDirection.FromLeft:\r\n      return { x: -100, y: 0 };\r\n\r\n    case AnimationDirection.FromRight:\r\n      return { x: 100, y: 0 };\r\n  }\r\n};\r\n\r\nexport const GetTranslateFromTransform = (transform: Transform): string => {\r\n  return `translate(${transform.x}%, ${transform.y}%)`;\r\n};\r\n","import React from \"react\";\r\nimport { colors } from \"../../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../shared/device\";\r\n\r\ninterface TitleProps {\r\n  centered?: boolean;\r\n}\r\n\r\nconst TitleContent = styled.div`\r\n  background: ${colors.secondColor};\r\n  color: ${colors.mainTextColor};\r\n  padding: 10px 20px;\r\n  font-size: 0.95em;\r\n  text-align: ${(props: TitleProps) => (props.centered ? \"center\" : \"unset\")};\r\n  box-shadow: 0px 3px 11px 0px #0000009c;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 10px 30px;\r\n    font-size: 1.4em;\r\n    box-shadow: none;\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    text-align: center;\r\n    color: ${colors.mainColor};\r\n    background: ${colors.secondBackgroundColor};\r\n    margin-bottom: 40px;\r\n  }\r\n`;\r\n\r\ninterface PageTitleProps {\r\n  children: string;\r\n  centered?: boolean;\r\n}\r\n\r\nconst PageTitle = (props: PageTitleProps) => {\r\n  return (\r\n    <TitleContent centered={props.centered}>{props.children}</TitleContent>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from \"react\";\r\nimport { colors } from \"../../../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../shared/device\";\r\n\r\nconst TagName = styled.div`\r\n  font-size: 0.8em;\r\n  background: ${colors.mainBackgroundColor};\r\n  color: ${colors.mainColor};\r\n  text-align: center;\r\n  min-width: 60px;\r\n  margin: 10px;\r\n  padding: 3px 7px;\r\n  border: 3px solid;\r\n  border-color: ${colors.mainColor};\r\n  border-radius: 50px;\r\n  float: right;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.2em;\r\n    min-width: 90px;\r\n    margin: 15px;\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    font-size: 1.3em;\r\n    padding: 5px 20px;\r\n  }\r\n`;\r\n\r\ninterface TagProps {\r\n  children: string;\r\n}\r\n\r\nconst Tag = (props: TagProps): React.ReactElement => {\r\n  return <TagName>{props.children}</TagName>;\r\n};\r\n\r\nexport default Tag;\r\n","import React from \"react\";\r\nimport Project from \"../../../models/project\";\r\nimport styled from \"styled-components\";\r\nimport Tag from \"../tag/Tag\";\r\nimport { device } from \"../../../shared/device\";\r\nimport { colors } from \"../../../shared/colors\";\r\nimport LinkButton from \"../../common/LinkButton\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface ProjectCardProps {\r\n  project: Project;\r\n}\r\n\r\nconst ProjectCardStyle = styled.div`\r\n  padding: 20px 0;\r\n  border-bottom: 1px solid ${colors.mainColor};\r\n  transition: 0.3s;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 30px 0;\r\n  }\r\n`;\r\n\r\nconst CardHeader = styled.div`\r\n  display: flow-root;\r\n  position: relative;\r\n`;\r\n\r\nconst ProjectTitle = styled.strong`\r\n  color: ${colors.mainColor};\r\n  float: left;\r\n  font-size: 1.3em;\r\n  position: absolute;\r\n  bottom: 0;\r\n`;\r\n\r\nconst TagContainerStyled = styled.div`\r\n  float: right;\r\n\r\n  div {\r\n    margin: 0;\r\n  }\r\n\r\n  div:first-child {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nconst ProjectDescription = styled.p`\r\n  clear: both;\r\n  padding: 20px 0 10px 0;\r\n  margin: 0;\r\n`;\r\n\r\nconst getProjectTags = (project: Project) => {\r\n  return project.tags.map((tag: string, key: number) => {\r\n    return <Tag key={key}>{tag}</Tag>;\r\n  });\r\n};\r\n\r\nconst LinkButtonStyled = styled(LinkButton)`\r\n  padding: 20px 0 0 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst getProjectUrl = (projectId: number) => {\r\n  return \"project/\" + projectId;\r\n};\r\n\r\nconst ProjectCard = (props: ProjectCardProps) => {\r\n  return (\r\n    <ProjectCardStyle>\r\n      <CardHeader>\r\n        <ProjectTitle>{props.project.name}</ProjectTitle>\r\n        <TagContainerStyled>{getProjectTags(props.project)}</TagContainerStyled>\r\n      </CardHeader>\r\n      <ProjectDescription>\r\n        2D fast paced game inspired in hits like Castlevania SOTN and Hollow\r\n        Knight. Not a Metroidvania, though.\r\n      </ProjectDescription>\r\n      <Link to={getProjectUrl(props.project.id)}>\r\n        <LinkButtonStyled>check this project</LinkButtonStyled>\r\n      </Link>\r\n    </ProjectCardStyle>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React from \"react\";\r\n\r\nconst SketchDescription = () => {\r\n  return <div>this is sketch</div>;\r\n};\r\n\r\nexport default SketchDescription;\r\n","import Project from \"../../../models/project\";\r\nimport img from \"../../../images/projects/sketch/sketch-carousel.png\";\r\nimport imgBig from \"../../../images/projects/sketch/sketch-carousel-big.png\";\r\nimport SketchDescription from \"./SketchDescription\";\r\n\r\nexport const sketch: Project = {\r\n  id: 1,\r\n  name: \"sketch\",\r\n  tags: [\"c#\", \"Unity\"],\r\n  imageAlt: \"sketch gameplay screenshot\",\r\n  image: img,\r\n  imageBig: imgBig,\r\n  container: SketchDescription,\r\n};\r\n","import Project from \"../../models/project\";\r\nimport { sketch } from \"./sketch/sketch\";\r\n\r\nexport const projectList: Project[] = [sketch];\r\n\r\nexport const getProjectById = (id: number) => {\r\n  return projectList.filter((a) => a.id === id)[0];\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../shared/device\";\r\nimport LinkButton from \"./LinkButton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLastLocation, LastLocationType } from \"react-router-last-location\";\r\n\r\nconst LinkStyled = styled(Link)`\r\n  height: 10%;\r\n`;\r\n\r\nconst ReturnButtonStyled = styled(LinkButton)`\r\n  width: 100%;\r\n  position: fixed;\r\n  bottom: 0;\r\n  box-shadow: 0px 3px 11px 0px #0000009c;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.4em;\r\n    padding: 3% 0;\r\n  }\r\n`;\r\n\r\nconst getLastVisited = (lastLocation: LastLocationType): string => {\r\n  if (lastLocation) return lastLocation.pathname;\r\n  return \"/\";\r\n};\r\n\r\ninterface ReturnProps {\r\n  returnToHome?: boolean;\r\n}\r\n\r\nconst ReturnButton = (props: ReturnProps) => {\r\n  const lastLocation = useLastLocation();\r\n\r\n  return (\r\n    <LinkStyled to={props.returnToHome ? \"/\" : getLastVisited(lastLocation)}>\r\n      <ReturnButtonStyled>Return</ReturnButtonStyled>\r\n    </LinkStyled>\r\n  );\r\n};\r\n\r\nexport default ReturnButton;\r\n","export const getLocationToAnim = (\r\n  currentLocation: string,\r\n  lastLocation: string | undefined,\r\n  pageHashLocation: string\r\n) => {\r\n  return currentLocation === pageHashLocation\r\n    ? lastLocation ?? \"\"\r\n    : currentLocation.replace(\"#\", \"\");\r\n};\r\n","import { AnimationDirection, GetAnimationTransform } from \"./animations\";\r\n\r\nexport interface LocationAnimationMap {\r\n  [location: string]: AnimationDirection;\r\n}\r\n\r\nexport const getAnimationBasedOnLocation = (\r\n  map: LocationAnimationMap,\r\n  currentLocation: string\r\n) => {\r\n  const animation = map[currentLocation] ?? map[\"default\"];\r\n  return GetAnimationTransform(animation);\r\n};\r\n","export const homePath = \"/\";\r\nexport const homePathHash = `#${homePath}`;\r\n\r\nexport const aboutPath = \"/about\";\r\nexport const aboutPathHash = `#${aboutPath}`;\r\n\r\nexport const projectListPath = \"/projects\";\r\nexport const projectListPathHash = `#${projectListPath}`;\r\n\r\nexport const projectPath = \"/project/:id\";\r\nexport const projectPathHash = `#${projectPath}`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PageStyle from \"../../common/PageStyle\";\r\nimport {\r\n  AnimationDirection,\r\n  GetAnimator,\r\n  GetAnimationTransform,\r\n} from \"../../../shared/animations\";\r\nimport PageTitle from \"../../common/PageTitle\";\r\nimport Project from \"../../../models/project\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport { device } from \"../../../shared/device\";\r\nimport { projectList } from \"../../../data/projects/projectList\";\r\nimport ReturnButton from \"../../common/ReturnButton\";\r\nimport { getLocationToAnim } from \"../../../shared/locationToAnim\";\r\nimport {\r\n  LocationAnimationMap,\r\n  getAnimationBasedOnLocation,\r\n} from \"../../../shared/dynamicAnimation\";\r\nimport {\r\n  homePath,\r\n  homePathHash,\r\n  projectListPathHash,\r\n} from \"../../../models/routes\";\r\nimport { useLastLocation } from \"react-router-last-location\";\r\n\r\nconst ProjectListPageAnimated = GetAnimator(PageStyle);\r\n\r\nconst ProjectCardContainer = styled.section`\r\n  height: 90%;\r\n  overflow: auto;\r\n  padding: 20px;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 0 30px;\r\n  }\r\n`;\r\n\r\nconst getAnimationMap = () => {\r\n  const animationMap: LocationAnimationMap = {};\r\n  animationMap[homePath] = AnimationDirection.FromRight;\r\n  animationMap[\"default\"] = AnimationDirection.FromDown;\r\n\r\n  return animationMap;\r\n};\r\n\r\nconst getProjectCards = () => {\r\n  return projectList.map((a: Project, key: number) => {\r\n    return <ProjectCard project={a} key={key}></ProjectCard>;\r\n  });\r\n};\r\n\r\nconst ProjectListPage = () => {\r\n  const location = getLocationToAnim(\r\n    window.location.hash,\r\n    useLastLocation()?.pathname,\r\n    projectListPathHash\r\n  );\r\n\r\n  const animationTransform = getAnimationBasedOnLocation(\r\n    getAnimationMap(),\r\n    location\r\n  );\r\n\r\n  return (\r\n    <ProjectListPageAnimated transform={animationTransform}>\r\n      <PageTitle centered>my projects</PageTitle>\r\n      <ProjectCardContainer>{getProjectCards()}</ProjectCardContainer>\r\n      <ReturnButton returnToHome></ReturnButton>\r\n    </ProjectListPageAnimated>\r\n  );\r\n};\r\n\r\nexport default ProjectListPage;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../../shared/device\";\r\nimport { colors } from \"../../../../shared/colors\";\r\n\r\nconst DescriptionContainer = styled.div`\r\n  display: block;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  @media ${device.tablet} {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: -1;\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst Title = styled.strong`\r\n  background: ${colors.mainColor};\r\n  color: #fff;\r\n  font-size: 1.1em;\r\n  letter-spacing: 5px;\r\n  text-transform: uppercase;\r\n  border: 1px solid #c2c2c2;\r\n  position: absolute;\r\n  top: -35px;\r\n  left: 0;\r\n  padding: 10px 20px;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.3em;\r\n    top: -60px;\r\n    padding: 20px 30px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.div`\r\n  font-size: 0.9em;\r\n  background: #e6e6e6;\r\n  padding: 10px 20px;\r\n  text-align: left;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.2em;\r\n    border-radius: 0 30px 0 0;\r\n    padding: 20px 30px;\r\n  }\r\n`;\r\n\r\nconst SlideDescription = (props: SlideDescriptionProps) => {\r\n  return (\r\n    <DescriptionContainer>\r\n      <Description>\r\n        My firt project made with commercial intent. There’s a playable demo\r\n        available\r\n      </Description>\r\n      <Title>{props.projectName}</Title>\r\n    </DescriptionContainer>\r\n  );\r\n};\r\n\r\ninterface SlideDescriptionProps {\r\n  projectName: string;\r\n}\r\n\r\nexport default SlideDescription;\r\n","import React from \"react\";\r\nimport Project from \"../../../models/project\";\r\nimport Tag from \"./Tag\";\r\n\r\nexport const getTagsInProject = (project: Project) => {\r\n  return getTags(project.tags);\r\n};\r\n\r\nexport const getTags = (tags: string[]) => {\r\n  return tags.map((tag: string, key: number) => {\r\n    return <Tag key={key}>{tag}</Tag>;\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SlideDescription from \"./SlideDescription\";\r\nimport { createHashHistory } from \"history\";\r\nimport { getTagsInProject } from \"../../../project/tag/tagList\";\r\nimport { colors } from \"../../../../shared/colors\";\r\nimport Project from \"../../../../models/project\";\r\nimport { deviceSize } from \"../../../../shared/device\";\r\n\r\nconst ImageContainer = styled.section`\r\n  position: relative;\r\n  display: block;\r\n  background-color: ${colors.mainBackgroundColor};\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst TagContainer = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  margin: auto;\r\n`;\r\n\r\ninterface ProjectSlideProps {\r\n  index: number;\r\n  project: Project;\r\n}\r\n\r\nconst getImageByDeviceSize = (project: Project) => {\r\n  return window.screen.width < deviceSize.tablet\r\n    ? project.image\r\n    : project.imageBig;\r\n};\r\n\r\nconst goToProjectPage = (projectId: number) => {\r\n  const history = createHashHistory();\r\n  history.push(\"project/\" + projectId);\r\n};\r\n\r\nconst SlideContent = (props: ProjectSlideProps) => {\r\n  return (\r\n    <ImageContainer onClick={() => goToProjectPage(1)}>\r\n      <TagContainer>{getTagsInProject(props.project)}</TagContainer>\r\n      <Image\r\n        src={getImageByDeviceSize(props.project)}\r\n        alt={props.project.imageAlt}\r\n      ></Image>\r\n      <SlideDescription projectName={props.project.name}></SlideDescription>\r\n    </ImageContainer>\r\n  );\r\n};\r\n\r\nexport default SlideContent;\r\n","import React from \"react\";\r\nimport SlideContent from \"./slide/SlideContent\";\r\nimport styled from \"styled-components\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { projectList } from \"../../../data/projects/projectList\";\r\nimport Project from \"../../../models/project\";\r\nimport { isInDesktop, device } from \"../../../shared/device\";\r\n\r\nconst CarouselContainer = styled.div`\r\n  z-index: 10;\r\n`;\r\n\r\nconst CarouselStyled = styled(Carousel)`\r\n  .control-dots {\r\n    top: 0;\r\n    bottom: unset;\r\n  }\r\n`;\r\n\r\nfunction projectSlides() {\r\n  return projectList.map((value: Project, i: number) => {\r\n    return <SlideContent index={i} project={value} key={i}></SlideContent>;\r\n  });\r\n}\r\n\r\nconst CarouselContent = () => {\r\n  return (\r\n    <CarouselContainer>\r\n      <CarouselStyled\r\n        showArrows={isInDesktop(10)}\r\n        showThumbs={false}\r\n        showStatus={false}\r\n        showIndicators\r\n        emulateTouch\r\n        autoPlay\r\n        interval={4000}\r\n        stopOnHover\r\n        infiniteLoop\r\n      >\r\n        {projectSlides()}\r\n      </CarouselStyled>\r\n    </CarouselContainer>\r\n  );\r\n};\r\n\r\nexport default CarouselContent;\r\n","import React from \"react\";\r\nimport { GetAnimator, AnimationDirection } from \"../../shared/animations\";\r\nimport { useLastLocation } from \"react-router-last-location\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport PageStyle from \"../common/PageStyle\";\r\nimport CarouselContent from \"./carousel/CarouselContent\";\r\nimport {\r\n  LocationAnimationMap,\r\n  getAnimationBasedOnLocation,\r\n} from \"../../shared/dynamicAnimation\";\r\nimport { aboutPath, projectListPath, homePathHash } from \"../../models/routes\";\r\nimport { getLocationToAnim } from \"../../shared/locationToAnim\";\r\nimport { withResizeDetector } from \"react-resize-detector\";\r\nimport ResizeListenerProps from \"../../shared/ResizeListenerProps\";\r\nimport { device } from \"../../shared/device\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HomePageStyled = styled(PageStyle)`\r\n  @media ${device.desktop} {\r\n    position: relative;\r\n    margin: auto;\r\n    width: 75%;\r\n    height: unset;\r\n    max-width: 800px;\r\n  }\r\n`;\r\n\r\nconst HomePageAnimated = GetAnimator(HomePageStyled);\r\n\r\nconst getAnimationMap = () => {\r\n  const animationMap: LocationAnimationMap = {};\r\n  animationMap[aboutPath] = AnimationDirection.FromRight;\r\n  animationMap[projectListPath] = AnimationDirection.FromLeft;\r\n  animationMap[\"default\"] = AnimationDirection.FromDown;\r\n\r\n  return animationMap;\r\n};\r\n\r\ninterface HomeProps extends ResizeListenerProps {}\r\n\r\nconst HomePage = (props: HomeProps) => {\r\n  const location = getLocationToAnim(\r\n    window.location.hash,\r\n    useLastLocation()?.pathname,\r\n    homePathHash\r\n  );\r\n\r\n  const animationTransform = getAnimationBasedOnLocation(\r\n    getAnimationMap(),\r\n    location\r\n  );\r\n\r\n  return (\r\n    <HomePageAnimated transform={animationTransform}>\r\n      <PageTitle>some of the projects I've worked on</PageTitle>\r\n      <CarouselContent></CarouselContent>\r\n      {/* <Menu></Menu> */}\r\n    </HomePageAnimated>\r\n  );\r\n};\r\n\r\nexport default withResizeDetector(HomePage);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ContactCardStyled = styled.div`\r\n  padding: 5% 10%;\r\n  display: flex;\r\n  font-size: 0.9em;\r\n`;\r\n\r\nconst ContactImage = styled.img`\r\n  width: 20%;\r\n  height: 20%;\r\n`;\r\n\r\nconst ContactInfo = styled.div`\r\n  align-self: flex-end;\r\n\r\n  span,\r\n  strong {\r\n    display: block;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\ninterface ContactCardProps {\r\n  image: string;\r\n  message: string;\r\n  contact: string;\r\n}\r\n\r\nconst ContactCard = (props: ContactCardProps) => {\r\n  return (\r\n    <ContactCardStyled>\r\n      <ContactImage src={props.image}></ContactImage>\r\n      <ContactInfo>\r\n        <strong>{props.message}</strong>\r\n        <span>{props.contact}</span>\r\n      </ContactInfo>\r\n    </ContactCardStyled>\r\n  );\r\n};\r\n\r\nexport default ContactCard;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components\";\r\nimport { animationSpeed } from \"../../shared/animations\";\r\nimport ContactCard from \"./ContactCard\";\r\nimport LinkButton from \"../common/LinkButton\";\r\nimport { contacts } from \"../../data/contacts\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport { colors } from \"../../shared/colors\";\r\nimport Contact from \"../../models/contact\";\r\n\r\nconst ModalBackground = styled.div`\r\n  background: rgba(0, 0, 0, 0.2);\r\n  height: 100%;\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 99999;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &.animation-enter {\r\n    opacity: 0;\r\n\r\n    > div:first-child {\r\n      transform: translate(0, 100%);\r\n    }\r\n  }\r\n\r\n  &.animation-enter-active {\r\n    opacity: 1;\r\n    transition: opacity ${animationSpeed}ms;\r\n\r\n    > div:first-child {\r\n      transform: translate(0, 0);\r\n      transition-timing-function: ease-in-out;\r\n      transition: transform ${animationSpeed}ms;\r\n    }\r\n  }\r\n\r\n  &.animation-exit {\r\n    opacity: 1;\r\n\r\n    > div:first-child {\r\n      transform: translate(0, 0);\r\n    }\r\n  }\r\n\r\n  &.animation-exit-active {\r\n    opacity: 0;\r\n    transition: opacity ${animationSpeed}ms;\r\n\r\n    > div:first-child {\r\n      transform: translate(0, 100%);\r\n      transition-timing-function: ease-in-out;\r\n      transition: transform ${animationSpeed}ms;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ModalWrapper = styled.div`\r\n  background-color: #fff;\r\n  z-index: 999999;\r\n  width: 100%;\r\n  max-width: 500px;\r\n`;\r\n\r\nconst ContactsContainer = styled.div`\r\n  padding: 20px;\r\n\r\n  > div:nth-child(2) {\r\n    border-top: 1px solid ${colors.mainColor};\r\n    border-bottom: 1px solid ${colors.mainColor};\r\n  }\r\n`;\r\n\r\nconst getContacts = () => {\r\n  return contacts.map((contact: Contact, key: number) => {\r\n    return (\r\n      <ContactCard\r\n        key={key}\r\n        contact={contact.contactText}\r\n        image={contact.image}\r\n        message={contact.message}\r\n      ></ContactCard>\r\n    );\r\n  });\r\n};\r\n\r\nconst LinkButtonStyled = styled(LinkButton)`\r\n  width: 100%;\r\n  background-color: #fff;\r\n  box-shadow: 0px 3px 11px 0px #0000009c;\r\n  padding: 10px 20px;\r\n`;\r\n\r\ninterface ContactsModalProps {\r\n  onClose(): void;\r\n}\r\n\r\nconst ContactsModal = (props: ContactsModalProps) => {\r\n  const modalMarkup = (\r\n    <ModalBackground>\r\n      <ModalWrapper>\r\n        <PageTitle centered>My Contacts</PageTitle>\r\n        <ContactsContainer>{getContacts()}</ContactsContainer>\r\n        <LinkButtonStyled onClick={() => props.onClose()}>\r\n          Close\r\n        </LinkButtonStyled>\r\n      </ModalWrapper>\r\n    </ModalBackground>\r\n  );\r\n\r\n  return ReactDOM.createPortal(modalMarkup, document.body);\r\n};\r\n\r\nexport default ContactsModal;\r\n","import React from \"react\";\r\nimport LinkButton from \"../common/LinkButton\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { animationSpeed } from \"../../shared/animations\";\r\nimport ContactsModal from \"./ContactsModal\";\r\n\r\nconst ContactsButton = () => {\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <LinkButton onClick={() => setIsOpen(true)}>My Contacts</LinkButton>\r\n      <CSSTransition\r\n        in={modalIsOpen}\r\n        classNames=\"animation\"\r\n        unmountOnExit\r\n        timeout={animationSpeed}\r\n      >\r\n        <ContactsModal onClose={() => setIsOpen(false)}></ContactsModal>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../shared/device\";\r\nimport LinkButton from \"../common/LinkButton\";\r\nimport { colors } from \"../../shared/colors\";\r\nimport ContactsButton from \"../contacts/ContactsButton\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = styled.nav`\r\n  flex: 1;\r\n  display: flex;\r\n`;\r\n\r\nconst LinkContainer = styled.ul`\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  width: 100%;\r\n  font-size: 1.1em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 0.9em;\r\n  }\r\n`;\r\n\r\nconst Item = styled.li`\r\n  text-align: center;\r\n  list-style: none;\r\n`;\r\n\r\nconst LinkButtonStyled = styled(LinkButton)`\r\n  width: 70%;\r\n  border-top: 1px solid ${colors.mainColor};\r\n`;\r\n\r\nconst NavigationButtons = () => {\r\n  return (\r\n    <Navigation>\r\n      <LinkContainer>\r\n        <Item>\r\n          <ContactsButton></ContactsButton>\r\n        </Item>\r\n        <Item>\r\n          <Link to=\"/\">\r\n            <LinkButtonStyled>Return</LinkButtonStyled>\r\n          </Link>\r\n        </Item>\r\n      </LinkContainer>\r\n    </Navigation>\r\n  );\r\n};\r\n\r\nexport default NavigationButtons;\r\n","import React from \"react\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  AnimationDirection,\r\n  GetAnimator,\r\n  GetAnimationTransform,\r\n} from \"../../shared/animations\";\r\nimport image from \"../../images/me/EubyKuma.png\";\r\nimport { device } from \"../../shared/device\";\r\nimport PageStyle from \"../common/PageStyle\";\r\nimport NavigationButtons from \"./NavigationButtons\";\r\n\r\nconst AboutPageStyled = styled(PageStyle)`\r\n  font-size: 0.9em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.1em;\r\n  }\r\n`;\r\n\r\nconst AboutPageAnimated = GetAnimator(AboutPageStyled);\r\nconst AnimationTransform = GetAnimationTransform(AnimationDirection.FromLeft);\r\n\r\nconst ImageContainer = styled.div``;\r\n\r\nconst Image = styled.img`\r\n  display: flex;\r\n  width: 45%;\r\n  margin: 5% auto;\r\n\r\n  @media ${device.tablet} {\r\n    width: 30%;\r\n  }\r\n`;\r\n\r\nconst Info = styled.div`\r\n  margin: 0 10%;\r\n\r\n  span {\r\n    display: block;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst Bio = styled.div`\r\n  padding: 3% 20px;\r\n  height: 70%;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 30px;\r\n\r\n    p {\r\n      margin: 30px 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst AboutPage = () => {\r\n  return (\r\n    <AboutPageAnimated transform={AnimationTransform}>\r\n      <PageTitle centered>about me</PageTitle>\r\n      <ImageContainer>\r\n        <Image\r\n          src={image}\r\n          alt={\"drawing of me and my pets by @kumamaskie\"}\r\n        ></Image>\r\n        <Info>\r\n          <span>Gustavo Passos, 22 years old, Brazillian</span>\r\n          <span>currently working @ lambda3</span>\r\n        </Info>\r\n      </ImageContainer>\r\n      <Bio>\r\n        <p>\r\n          I’ve been programming for 5 years now, 4 of those as a professional\r\n          software developer in brazillian companies.\r\n        </p>\r\n        <p>\r\n          I’m always studying and developing new projects with different\r\n          technologies, specially games my defin\r\n        </p>\r\n      </Bio>\r\n      <NavigationButtons></NavigationButtons>\r\n    </AboutPageAnimated>\r\n  );\r\n};\r\n\r\nexport default AboutPage;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PageStyle from \"../../common/PageStyle\";\r\nimport {\r\n  AnimationDirection,\r\n  GetAnimator,\r\n  GetAnimationTransform,\r\n} from \"../../../shared/animations\";\r\nimport PageTitle from \"../../common/PageTitle\";\r\nimport Project from \"../../../models/project\";\r\nimport { device } from \"../../../shared/device\";\r\nimport ReturnButton from \"../../common/ReturnButton\";\r\nimport { getProjectById } from \"../../../data/projects/projectList\";\r\nimport { getTagsInProject } from \"../tag/tagList\";\r\n\r\nconst ProjectViewPageAnimated = GetAnimator(PageStyle);\r\nconst AnimationTransform = GetAnimationTransform(AnimationDirection.FromUp);\r\n\r\ninterface ProjectViewProps {\r\n  projectId: number;\r\n  project: Project;\r\n}\r\n\r\nconst Image = styled.img``;\r\n\r\nconst TagContainer = styled.div`\r\n  display: flex;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst ProjectText = styled.section`\r\n  padding: 20px;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 30px;\r\n  }\r\n`;\r\n\r\nconst ProjectViewPage = (props: ProjectViewProps) => {\r\n  let project = getProjectById(Number(props.projectId));\r\n\r\n  return (\r\n    <ProjectViewPageAnimated transform={AnimationTransform}>\r\n      <PageTitle centered>{project.name}</PageTitle>\r\n      <Image src={props.project.image} alt={props.project.imageAlt}></Image>\r\n      <TagContainer>{getTagsInProject(props.project)}</TagContainer>\r\n      <ProjectText>{props.project.container()}</ProjectText>\r\n      <ReturnButton></ReturnButton>\r\n    </ProjectViewPageAnimated>\r\n  );\r\n};\r\n\r\nexport default ProjectViewPage;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport ProjectListPage from \"./project/list/ProjectListPage\";\r\nimport HomePage from \"./home/HomePage\";\r\nimport AboutPage from \"./about/AboutPage\";\r\nimport ProjectViewPage from \"./project/view/ProjectViewPage\";\r\nimport { sketch } from \"../data/projects/sketch/sketch\";\r\nimport {\r\n  homePath,\r\n  aboutPath,\r\n  projectPath,\r\n  projectListPath,\r\n} from \"../models/routes\";\r\n\r\nconst Routes = (props: { location: any }) => {\r\n  return (\r\n    <Switch location={props.location}>\r\n      <Route exact path={homePath}>\r\n        <HomePage handleWidth></HomePage>\r\n      </Route>\r\n\r\n      <Route exact path={aboutPath}>\r\n        <AboutPage></AboutPage>\r\n      </Route>\r\n\r\n      <Route exact path={projectListPath}>\r\n        <ProjectListPage></ProjectListPage>\r\n      </Route>\r\n\r\n      <Route\r\n        exact\r\n        path={projectPath}\r\n        render={(props) => {\r\n          return (\r\n            <ProjectViewPage\r\n              projectId={props.match.params.id}\r\n              project={sketch}\r\n            ></ProjectViewPage>\r\n          );\r\n        }}\r\n      ></Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport Header from \"./header/Header\";\r\nimport styled from \"styled-components\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { LastLocationProvider } from \"react-router-last-location\";\r\nimport Routes from \"./Routes\";\r\nimport { animationSpeed } from \"../shared/animations\";\r\nimport { device } from \"../shared/device\";\r\n\r\nconst BodyGrid = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  margin: auto;\r\n\r\n  @media ${device.desktop} {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst TransitionGroupStyled = styled(TransitionGroup)`\r\n  height: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n\r\n  @media ${device.desktop} {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst Body = () => {\r\n  return (\r\n    <BodyGrid>\r\n      <HashRouter basename=\"/\">\r\n        <Header handleWidth></Header>\r\n        <LastLocationProvider>\r\n          <Route\r\n            render={({ location }) => (\r\n              <TransitionGroupStyled>\r\n                <CSSTransition\r\n                  key={location.pathname}\r\n                  classNames=\"animation\"\r\n                  timeout={animationSpeed}\r\n                >\r\n                  <Routes location={location}></Routes>\r\n                </CSSTransition>\r\n              </TransitionGroupStyled>\r\n            )}\r\n          ></Route>\r\n        </LastLocationProvider>\r\n      </HashRouter>\r\n    </BodyGrid>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Body from \"./components/Body\";\n\nconst App = () => {\n  return <Body></Body>;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\n"],"sourceRoot":""}