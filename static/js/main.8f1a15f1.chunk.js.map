{"version":3,"sources":["images/projects/sketch/sketch-carousel.png","shared/colors.tsx","shared/device.ts","components/Header.tsx","components/Carousel/Slide/Tag.tsx","components/Carousel/Slide/TagContainer.tsx","components/Carousel/Slide/SlideDescription.tsx","components/Carousel/Slide/SlideContent.tsx","components/Carousel/CarouselTitle.tsx","components/Carousel/CarouselContent.tsx","components/Menu.tsx","components/Body.tsx","App.tsx","index.tsx","images/projects/sketch/sketch-carousel-big.png"],"names":["module","exports","colors","deviceSize","device","tablet","desktop","Background","styled","header","NameContainer","div","DevName","JobTitle","Header","TagName","Tag","props","name","Tags","TagContainer","tags","map","value","i","key","DescriptionContainer","Title","strong","Description","SlideDescription","projectName","ImageContainer","section","Image","img","SlideContent","project","src","window","screen","width","image","imageBig","alt","imageAlt","TitleContent","CarouselTitle","projectsInCarousel","sketchImage","sketchImageBig","CarouselContainer","CarouselStyled","Carousel","CarouselContent","showArrows","showThumbs","showStatus","showIndicators","emulateTouch","autoPlay","interval","stopOnHover","infiniteLoop","index","NavMenu","nav","LinkContainer","ul","Link","li","Button","button","border","Menu","Content","BodyGrid","Body","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f1a15f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sketch-carousel.7b5eb98f.png\";","const colors = {\r\n  mainColor: \"#7673ff\",\r\n  mainTextColor: \"#fff\",\r\n  mainBackgroundColor: \"#f1f1f1\",\r\n  secondBackgroundColor: \"#f7f7f7\"\r\n};\r\n\r\nconst buttonColors = {\r\n  onHoverColor: \"#e6e6e6\"\r\n};\r\n\r\nexport { colors, buttonColors };\r\n","export const deviceSize = {\r\n  tablet: 500,\r\n  desktop: 2560\r\n};\r\n\r\nexport function isInDesktop() {\r\n  return window.screen.width >= deviceSize.desktop;\r\n}\r\n\r\nexport const device = {\r\n  tablet: `(min-width: ${deviceSize.tablet}px)`,\r\n  desktop: `(min-width: ${deviceSize.desktop}px)`\r\n};\r\n","import React from \"react\";\r\nimport { colors } from \"../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../shared/device\";\r\n\r\nconst Background = styled.header`\r\n  width: 100%;\r\n  background-color: ${colors.mainColor};\r\n  color: ${colors.mainTextColor};\r\n  z-index: 10;\r\n`;\r\n\r\nconst NameContainer = styled.div`\r\n  padding: 20px;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 30px;\r\n  }\r\n`;\r\n\r\nconst DevName = styled.div`\r\n  font-size: 1em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.4em;\r\n  }\r\n`;\r\n\r\nconst JobTitle = styled.div`\r\n  font-size: 1.5em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.9em;\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Background>\r\n      <NameContainer>\r\n        <DevName>Gustavo Passos</DevName>\r\n        <JobTitle>Game & Software Developer</JobTitle>\r\n      </NameContainer>\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { colors } from \"../../../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../shared/device\";\r\n\r\nconst TagName = styled.div`\r\n  font-size: 0.8em;\r\n  background: ${colors.mainBackgroundColor};\r\n  color: ${colors.mainColor};\r\n  text-align: center;\r\n  min-width: 60px;\r\n  margin: 10px;\r\n  padding: 3px;\r\n  border: 3px solid;\r\n  border-color: ${colors.mainColor};\r\n  border-radius: 50px;\r\n  float: right;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.2em;\r\n    min-width: 90px;\r\n    margin: 15px;\r\n  }\r\n`;\r\n\r\ninterface TagProps {\r\n  name: string;\r\n}\r\n\r\nconst Tag = (props: TagProps): React.ReactElement => {\r\n  return <TagName>{props.name}</TagName>;\r\n};\r\n\r\nexport default Tag;\r\n","import React from \"react\";\r\nimport Tag from \"./Tag\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Tags = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n`;\r\n\r\ninterface TagContainerProps {\r\n  tags: string[];\r\n}\r\n\r\nconst TagContainer = (props: TagContainerProps) => {\r\n  return (\r\n    <Tags>\r\n      {props.tags.map((value: string, i: number) => {\r\n        return <Tag name={value} key={i}></Tag>;\r\n      })}\r\n    </Tags>\r\n  );\r\n};\r\n\r\nexport default TagContainer;\r\n","import React from \"react\";\r\nimport { colors } from \"../../../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../shared/device\";\r\n\r\nconst DescriptionContainer = styled.div`\r\n  display: block;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  @media ${device.tablet} {\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst Title = styled.strong`\r\n  background: ${colors.mainColor};\r\n  color: #fff;\r\n  font-size: 1.1em;\r\n  letter-spacing: 5px;\r\n  text-transform: uppercase;\r\n  border: 1px solid #c2c2c2;\r\n  position: absolute;\r\n  top: -35px;\r\n  left: 0;\r\n  padding: 10px 20px;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.3em;\r\n    top: -60px;\r\n    padding: 20px 30px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.div`\r\n  font-size: 0.9em;\r\n  background: #e6e6e6;\r\n  padding: 10px 20px;\r\n  text-align: left;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.2em;\r\n    border-radius: 0 30px 0 0;\r\n    padding: 20px 30px;\r\n  }\r\n`;\r\n\r\nconst SlideDescription = (props: SlideDescriptionProps) => {\r\n  return (\r\n    <DescriptionContainer>\r\n      <Description>\r\n        My firt project made with commercial intent. Thereâ€™s a playable demo\r\n        available\r\n      </Description>\r\n      <Title>{props.projectName}</Title>\r\n    </DescriptionContainer>\r\n  );\r\n};\r\n\r\ninterface SlideDescriptionProps {\r\n  projectName: string;\r\n}\r\n\r\nexport default SlideDescription;\r\n","import React from \"react\";\r\nimport TagContainer from \"./TagContainer\";\r\nimport Project from \"../../../models/project\";\r\nimport SlideDescription from \"./SlideDescription\";\r\nimport styled from \"styled-components\";\r\nimport { deviceSize, device } from \"../../../shared/device\";\r\nimport { colors } from \"../../../shared/colors\";\r\n\r\nconst ImageContainer = styled.section`\r\n  position: relative;\r\n  display: block;\r\n  background-color: ${colors.mainBackgroundColor};\r\n`;\r\n\r\nconst Image = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  margin: auto;\r\n`;\r\n\r\ninterface ProjectSlideProps {\r\n  index: number;\r\n  project: Project;\r\n}\r\n\r\nconst getImageByDeviceSize = (project: Project) => {\r\n  return window.screen.width < deviceSize.tablet\r\n    ? project.image\r\n    : project.imageBig;\r\n};\r\n\r\nconst SlideContent = (props: ProjectSlideProps) => {\r\n  return (\r\n    <ImageContainer>\r\n      <TagContainer tags={props.project.tags}></TagContainer>\r\n      <Image\r\n        src={getImageByDeviceSize(props.project)}\r\n        alt={props.project.imageAlt}\r\n      ></Image>\r\n      <SlideDescription projectName={props.project.name}></SlideDescription>\r\n    </ImageContainer>\r\n  );\r\n};\r\n\r\nexport default SlideContent;\r\n","import React from \"react\";\r\nimport { colors } from \"../../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../shared/device\";\r\n\r\nconst TitleContent = styled.div`\r\n  background: ${colors.mainColor};\r\n  color: ${colors.mainTextColor};\r\n  padding: 10px 20px;\r\n  font-size: 0.95em;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 10px 30px;\r\n    font-size: 1.4em;\r\n  }\r\n`;\r\n\r\nconst CarouselTitle = () => {\r\n  return <TitleContent>some of the projects I've worked on:</TitleContent>;\r\n};\r\n\r\nexport default CarouselTitle;\r\n","import React from \"react\";\r\nimport SlideContent from \"./Slide/SlideContent\";\r\nimport CarouselTitle from \"./CarouselTitle\";\r\nimport Project from \"../../models/project\";\r\nimport styled from \"styled-components\";\r\nimport sketchImage from \"../../images/projects/sketch/sketch-carousel.png\";\r\nimport sketchImageBig from \"../../images/projects/sketch/sketch-carousel-big.png\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { device, deviceSize, isInDesktop } from \"../../shared/device\";\r\n\r\nconst projectsInCarousel: Project[] = [\r\n  {\r\n    image: sketchImage,\r\n    imageBig: sketchImageBig,\r\n    imageAlt: \"Image the game Sketch\",\r\n    name: \"sketch 1\",\r\n    tags: [\"Unity\", \"C#\"]\r\n  },\r\n  {\r\n    image: sketchImage,\r\n    imageBig: sketchImageBig,\r\n    imageAlt: \"Image the game Sketch\",\r\n    name: \"sketch 2\",\r\n    tags: [\"Unity\", \"C#\"]\r\n  },\r\n  {\r\n    image: sketchImage,\r\n    imageBig: sketchImageBig,\r\n    imageAlt: \"Image the game Sketch\",\r\n    name: \"sketch 3\",\r\n    tags: [\"Unity\", \"C#\"]\r\n  }\r\n];\r\n\r\nconst CarouselContainer = styled.div`\r\n  z-index: 10;\r\n`;\r\n\r\nconst CarouselStyled = styled(Carousel)`\r\n  .control-dots {\r\n    top: 0;\r\n    bottom: unset;\r\n  }\r\n`;\r\n\r\nfunction projectSlides() {\r\n  return projectsInCarousel.map((value: Project, i: number) => {\r\n    return <SlideContent index={i} project={value} key={i}></SlideContent>;\r\n  });\r\n}\r\n\r\nconst CarouselContent = () => {\r\n  return (\r\n    <CarouselContainer>\r\n      <CarouselTitle></CarouselTitle>\r\n      <CarouselStyled\r\n        showArrows={isInDesktop()}\r\n        showThumbs={false}\r\n        showStatus={false}\r\n        showIndicators\r\n        emulateTouch\r\n        autoPlay\r\n        interval={4000}\r\n        stopOnHover\r\n        infiniteLoop\r\n      >\r\n        {projectSlides()}\r\n      </CarouselStyled>\r\n    </CarouselContainer>\r\n  );\r\n};\r\n\r\nexport default CarouselContent;\r\n","import React from \"react\";\r\nimport { colors } from \"../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../shared/device\";\r\n\r\nconst NavMenu = styled.nav`\r\n  flex: 1;\r\n  display: flex;\r\n`;\r\n\r\nconst LinkContainer = styled.ul`\r\n  margin: auto;\r\n  padding: 0;\r\n  width: 100%;\r\n\r\n  @media ${device.tablet} {\r\n    display: inline-flex;\r\n  }\r\n`;\r\n\r\nconst Link = styled.li`\r\n  text-align: center;\r\n  list-style: none;\r\n\r\n  @media ${device.tablet} {\r\n    margin: auto;\r\n    width: 30%;\r\n  }\r\n`;\r\n\r\ninterface ButtonProps {\r\n  border?: boolean;\r\n}\r\n\r\nconst Button = styled.button`\r\n  width: 70%;\r\n  color: ${colors.mainColor};\r\n  background: ${colors.secondBackgroundColor};\r\n  font-size: 1.2em;\r\n  border: none;\r\n  padding: 4% 0;\r\n  border-bottom: ${(props: ButtonProps) =>\r\n    props.border ? \"solid 1px\" : \"none\"};\r\n  border-top: ${(props: ButtonProps) => (props.border ? \"solid 1px\" : \"none\")};\r\n\r\n  :focus,\r\n  :hover {\r\n    cursor: pointer;\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    width: 100%;\r\n    font-size: 1.8em;\r\n    padding: 15% 0;\r\n    border-bottom: none;\r\n    border-top: none;\r\n    border-left: ${(props: ButtonProps) =>\r\n      props.border ? \"solid 1px\" : \"none\"};\r\n    border-right: ${(props: ButtonProps) =>\r\n      props.border ? \"solid 1px\" : \"none\"};\r\n  }\r\n`;\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <NavMenu>\r\n      <LinkContainer>\r\n        <Link>\r\n          <Button>My other projects</Button>\r\n        </Link>\r\n        <Link>\r\n          <Button border>About me</Button>\r\n        </Link>\r\n        <Link>\r\n          <Button>Contact me</Button>\r\n        </Link>\r\n      </LinkContainer>\r\n    </NavMenu>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport CarouselContent from \"./Carousel/CarouselContent\";\r\nimport Menu from \"./Menu\";\r\nimport styled from \"styled-components\";\r\nimport { colors } from \"../shared/colors\";\r\n\r\nconst Content = styled.div`\r\n  height: 100%;\r\n`;\r\n\r\nconst BodyGrid = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  max-width: 900px;\r\n  margin: auto;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 40%;\r\n  background-color: ${colors.mainColor};\r\n`;\r\n\r\nconst Body = () => {\r\n  return (\r\n    <Content>\r\n      <Background></Background>\r\n      <BodyGrid>\r\n        <Header></Header>\r\n        <CarouselContent></CarouselContent>\r\n        <Menu></Menu>\r\n      </BodyGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Body from \"./components/Body\";\n\nfunction App() {\n  return <Body></Body>;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\n","module.exports = __webpack_public_path__ + \"static/media/sketch-carousel-big.86fcbb81.png\";"],"sourceRoot":""}