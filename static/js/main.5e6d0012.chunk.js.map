{"version":3,"sources":["images/projects/sketch/sketch-carousel.png","images/projects/sketch/sketch-carousel-big.png","images/contacts/gmail.png","images/contacts/github.png","images/contacts/linkedin.png","images/me/EubyKuma.png","shared/colors.tsx","shared/device.ts","components/Header.tsx","components/common/PageStyle.tsx","shared/animations.ts","components/common/PageTitle.tsx","components/project/tag/Tag.tsx","components/common/LinkButton.tsx","components/project/list/ProjectCard.tsx","data/projects/sketch/SketchDescription.tsx","data/projects/sketch/sketch.ts","data/projects/projectList.ts","components/common/ReturnButton.tsx","components/project/list/ProjectListPage.tsx","components/contacts/ContactCard.tsx","data/contacts.ts","components/contacts/ContactsModal.tsx","components/contacts/ContactsButton.tsx","components/home/Menu.tsx","components/home/carousel/slide/SlideDescription.tsx","components/project/tag/tagList.tsx","components/home/carousel/slide/SlideContent.tsx","components/home/carousel/CarouselContent.tsx","models/routes.ts","components/home/HomePage.tsx","shared/locationToAnim.ts","shared/dynamicAnimation.ts","components/about/NavigationButtons.tsx","components/about/AboutPage.tsx","components/project/view/ProjectViewPage.tsx","components/Routes.tsx","components/Body.tsx","App.tsx","index.tsx"],"names":["module","exports","colors","deviceSize","device","tablet","desktop","Background","styled","header","NameContainer","div","DevName","JobTitle","Header","PageStyle","AnimationDirection","GetAnimator","component","props","GetTranslateFromTransform","transform","GetAnimationTransform","animationDirection","FromUp","x","y","FromDown","FromLeft","FromRight","TitleContent","centered","PageTitle","children","TagName","Tag","LinkButton","button","ProjectCardStyle","CardHeader","ProjectTitle","strong","TagContainerStyled","ProjectDescription","p","LinkButtonStyled","ProjectCard","project","name","tags","map","tag","key","to","projectId","id","SketchDescription","sketch","imageAlt","image","img","imageBig","imgBig","container","projectList","LinkStyled","Link","ReturnButtonStyled","getLastVisited","lastLocation","pathname","ReturnButton","useLastLocation","ProjectListPageAnimated","AnimationTransform","ProjectCardContainer","section","ProjectListPage","a","ContactCardStyled","ContactImage","ContactInfo","ContactCard","src","message","contact","contacts","gmailLogo","contactText","linkedinLogo","githubLogo","ModalBackground","ModalWrapper","ContactsContainer","ContactsModal","modalMarkup","onClick","onClose","ReactDOM","createPortal","document","body","ContactsButton","React","useState","modalIsOpen","setIsOpen","CSSTransition","in","classNames","unmountOnExit","timeout","NavMenu","nav","LinkContainer","ul","Item","li","MenuButton","border","Menu","DescriptionContainer","Title","Description","SlideDescription","projectName","getTagsInProject","getTags","ImageContainer","TagContainer","Image","SlideContent","createHashHistory","push","window","screen","width","alt","CarouselContainer","CarouselStyled","Carousel","CarouselContent","showArrows","showThumbs","showStatus","showIndicators","emulateTouch","autoPlay","interval","stopOnHover","infiniteLoop","value","i","index","homePathHash","HomePageStyled","HomePage","currentLocation","location","hash","replace","animationTransform","animation","getAnimationBasedOnLocation","animationMap","getAnimationMap","Navigation","NavigationButtons","AboutPageAnimated","Info","Bio","AboutPage","ProjectViewPageAnimated","ProjectText","ProjectViewPage","Number","filter","Routes","exact","path","render","match","params","BodyGrid","TransitionGroupStyled","TransitionGroup","Body","basename","App","getElementById"],"mappings":"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","file":"static/js/main.5e6d0012.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sketch-carousel.7b5eb98f.png\";","module.exports = __webpack_public_path__ + \"static/media/sketch-carousel-big.86fcbb81.png\";","module.exports = __webpack_public_path__ + \"static/media/gmail.0202b153.png\";","module.exports = __webpack_public_path__ + \"static/media/github.45f3e0f1.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.1dbd8941.png\";","module.exports = __webpack_public_path__ + \"static/media/EubyKuma.0bdb45f3.png\";","const colors = {\r\n  mainColor: \"#7673ff\",\r\n  mainTextColor: \"#fff\",\r\n  mainBackgroundColor: \"#f1f1f1\",\r\n  secondColor: \"#6B68EE\",\r\n  secondBackgroundColor: \"#f7f7f7\",\r\n\r\n  buttonClickedColor: \"#dedede\",\r\n};\r\n\r\nconst buttonColors = {\r\n  onHoverColor: \"#e6e6e6\",\r\n};\r\n\r\nexport { colors, buttonColors };\r\n","export const deviceSize = {\r\n  tablet: 500,\r\n  desktop: 2560\r\n};\r\n\r\nexport function isInDesktop() {\r\n  return window.screen.width >= deviceSize.desktop;\r\n}\r\n\r\nexport const device = {\r\n  tablet: `(min-width: ${deviceSize.tablet}px)`,\r\n  desktop: `(min-width: ${deviceSize.desktop}px)`\r\n};\r\n","import React from \"react\";\r\nimport { colors } from \"../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../shared/device\";\r\n\r\nconst Background = styled.header`\r\n  width: 100%;\r\n  background-color: ${colors.mainColor};\r\n  color: ${colors.mainTextColor};\r\n  z-index: 10;\r\n`;\r\n\r\nconst NameContainer = styled.div`\r\n  padding: 20px;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 30px;\r\n  }\r\n`;\r\n\r\nconst DevName = styled.div`\r\n  font-size: 1em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.4em;\r\n  }\r\n`;\r\n\r\nconst JobTitle = styled.div`\r\n  font-size: 1.5em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.9em;\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Background>\r\n      <NameContainer>\r\n        <DevName>Gustavo Passos</DevName>\r\n        <JobTitle>Game & Software Developer</JobTitle>\r\n      </NameContainer>\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nconst PageStyle = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n`;\r\n\r\nexport default PageStyle;\r\n","import styled, { AnyStyledComponent } from \"styled-components\";\r\n\r\nexport const animationSpeed = 500;\r\n\r\nexport enum AnimationDirection {\r\n  FromUp,\r\n  FromDown,\r\n  FromRight,\r\n  FromLeft,\r\n}\r\n\r\nexport interface Transform {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface AnimatorProps {\r\n  transform: Transform;\r\n}\r\n\r\nexport const GetAnimator = (component: AnyStyledComponent) => {\r\n  return styled(component)`\r\n    &.animation-enter {\r\n      transform: ${(props: AnimatorProps) =>\r\n        GetTranslateFromTransform(props.transform)};\r\n    }\r\n\r\n    &.animation-enter-active {\r\n      transform: translateX(0);\r\n      transition-timing-function: ease-in-out;\r\n      transition: transform ${animationSpeed}ms;\r\n    }\r\n\r\n    &.animation-exit {\r\n      transform: translateX(0);\r\n    }\r\n\r\n    &.animation-exit-active {\r\n      transform: ${(props: AnimatorProps) =>\r\n        GetTranslateFromTransform(props.transform)};\r\n      transition-timing-function: ease-in-out;\r\n      transition: transform ${animationSpeed}ms;\r\n    }\r\n  `;\r\n};\r\n\r\nexport const GetAnimationTransform = (\r\n  animationDirection: AnimationDirection\r\n): Transform => {\r\n  switch (animationDirection) {\r\n    case AnimationDirection.FromUp:\r\n      return { x: 0, y: -100 };\r\n\r\n    case AnimationDirection.FromDown:\r\n      return { x: 0, y: 100 };\r\n\r\n    case AnimationDirection.FromLeft:\r\n      return { x: -100, y: 0 };\r\n\r\n    case AnimationDirection.FromRight:\r\n      return { x: 100, y: 0 };\r\n  }\r\n};\r\n\r\nexport const GetTranslateFromTransform = (transform: Transform): string => {\r\n  return `translate(${transform.x}%, ${transform.y}%)`;\r\n};\r\n","import React from \"react\";\r\nimport { colors } from \"../../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../shared/device\";\r\n\r\ninterface TitleProps {\r\n  centered?: boolean;\r\n}\r\n\r\nconst TitleContent = styled.div`\r\n  background: ${colors.secondColor};\r\n  color: ${colors.mainTextColor};\r\n  padding: 10px 20px;\r\n  font-size: 0.95em;\r\n  text-align: ${(props: TitleProps) => (props.centered ? \"center\" : \"unset\")};\r\n\r\n  box-shadow: 0px 3px 11px 0px #0000009c;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 10px 30px;\r\n    font-size: 1.4em;\r\n  }\r\n`;\r\n\r\ninterface PageTitleProps {\r\n  children: string;\r\n  centered?: boolean;\r\n}\r\n\r\nconst PageTitle = (props: PageTitleProps) => {\r\n  return (\r\n    <TitleContent centered={props.centered}>{props.children}</TitleContent>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from \"react\";\r\nimport { colors } from \"../../../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../shared/device\";\r\n\r\nconst TagName = styled.div`\r\n  font-size: 0.8em;\r\n  background: ${colors.mainBackgroundColor};\r\n  color: ${colors.mainColor};\r\n  text-align: center;\r\n  min-width: 60px;\r\n  margin: 10px;\r\n  padding: 3px 7px;\r\n  border: 3px solid;\r\n  border-color: ${colors.mainColor};\r\n  border-radius: 50px;\r\n  float: right;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.2em;\r\n    min-width: 90px;\r\n    margin: 15px;\r\n  }\r\n`;\r\n\r\ninterface TagProps {\r\n  children: string;\r\n}\r\n\r\nconst Tag = (props: TagProps): React.ReactElement => {\r\n  return <TagName>{props.children}</TagName>;\r\n};\r\n\r\nexport default Tag;\r\n","import styled from \"styled-components\";\r\nimport { device } from \"../../shared/device\";\r\nimport { colors } from \"../../shared/colors\";\r\n\r\nconst LinkButton = styled.button`\r\n  color: ${colors.mainColor};\r\n  background: ${colors.secondBackgroundColor};\r\n  font-size: 1.2em;\r\n  border: none;\r\n  padding: 4% 0;\r\n\r\n  :focus,\r\n  :hover {\r\n    cursor: pointer;\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.4em;\r\n  }\r\n`;\r\n\r\nexport default LinkButton;\r\n","import React from \"react\";\r\nimport Project from \"../../../models/project\";\r\nimport styled from \"styled-components\";\r\nimport Tag from \"../tag/Tag\";\r\nimport { device } from \"../../../shared/device\";\r\nimport { colors } from \"../../../shared/colors\";\r\nimport LinkButton from \"../../common/LinkButton\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface ProjectCardProps {\r\n  project: Project;\r\n}\r\n\r\nconst ProjectCardStyle = styled.div`\r\n  padding: 20px 0;\r\n  border-bottom: 1px solid ${colors.mainColor};\r\n  transition: 0.3s;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 30px 0;\r\n  }\r\n`;\r\n\r\nconst CardHeader = styled.div`\r\n  display: flow-root;\r\n  position: relative;\r\n`;\r\n\r\nconst ProjectTitle = styled.strong`\r\n  color: ${colors.mainColor};\r\n  float: left;\r\n  font-size: 1.3em;\r\n  position: absolute;\r\n  bottom: 0;\r\n`;\r\n\r\nconst TagContainerStyled = styled.div`\r\n  float: right;\r\n\r\n  div {\r\n    margin: 0;\r\n  }\r\n\r\n  div:first-child {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nconst ProjectDescription = styled.p`\r\n  clear: both;\r\n  padding: 20px 0 10px 0;\r\n  margin: 0;\r\n`;\r\n\r\nconst getProjectTags = (project: Project) => {\r\n  return project.tags.map((tag: string, key: number) => {\r\n    return <Tag key={key}>{tag}</Tag>;\r\n  });\r\n};\r\n\r\nconst LinkButtonStyled = styled(LinkButton)`\r\n  padding: 20px 0 0 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst getProjectUrl = (projectId: number) => {\r\n  return \"project/\" + projectId;\r\n};\r\n\r\nconst ProjectCard = (props: ProjectCardProps) => {\r\n  return (\r\n    <ProjectCardStyle>\r\n      <CardHeader>\r\n        <ProjectTitle>{props.project.name}</ProjectTitle>\r\n        <TagContainerStyled>{getProjectTags(props.project)}</TagContainerStyled>\r\n      </CardHeader>\r\n      <ProjectDescription>\r\n        2D fast paced game inspired in hits like Castlevania SOTN and Hollow\r\n        Knight. Not a Metroidvania, though.\r\n      </ProjectDescription>\r\n      <Link to={getProjectUrl(props.project.id)}>\r\n        <LinkButtonStyled>check this project</LinkButtonStyled>\r\n      </Link>\r\n    </ProjectCardStyle>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React from \"react\";\r\n\r\nconst SketchDescription = () => {\r\n  return <div>this is sketch</div>;\r\n};\r\n\r\nexport default SketchDescription;\r\n","import Project from \"../../../models/project\";\r\nimport img from \"../../../images/projects/sketch/sketch-carousel.png\";\r\nimport imgBig from \"../../../images/projects/sketch/sketch-carousel-big.png\";\r\nimport SketchDescription from \"./SketchDescription\";\r\n\r\nexport const sketch: Project = {\r\n  id: 1,\r\n  name: \"sketch\",\r\n  tags: [\"c#\", \"Unity\"],\r\n  imageAlt: \"sketch gameplay screenshot\",\r\n  image: img,\r\n  imageBig: imgBig,\r\n  container: SketchDescription,\r\n};\r\n","import Project from \"../../models/project\";\r\nimport { sketch } from \"./sketch/sketch\";\r\n\r\nexport const projectList: Project[] = [sketch];\r\n\r\nexport const getProjectById = (id: number) => {\r\n  return projectList.filter((a) => a.id === id)[0];\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../shared/device\";\r\nimport LinkButton from \"./LinkButton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLastLocation, LastLocationType } from \"react-router-last-location\";\r\n\r\nconst LinkStyled = styled(Link)`\r\n  height: 10%;\r\n`;\r\n\r\nconst ReturnButtonStyled = styled(LinkButton)`\r\n  width: 100%;\r\n  position: fixed;\r\n  bottom: 0;\r\n  box-shadow: 0px 3px 11px 0px #0000009c;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.4em;\r\n    padding: 3% 0;\r\n  }\r\n`;\r\n\r\nconst getLastVisited = (lastLocation: LastLocationType): string => {\r\n  if (lastLocation) return lastLocation.pathname;\r\n  return \"/\";\r\n};\r\n\r\nconst ReturnButton = () => {\r\n  const lastLocation = useLastLocation();\r\n\r\n  return (\r\n    <LinkStyled to={getLastVisited(lastLocation)}>\r\n      <ReturnButtonStyled>Return</ReturnButtonStyled>\r\n    </LinkStyled>\r\n  );\r\n};\r\n\r\nexport default ReturnButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PageStyle from \"../../common/PageStyle\";\r\nimport {\r\n  AnimationDirection,\r\n  GetAnimator,\r\n  GetAnimationTransform,\r\n} from \"../../../shared/animations\";\r\nimport PageTitle from \"../../common/PageTitle\";\r\nimport Project from \"../../../models/project\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport { device } from \"../../../shared/device\";\r\nimport { projectList } from \"../../../data/projects/projectList\";\r\nimport ReturnButton from \"../../common/ReturnButton\";\r\n\r\nconst ProjectListPageAnimated = GetAnimator(PageStyle);\r\nconst AnimationTransform = GetAnimationTransform(AnimationDirection.FromRight);\r\n\r\nconst ProjectCardContainer = styled.section`\r\n  height: 90%;\r\n  overflow: auto;\r\n  padding: 20px;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 0 30px;\r\n  }\r\n`;\r\n\r\nconst getProjectCards = () => {\r\n  return projectList.map((a: Project, key: number) => {\r\n    return <ProjectCard project={a} key={key}></ProjectCard>;\r\n  });\r\n};\r\n\r\nconst ProjectListPage = () => {\r\n  return (\r\n    <ProjectListPageAnimated transform={AnimationTransform}>\r\n      <PageTitle centered>my projects</PageTitle>\r\n      <ProjectCardContainer>{getProjectCards()}</ProjectCardContainer>\r\n      <ReturnButton></ReturnButton>\r\n    </ProjectListPageAnimated>\r\n  );\r\n};\r\n\r\nexport default ProjectListPage;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ContactCardStyled = styled.div`\r\n  padding: 5% 10%;\r\n  display: flex;\r\n  font-size: 0.9em;\r\n`;\r\n\r\nconst ContactImage = styled.img`\r\n  width: 20%;\r\n  height: 20%;\r\n`;\r\n\r\nconst ContactInfo = styled.div`\r\n  align-self: flex-end;\r\n\r\n  span,\r\n  strong {\r\n    display: block;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\ninterface ContactCardProps {\r\n  image: string;\r\n  message: string;\r\n  contact: string;\r\n}\r\n\r\nconst ContactCard = (props: ContactCardProps) => {\r\n  return (\r\n    <ContactCardStyled>\r\n      <ContactImage src={props.image}></ContactImage>\r\n      <ContactInfo>\r\n        <strong>{props.message}</strong>\r\n        <span>{props.contact}</span>\r\n      </ContactInfo>\r\n    </ContactCardStyled>\r\n  );\r\n};\r\n\r\nexport default ContactCard;\r\n","import Contact from \"../models/contact\";\r\nimport gmailLogo from \"../images/contacts/gmail.png\";\r\nimport githubLogo from \"../images/contacts/github.png\";\r\nimport linkedinLogo from \"../images/contacts/linkedin.png\";\r\n\r\nexport const contacts: Contact[] = [\r\n  {\r\n    image: gmailLogo,\r\n    message: \"mail me\",\r\n    contactText: \"theguspassos@gmail.com\",\r\n  },\r\n  {\r\n    image: linkedinLogo,\r\n    message: \"connect with me\",\r\n    contactText: \"linkedin.com/in/theguspassos/\",\r\n  },\r\n  {\r\n    image: githubLogo,\r\n    message: \"code with me\",\r\n    contactText: \"github/theguspassos\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components\";\r\nimport { animationSpeed } from \"../../shared/animations\";\r\nimport ContactCard from \"./ContactCard\";\r\nimport LinkButton from \"../common/LinkButton\";\r\nimport { contacts } from \"../../data/contacts\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport { colors } from \"../../shared/colors\";\r\nimport Contact from \"../../models/contact\";\r\n\r\nconst ModalBackground = styled.div`\r\n  background: rgba(0, 0, 0, 0.2);\r\n  height: 100%;\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 99999;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &.animation-enter {\r\n    opacity: 0;\r\n\r\n    > div:first-child {\r\n      transform: translate(0, 100%);\r\n    }\r\n  }\r\n\r\n  &.animation-enter-active {\r\n    opacity: 1;\r\n    transition: opacity ${animationSpeed}ms;\r\n\r\n    > div:first-child {\r\n      transform: translate(0, 0);\r\n      transition-timing-function: ease-in-out;\r\n      transition: transform ${animationSpeed}ms;\r\n    }\r\n  }\r\n\r\n  &.animation-exit {\r\n    opacity: 1;\r\n\r\n    > div:first-child {\r\n      transform: translate(0, 0);\r\n    }\r\n  }\r\n\r\n  &.animation-exit-active {\r\n    opacity: 0;\r\n    transition: opacity ${animationSpeed}ms;\r\n\r\n    > div:first-child {\r\n      transform: translate(0, 100%);\r\n      transition-timing-function: ease-in-out;\r\n      transition: transform ${animationSpeed}ms;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ModalWrapper = styled.div`\r\n  background-color: #fff;\r\n  z-index: 999999;\r\n  width: 100%;\r\n  max-width: 500px;\r\n`;\r\n\r\nconst ContactsContainer = styled.div`\r\n  padding: 20px;\r\n\r\n  > div:nth-child(2) {\r\n    border-top: 1px solid ${colors.mainColor};\r\n    border-bottom: 1px solid ${colors.mainColor};\r\n  }\r\n`;\r\n\r\nconst getContacts = () => {\r\n  return contacts.map((contact: Contact, key: number) => {\r\n    return (\r\n      <ContactCard\r\n        key={key}\r\n        contact={contact.contactText}\r\n        image={contact.image}\r\n        message={contact.message}\r\n      ></ContactCard>\r\n    );\r\n  });\r\n};\r\n\r\nconst LinkButtonStyled = styled(LinkButton)`\r\n  width: 100%;\r\n  background-color: #fff;\r\n  box-shadow: 0px 3px 11px 0px #0000009c;\r\n  padding: 10px 20px;\r\n`;\r\n\r\ninterface ContactsModalProps {\r\n  onClose(): void;\r\n}\r\n\r\nconst ContactsModal = (props: ContactsModalProps) => {\r\n  const modalMarkup = (\r\n    <ModalBackground>\r\n      <ModalWrapper>\r\n        <PageTitle centered>My Contacts</PageTitle>\r\n        <ContactsContainer>{getContacts()}</ContactsContainer>\r\n        <LinkButtonStyled onClick={() => props.onClose()}>\r\n          Close\r\n        </LinkButtonStyled>\r\n      </ModalWrapper>\r\n    </ModalBackground>\r\n  );\r\n\r\n  return ReactDOM.createPortal(modalMarkup, document.body);\r\n};\r\n\r\nexport default ContactsModal;\r\n","import React from \"react\";\r\nimport LinkButton from \"../common/LinkButton\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { animationSpeed } from \"../../shared/animations\";\r\nimport ContactsModal from \"./ContactsModal\";\r\n\r\nconst ContactsButton = () => {\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <LinkButton onClick={() => setIsOpen(true)}>My Contacts</LinkButton>\r\n      <CSSTransition\r\n        in={modalIsOpen}\r\n        classNames=\"animation\"\r\n        unmountOnExit\r\n        timeout={animationSpeed}\r\n      >\r\n        <ContactsModal onClose={() => setIsOpen(false)}></ContactsModal>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../shared/device\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LinkButton from \"../common/LinkButton\";\r\nimport ContactsButton from \"../contacts/ContactsButton\";\r\n\r\nconst NavMenu = styled.nav`\r\n  flex: 1;\r\n  display: flex;\r\n`;\r\n\r\nconst LinkContainer = styled.ul`\r\n  margin: auto;\r\n  padding: 0;\r\n  width: 100%;\r\n\r\n  @media ${device.tablet} {\r\n    display: inline-flex;\r\n  }\r\n`;\r\n\r\nconst Item = styled.li`\r\n  text-align: center;\r\n  list-style: none;\r\n\r\n  @media ${device.tablet} {\r\n    margin: auto;\r\n    width: 30%;\r\n  }\r\n`;\r\n\r\ninterface ButtonProps {\r\n  border?: boolean;\r\n}\r\n\r\nconst MenuButton = styled(LinkButton)`\r\n  width: 70%;\r\n  border-bottom: ${(props: ButtonProps) =>\r\n    props.border ? \"solid 1px\" : \"none\"};\r\n  border-top: ${(props: ButtonProps) => (props.border ? \"solid 1px\" : \"none\")};\r\n\r\n  @media ${device.tablet} {\r\n    width: 100%;\r\n    border-bottom: none;\r\n    border-top: none;\r\n    border-left: ${(props: ButtonProps) =>\r\n      props.border ? \"solid 1px\" : \"none\"};\r\n    border-right: ${(props: ButtonProps) =>\r\n      props.border ? \"solid 1px\" : \"none\"};\r\n  }\r\n`;\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <NavMenu>\r\n      <LinkContainer>\r\n        <Item>\r\n          <Link to=\"/projects\">\r\n            <MenuButton>My other projects</MenuButton>\r\n          </Link>\r\n        </Item>\r\n        <Item>\r\n          <Link to=\"/about\">\r\n            <MenuButton border>About me</MenuButton>\r\n          </Link>\r\n        </Item>\r\n        <Item>\r\n          <ContactsButton></ContactsButton>\r\n        </Item>\r\n      </LinkContainer>\r\n    </NavMenu>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../../shared/device\";\r\nimport { colors } from \"../../../../shared/colors\";\r\n\r\nconst DescriptionContainer = styled.div`\r\n  display: block;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  @media ${device.tablet} {\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst Title = styled.strong`\r\n  background: ${colors.mainColor};\r\n  color: #fff;\r\n  font-size: 1.1em;\r\n  letter-spacing: 5px;\r\n  text-transform: uppercase;\r\n  border: 1px solid #c2c2c2;\r\n  position: absolute;\r\n  top: -35px;\r\n  left: 0;\r\n  padding: 10px 20px;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.3em;\r\n    top: -60px;\r\n    padding: 20px 30px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.div`\r\n  font-size: 0.9em;\r\n  background: #e6e6e6;\r\n  padding: 10px 20px;\r\n  text-align: left;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.2em;\r\n    border-radius: 0 30px 0 0;\r\n    padding: 20px 30px;\r\n  }\r\n`;\r\n\r\nconst SlideDescription = (props: SlideDescriptionProps) => {\r\n  return (\r\n    <DescriptionContainer>\r\n      <Description>\r\n        My firt project made with commercial intent. There’s a playable demo\r\n        available\r\n      </Description>\r\n      <Title>{props.projectName}</Title>\r\n    </DescriptionContainer>\r\n  );\r\n};\r\n\r\ninterface SlideDescriptionProps {\r\n  projectName: string;\r\n}\r\n\r\nexport default SlideDescription;\r\n","import React from \"react\";\r\nimport Project from \"../../../models/project\";\r\nimport Tag from \"./Tag\";\r\n\r\nexport const getTagsInProject = (project: Project) => {\r\n  return getTags(project.tags);\r\n};\r\n\r\nexport const getTags = (tags: string[]) => {\r\n  return tags.map((tag: string, key: number) => {\r\n    return <Tag key={key}>{tag}</Tag>;\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SlideDescription from \"./SlideDescription\";\r\nimport { createHashHistory } from \"history\";\r\nimport { getTagsInProject } from \"../../../project/tag/tagList\";\r\nimport { colors } from \"../../../../shared/colors\";\r\nimport Project from \"../../../../models/project\";\r\nimport { deviceSize } from \"../../../../shared/device\";\r\n\r\nconst ImageContainer = styled.section`\r\n  position: relative;\r\n  display: block;\r\n  background-color: ${colors.mainBackgroundColor};\r\n`;\r\n\r\nconst TagContainer = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  margin: auto;\r\n`;\r\n\r\ninterface ProjectSlideProps {\r\n  index: number;\r\n  project: Project;\r\n}\r\n\r\nconst getImageByDeviceSize = (project: Project) => {\r\n  return window.screen.width < deviceSize.tablet\r\n    ? project.image\r\n    : project.imageBig;\r\n};\r\n\r\nconst goToProjectPage = (projectId: number) => {\r\n  const history = createHashHistory();\r\n  history.push(\"project/\" + projectId);\r\n};\r\n\r\nconst SlideContent = (props: ProjectSlideProps) => {\r\n  return (\r\n    <ImageContainer onClick={() => goToProjectPage(1)}>\r\n      <TagContainer>{getTagsInProject(props.project)}</TagContainer>\r\n      <Image\r\n        src={getImageByDeviceSize(props.project)}\r\n        alt={props.project.imageAlt}\r\n      ></Image>\r\n      <SlideDescription projectName={props.project.name}></SlideDescription>\r\n    </ImageContainer>\r\n  );\r\n};\r\n\r\nexport default SlideContent;\r\n","import React from \"react\";\r\nimport SlideContent from \"./slide/SlideContent\";\r\nimport styled from \"styled-components\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { projectList } from \"../../../data/projects/projectList\";\r\nimport Project from \"../../../models/project\";\r\nimport { isInDesktop } from \"../../../shared/device\";\r\n\r\nconst CarouselContainer = styled.div`\r\n  z-index: 10;\r\n`;\r\n\r\nconst CarouselStyled = styled(Carousel)`\r\n  .control-dots {\r\n    top: 0;\r\n    bottom: unset;\r\n  }\r\n`;\r\n\r\nfunction projectSlides() {\r\n  return projectList.map((value: Project, i: number) => {\r\n    return <SlideContent index={i} project={value} key={i}></SlideContent>;\r\n  });\r\n}\r\n\r\nconst CarouselContent = () => {\r\n  return (\r\n    <CarouselContainer>\r\n      <CarouselStyled\r\n        showArrows={isInDesktop()}\r\n        showThumbs={false}\r\n        showStatus={false}\r\n        showIndicators\r\n        emulateTouch\r\n        autoPlay\r\n        interval={4000}\r\n        stopOnHover\r\n        infiniteLoop\r\n      >\r\n        {projectSlides()}\r\n      </CarouselStyled>\r\n    </CarouselContainer>\r\n  );\r\n};\r\n\r\nexport default CarouselContent;\r\n","export const homePath = \"/\";\r\nexport const homePathHash = `#${homePath}`;\r\n\r\nexport const aboutPath = \"/about\";\r\nexport const aboutPathHash = `#${aboutPath}`;\r\n\r\nexport const projectListPath = \"/projects\";\r\nexport const projectListPathHash = `#${projectListPath}`;\r\n\r\nexport const projectPath = \"/project/:id\";\r\nexport const projectPathHash = `#${projectPath}`;\r\n","import React from \"react\";\r\nimport Menu from \"./Menu\";\r\nimport { GetAnimator, AnimationDirection } from \"../../shared/animations\";\r\nimport { useLastLocation } from \"react-router-last-location\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport PageStyle from \"../common/PageStyle\";\r\nimport CarouselContent from \"./carousel/CarouselContent\";\r\nimport {\r\n  LocationAnimationMap,\r\n  getAnimationBasedOnLocation,\r\n} from \"../../shared/dynamicAnimation\";\r\nimport { aboutPath, projectListPath, homePathHash } from \"../../models/routes\";\r\nimport { getLocationToAnim } from \"../../shared/locationToAnim\";\r\n\r\nconst HomePageStyled = GetAnimator(PageStyle);\r\n\r\nconst getAnimationMap = () => {\r\n  const animationMap: LocationAnimationMap = {};\r\n  animationMap[aboutPath] = AnimationDirection.FromRight;\r\n  animationMap[projectListPath] = AnimationDirection.FromLeft;\r\n  animationMap[\"default\"] = AnimationDirection.FromDown;\r\n\r\n  return animationMap;\r\n};\r\n\r\nconst HomePage = () => {\r\n  const location = getLocationToAnim(\r\n    window.location.hash,\r\n    useLastLocation()?.pathname,\r\n    homePathHash\r\n  );\r\n\r\n  const animationTransform = getAnimationBasedOnLocation(\r\n    getAnimationMap(),\r\n    location\r\n  );\r\n\r\n  return (\r\n    <HomePageStyled transform={animationTransform}>\r\n      <PageTitle>some of the projects I've worked on</PageTitle>\r\n      <CarouselContent></CarouselContent>\r\n      <Menu></Menu>\r\n    </HomePageStyled>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","export const getLocationToAnim = (\r\n  currentLocation: string,\r\n  lastLocation: string | undefined,\r\n  pageHashLocation: string\r\n) => {\r\n  return currentLocation === pageHashLocation\r\n    ? lastLocation ?? \"\"\r\n    : currentLocation.replace(\"#\", \"\");\r\n};\r\n","import { AnimationDirection, GetAnimationTransform } from \"./animations\";\r\n\r\nexport interface LocationAnimationMap {\r\n  [location: string]: AnimationDirection;\r\n}\r\n\r\nexport const getAnimationBasedOnLocation = (\r\n  map: LocationAnimationMap,\r\n  currentLocation: string\r\n) => {\r\n  const animation = map[currentLocation] ?? map[\"default\"];\r\n  return GetAnimationTransform(animation);\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../shared/device\";\r\nimport LinkButton from \"../common/LinkButton\";\r\nimport { colors } from \"../../shared/colors\";\r\nimport ContactsButton from \"../contacts/ContactsButton\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = styled.nav`\r\n  flex: 1;\r\n  display: flex;\r\n`;\r\n\r\nconst LinkContainer = styled.ul`\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  width: 100%;\r\n  font-size: 1.1em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 0.9em;\r\n  }\r\n`;\r\n\r\nconst Item = styled.li`\r\n  text-align: center;\r\n  list-style: none;\r\n`;\r\n\r\nconst LinkButtonStyled = styled(LinkButton)`\r\n  width: 70%;\r\n  border-top: 1px solid ${colors.mainColor};\r\n`;\r\n\r\nconst NavigationButtons = () => {\r\n  return (\r\n    <Navigation>\r\n      <LinkContainer>\r\n        <Item>\r\n          <ContactsButton></ContactsButton>\r\n        </Item>\r\n        <Item>\r\n          <Link to=\"/\">\r\n            <LinkButtonStyled>Return</LinkButtonStyled>\r\n          </Link>\r\n        </Item>\r\n      </LinkContainer>\r\n    </Navigation>\r\n  );\r\n};\r\n\r\nexport default NavigationButtons;\r\n","import React from \"react\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  AnimationDirection,\r\n  GetAnimator,\r\n  GetAnimationTransform,\r\n} from \"../../shared/animations\";\r\nimport image from \"../../images/me/EubyKuma.png\";\r\nimport { device } from \"../../shared/device\";\r\nimport PageStyle from \"../common/PageStyle\";\r\nimport NavigationButtons from \"./NavigationButtons\";\r\n\r\nconst AboutPageStyled = styled(PageStyle)`\r\n  font-size: 0.9em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.1em;\r\n  }\r\n`;\r\n\r\nconst AboutPageAnimated = GetAnimator(AboutPageStyled);\r\nconst AnimationTransform = GetAnimationTransform(AnimationDirection.FromLeft);\r\n\r\nconst ImageContainer = styled.div``;\r\n\r\nconst Image = styled.img`\r\n  display: flex;\r\n  width: 45%;\r\n  margin: 5% auto;\r\n\r\n  @media ${device.tablet} {\r\n    width: 30%;\r\n  }\r\n`;\r\n\r\nconst Info = styled.div`\r\n  margin: 0 10%;\r\n\r\n  span {\r\n    display: block;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst Bio = styled.div`\r\n  padding: 3% 20px;\r\n  height: 70%;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 30px;\r\n\r\n    p {\r\n      margin: 30px 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst AboutPage = () => {\r\n  return (\r\n    <AboutPageAnimated transform={AnimationTransform}>\r\n      <PageTitle centered>about me</PageTitle>\r\n      <ImageContainer>\r\n        <Image\r\n          src={image}\r\n          alt={\"drawing of me and my pets by @kumamaskie\"}\r\n        ></Image>\r\n        <Info>\r\n          <span>Gustavo Passos, 22 years old, Brazillian</span>\r\n          <span>currently working @ lambda3</span>\r\n        </Info>\r\n      </ImageContainer>\r\n      <Bio>\r\n        <p>\r\n          I’ve been programming for 5 years now, 4 of those as a professional\r\n          software developer in brazillian companies.\r\n        </p>\r\n        <p>\r\n          I’m always studying and developing new projects with different\r\n          technologies, specially games my defin\r\n        </p>\r\n      </Bio>\r\n      <NavigationButtons></NavigationButtons>\r\n    </AboutPageAnimated>\r\n  );\r\n};\r\n\r\nexport default AboutPage;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PageStyle from \"../../common/PageStyle\";\r\nimport {\r\n  AnimationDirection,\r\n  GetAnimator,\r\n  GetAnimationTransform,\r\n} from \"../../../shared/animations\";\r\nimport PageTitle from \"../../common/PageTitle\";\r\nimport Project from \"../../../models/project\";\r\nimport { device } from \"../../../shared/device\";\r\nimport ReturnButton from \"../../common/ReturnButton\";\r\nimport { getProjectById } from \"../../../data/projects/projectList\";\r\nimport { getTagsInProject } from \"../tag/tagList\";\r\n\r\nconst ProjectViewPageAnimated = GetAnimator(PageStyle);\r\nconst AnimationTransform = GetAnimationTransform(AnimationDirection.FromUp);\r\n\r\ninterface ProjectViewProps {\r\n  projectId: number;\r\n  project: Project;\r\n}\r\n\r\nconst Image = styled.img``;\r\n\r\nconst TagContainer = styled.div`\r\n  display: flex;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst ProjectText = styled.section`\r\n  padding: 20px;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 30px;\r\n  }\r\n`;\r\n\r\nconst ProjectViewPage = (props: ProjectViewProps) => {\r\n  let project = getProjectById(Number(props.projectId));\r\n\r\n  return (\r\n    <ProjectViewPageAnimated transform={AnimationTransform}>\r\n      <PageTitle centered>{project.name}</PageTitle>\r\n      <Image src={props.project.image} alt={props.project.imageAlt}></Image>\r\n      <TagContainer>{getTagsInProject(props.project)}</TagContainer>\r\n      <ProjectText>{props.project.container()}</ProjectText>\r\n      <ReturnButton></ReturnButton>\r\n    </ProjectViewPageAnimated>\r\n  );\r\n};\r\n\r\nexport default ProjectViewPage;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport ProjectListPage from \"./project/list/ProjectListPage\";\r\nimport HomePage from \"./home/HomePage\";\r\nimport AboutPage from \"./about/AboutPage\";\r\nimport ProjectViewPage from \"./project/view/ProjectViewPage\";\r\nimport { sketch } from \"../data/projects/sketch/sketch\";\r\nimport {\r\n  homePath,\r\n  aboutPath,\r\n  projectPath,\r\n  projectListPath,\r\n} from \"../models/routes\";\r\n\r\nconst Routes = (props: { location: any }) => {\r\n  return (\r\n    <Switch location={props.location}>\r\n      <Route exact path={homePath}>\r\n        <HomePage></HomePage>\r\n      </Route>\r\n\r\n      <Route exact path={aboutPath}>\r\n        <AboutPage></AboutPage>\r\n      </Route>\r\n\r\n      <Route exact path={projectListPath}>\r\n        <ProjectListPage></ProjectListPage>\r\n      </Route>\r\n\r\n      <Route\r\n        exact\r\n        path={projectPath}\r\n        render={(props) => {\r\n          return (\r\n            <ProjectViewPage\r\n              projectId={props.match.params.id}\r\n              project={sketch}\r\n            ></ProjectViewPage>\r\n          );\r\n        }}\r\n      ></Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport styled from \"styled-components\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { LastLocationProvider } from \"react-router-last-location\";\r\nimport Routes from \"./Routes\";\r\nimport { animationSpeed } from \"../shared/animations\";\r\n\r\nconst BodyGrid = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  max-width: 900px;\r\n  margin: auto;\r\n`;\r\n\r\nconst TransitionGroupStyled = styled(TransitionGroup)`\r\n  height: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Body = () => {\r\n  return (\r\n    <BodyGrid>\r\n      <Header></Header>\r\n      <HashRouter basename=\"/\">\r\n        <LastLocationProvider>\r\n          <Route\r\n            render={({ location }) => (\r\n              <TransitionGroupStyled>\r\n                <CSSTransition\r\n                  key={location.pathname}\r\n                  classNames=\"animation\"\r\n                  timeout={animationSpeed}\r\n                >\r\n                  <Routes location={location}></Routes>\r\n                </CSSTransition>\r\n              </TransitionGroupStyled>\r\n            )}\r\n          ></Route>\r\n        </LastLocationProvider>\r\n      </HashRouter>\r\n    </BodyGrid>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Body from \"./components/Body\";\n\nconst App = () => {\n  return <Body></Body>;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\n"],"sourceRoot":""}