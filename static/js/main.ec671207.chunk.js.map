{"version":3,"sources":["images/projects/sketch/sketch-carousel.png","images/projects/sketch/sketch-carousel-big.png","shared/colors.tsx","shared/device.ts","components/Header.tsx","components/Menu.tsx","components/Carousel/Slide/Tag.tsx","components/Carousel/Slide/TagContainer.tsx","components/Carousel/Slide/SlideDescription.tsx","components/Carousel/Slide/SlideContent.tsx","components/PageTitle.tsx","components/Carousel/CarouselContent.tsx","components/HomePage.tsx","components/AboutPage.tsx","components/Body.tsx","App.tsx","index.tsx"],"names":["module","exports","colors","deviceSize","device","tablet","desktop","Background","styled","header","NameContainer","div","DevName","JobTitle","Header","NavMenu","nav","LinkContainer","ul","Item","li","Button","button","props","border","Menu","Link","to","TagName","Tag","name","Tags","TagContainer","tags","map","value","i","key","DescriptionContainer","Title","strong","Description","SlideDescription","projectName","ImageContainer","section","Image","img","SlideContent","project","src","window","screen","width","image","imageBig","alt","imageAlt","TitleContent","centered","PageTitle","title","projectsInCarousel","sketchImage","sketchImageBig","CarouselContainer","CarouselStyled","Carousel","CarouselContent","showArrows","showThumbs","showStatus","showIndicators","emulateTouch","autoPlay","interval","stopOnHover","infiniteLoop","index","HomePageStyled","HomePage","AboutPage","Content","BodyGrid","Body","basename","exact","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec671207.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sketch-carousel.7b5eb98f.png\";","module.exports = __webpack_public_path__ + \"static/media/sketch-carousel-big.86fcbb81.png\";","const colors = {\r\n  mainColor: \"#7673ff\",\r\n  mainTextColor: \"#fff\",\r\n  mainBackgroundColor: \"#f1f1f1\",\r\n  secondBackgroundColor: \"#f7f7f7\"\r\n};\r\n\r\nconst buttonColors = {\r\n  onHoverColor: \"#e6e6e6\"\r\n};\r\n\r\nexport { colors, buttonColors };\r\n","export const deviceSize = {\r\n  tablet: 500,\r\n  desktop: 2560\r\n};\r\n\r\nexport function isInDesktop() {\r\n  return window.screen.width >= deviceSize.desktop;\r\n}\r\n\r\nexport const device = {\r\n  tablet: `(min-width: ${deviceSize.tablet}px)`,\r\n  desktop: `(min-width: ${deviceSize.desktop}px)`\r\n};\r\n","import React from \"react\";\r\nimport { colors } from \"../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../shared/device\";\r\n\r\nconst Background = styled.header`\r\n  width: 100%;\r\n  background-color: ${colors.mainColor};\r\n  color: ${colors.mainTextColor};\r\n  z-index: 10;\r\n`;\r\n\r\nconst NameContainer = styled.div`\r\n  padding: 20px;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 30px;\r\n  }\r\n`;\r\n\r\nconst DevName = styled.div`\r\n  font-size: 1em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.4em;\r\n  }\r\n`;\r\n\r\nconst JobTitle = styled.div`\r\n  font-size: 1.5em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.9em;\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Background>\r\n      <NameContainer>\r\n        <DevName>Gustavo Passos</DevName>\r\n        <JobTitle>Game & Software Developer</JobTitle>\r\n      </NameContainer>\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { colors } from \"../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../shared/device\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavMenu = styled.nav`\r\n  flex: 1;\r\n  display: flex;\r\n`;\r\n\r\nconst LinkContainer = styled.ul`\r\n  margin: auto;\r\n  padding: 0;\r\n  width: 100%;\r\n\r\n  @media ${device.tablet} {\r\n    display: inline-flex;\r\n  }\r\n`;\r\n\r\nconst Item = styled.li`\r\n  text-align: center;\r\n  list-style: none;\r\n\r\n  @media ${device.tablet} {\r\n    margin: auto;\r\n    width: 30%;\r\n  }\r\n`;\r\n\r\ninterface ButtonProps {\r\n  border?: boolean;\r\n}\r\n\r\nconst Button = styled.button`\r\n  width: 70%;\r\n  color: ${colors.mainColor};\r\n  background: ${colors.secondBackgroundColor};\r\n  font-size: 1.2em;\r\n  border: none;\r\n  padding: 4% 0;\r\n  border-bottom: ${(props: ButtonProps) =>\r\n    props.border ? \"solid 1px\" : \"none\"};\r\n  border-top: ${(props: ButtonProps) => (props.border ? \"solid 1px\" : \"none\")};\r\n\r\n  :focus,\r\n  :hover {\r\n    cursor: pointer;\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    width: 100%;\r\n    font-size: 1.8em;\r\n    padding: 15% 0;\r\n    border-bottom: none;\r\n    border-top: none;\r\n    border-left: ${(props: ButtonProps) =>\r\n      props.border ? \"solid 1px\" : \"none\"};\r\n    border-right: ${(props: ButtonProps) =>\r\n      props.border ? \"solid 1px\" : \"none\"};\r\n  }\r\n`;\r\n\r\nconst LinkStyled = styled(Link)`\r\n  text-decoration: none;\r\n`;\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <NavMenu>\r\n      <LinkContainer>\r\n        <Item>\r\n          <Button>My other projects</Button>\r\n        </Item>\r\n        <Item>\r\n          <Link to=\"/about\">\r\n            <Button border>About me</Button>\r\n          </Link>\r\n        </Item>\r\n        <Item>\r\n          <Button>Contact me</Button>\r\n        </Item>\r\n      </LinkContainer>\r\n    </NavMenu>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport { colors } from \"../../../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../shared/device\";\r\n\r\nconst TagName = styled.div`\r\n  font-size: 0.8em;\r\n  background: ${colors.mainBackgroundColor};\r\n  color: ${colors.mainColor};\r\n  text-align: center;\r\n  min-width: 60px;\r\n  margin: 10px;\r\n  padding: 3px;\r\n  border: 3px solid;\r\n  border-color: ${colors.mainColor};\r\n  border-radius: 50px;\r\n  float: right;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.2em;\r\n    min-width: 90px;\r\n    margin: 15px;\r\n  }\r\n`;\r\n\r\ninterface TagProps {\r\n  name: string;\r\n}\r\n\r\nconst Tag = (props: TagProps): React.ReactElement => {\r\n  return <TagName>{props.name}</TagName>;\r\n};\r\n\r\nexport default Tag;\r\n","import React from \"react\";\r\nimport Tag from \"./Tag\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Tags = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n`;\r\n\r\ninterface TagContainerProps {\r\n  tags: string[];\r\n}\r\n\r\nconst TagContainer = (props: TagContainerProps) => {\r\n  return (\r\n    <Tags>\r\n      {props.tags.map((value: string, i: number) => {\r\n        return <Tag name={value} key={i}></Tag>;\r\n      })}\r\n    </Tags>\r\n  );\r\n};\r\n\r\nexport default TagContainer;\r\n","import React from \"react\";\r\nimport { colors } from \"../../../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../shared/device\";\r\n\r\nconst DescriptionContainer = styled.div`\r\n  display: block;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  @media ${device.tablet} {\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst Title = styled.strong`\r\n  background: ${colors.mainColor};\r\n  color: #fff;\r\n  font-size: 1.1em;\r\n  letter-spacing: 5px;\r\n  text-transform: uppercase;\r\n  border: 1px solid #c2c2c2;\r\n  position: absolute;\r\n  top: -35px;\r\n  left: 0;\r\n  padding: 10px 20px;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.3em;\r\n    top: -60px;\r\n    padding: 20px 30px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.div`\r\n  font-size: 0.9em;\r\n  background: #e6e6e6;\r\n  padding: 10px 20px;\r\n  text-align: left;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.2em;\r\n    border-radius: 0 30px 0 0;\r\n    padding: 20px 30px;\r\n  }\r\n`;\r\n\r\nconst SlideDescription = (props: SlideDescriptionProps) => {\r\n  return (\r\n    <DescriptionContainer>\r\n      <Description>\r\n        My firt project made with commercial intent. There’s a playable demo\r\n        available\r\n      </Description>\r\n      <Title>{props.projectName}</Title>\r\n    </DescriptionContainer>\r\n  );\r\n};\r\n\r\ninterface SlideDescriptionProps {\r\n  projectName: string;\r\n}\r\n\r\nexport default SlideDescription;\r\n","import React from \"react\";\r\nimport TagContainer from \"./TagContainer\";\r\nimport Project from \"../../../models/project\";\r\nimport SlideDescription from \"./SlideDescription\";\r\nimport styled from \"styled-components\";\r\nimport { deviceSize, device } from \"../../../shared/device\";\r\nimport { colors } from \"../../../shared/colors\";\r\n\r\nconst ImageContainer = styled.section`\r\n  position: relative;\r\n  display: block;\r\n  background-color: ${colors.mainBackgroundColor};\r\n`;\r\n\r\nconst Image = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  margin: auto;\r\n`;\r\n\r\ninterface ProjectSlideProps {\r\n  index: number;\r\n  project: Project;\r\n}\r\n\r\nconst getImageByDeviceSize = (project: Project) => {\r\n  return window.screen.width < deviceSize.tablet\r\n    ? project.image\r\n    : project.imageBig;\r\n};\r\n\r\nconst SlideContent = (props: ProjectSlideProps) => {\r\n  return (\r\n    <ImageContainer>\r\n      <TagContainer tags={props.project.tags}></TagContainer>\r\n      <Image\r\n        src={getImageByDeviceSize(props.project)}\r\n        alt={props.project.imageAlt}\r\n      ></Image>\r\n      <SlideDescription projectName={props.project.name}></SlideDescription>\r\n    </ImageContainer>\r\n  );\r\n};\r\n\r\nexport default SlideContent;\r\n","import React from \"react\";\r\nimport { colors } from \"../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../shared/device\";\r\n\r\ninterface TitleProps {\r\n  centered: boolean;\r\n}\r\n\r\nconst TitleContent = styled.div`\r\n  background: ${colors.mainColor};\r\n  color: ${colors.mainTextColor};\r\n  padding: 10px 20px;\r\n  font-size: 0.95em;\r\n  text-align: ${(props: TitleProps) => (props.centered ? \"center\" : \"unset\")};\r\n\r\n  @media ${device.tablet} {\r\n    padding: 10px 30px;\r\n    font-size: 1.4em;\r\n  }\r\n`;\r\n\r\ninterface PageTitleProps {\r\n  title: string;\r\n  centered: boolean;\r\n}\r\n\r\nconst PageTitle = (props: PageTitleProps) => {\r\n  return <TitleContent centered={props.centered}>{props.title}</TitleContent>;\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from \"react\";\r\nimport SlideContent from \"./Slide/SlideContent\";\r\nimport PageTitle from \"../PageTitle\";\r\nimport Project from \"../../models/project\";\r\nimport styled from \"styled-components\";\r\nimport sketchImage from \"../../images/projects/sketch/sketch-carousel.png\";\r\nimport sketchImageBig from \"../../images/projects/sketch/sketch-carousel-big.png\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { device, deviceSize, isInDesktop } from \"../../shared/device\";\r\n\r\nconst projectsInCarousel: Project[] = [\r\n  {\r\n    image: sketchImage,\r\n    imageBig: sketchImageBig,\r\n    imageAlt: \"Image the game Sketch\",\r\n    name: \"sketch 1\",\r\n    tags: [\"Unity\", \"C#\"]\r\n  },\r\n  {\r\n    image: sketchImage,\r\n    imageBig: sketchImageBig,\r\n    imageAlt: \"Image the game Sketch\",\r\n    name: \"sketch 2\",\r\n    tags: [\"Unity\", \"C#\"]\r\n  },\r\n  {\r\n    image: sketchImage,\r\n    imageBig: sketchImageBig,\r\n    imageAlt: \"Image the game Sketch\",\r\n    name: \"sketch 3\",\r\n    tags: [\"Unity\", \"C#\"]\r\n  }\r\n];\r\n\r\nconst CarouselContainer = styled.div`\r\n  z-index: 10;\r\n`;\r\n\r\nconst CarouselStyled = styled(Carousel)`\r\n  .control-dots {\r\n    top: 0;\r\n    bottom: unset;\r\n  }\r\n`;\r\n\r\nfunction projectSlides() {\r\n  return projectsInCarousel.map((value: Project, i: number) => {\r\n    return <SlideContent index={i} project={value} key={i}></SlideContent>;\r\n  });\r\n}\r\n\r\nconst CarouselContent = () => {\r\n  return (\r\n    <CarouselContainer>\r\n      <PageTitle\r\n        centered={false}\r\n        title={\"some of the projects I've worked on\"}\r\n      ></PageTitle>\r\n      <CarouselStyled\r\n        showArrows={isInDesktop()}\r\n        showThumbs={false}\r\n        showStatus={false}\r\n        showIndicators\r\n        emulateTouch\r\n        autoPlay\r\n        interval={4000}\r\n        stopOnHover\r\n        infiniteLoop\r\n      >\r\n        {projectSlides()}\r\n      </CarouselStyled>\r\n    </CarouselContainer>\r\n  );\r\n};\r\n\r\nexport default CarouselContent;\r\n","import React from \"react\";\r\nimport Menu from \"./Menu\";\r\nimport CarouselContent from \"./Carousel/CarouselContent\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HomePageStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n`;\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <HomePageStyled>\r\n      <CarouselContent></CarouselContent>\r\n      <Menu></Menu>\r\n    </HomePageStyled>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport PageTitle from \"./PageTitle\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AboutPageAnim = styled.div`\r\n  &.page-enter {\r\n    background-color: black;\r\n  }\r\n\r\n  &.page-exit {\r\n    background-color: black;\r\n  }\r\n`;\r\n\r\nconst AboutPage = () => {\r\n  return (\r\n    <div>\r\n      <PageTitle centered title=\"about me\"></PageTitle>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutPage;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport styled from \"styled-components\";\r\nimport { colors } from \"../shared/colors\";\r\nimport HomePage from \"./HomePage\";\r\nimport AboutPage from \"./AboutPage\";\r\nimport { HashRouter, Route, Link } from \"react-router-dom\";\r\n\r\nconst Content = styled.div`\r\n  height: 100%;\r\n`;\r\n\r\nconst BodyGrid = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  max-width: 900px;\r\n  margin: auto;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 40%;\r\n  background-color: ${colors.mainColor};\r\n`;\r\n\r\nconst Body = () => {\r\n  return (\r\n    <Content>\r\n      <BodyGrid>\r\n        <Header></Header>\r\n        <HashRouter basename=\"/\">\r\n          <Route exact path=\"/\" component={HomePage}></Route>\r\n          <Route exact path=\"/about\" component={AboutPage}></Route>\r\n        </HashRouter>\r\n      </BodyGrid>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Body from \"./components/Body\";\n\nfunction App() {\n  return <Body></Body>;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\n"],"sourceRoot":""}