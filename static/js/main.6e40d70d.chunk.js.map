{"version":3,"sources":["images/projects/sketch/sketch-carousel.png","images/projects/sketch/sketch-carousel-big.png","shared/colors.tsx","shared/device.ts","components/Header.tsx","components/Carousel/Slide/Tag.tsx","components/Carousel/Slide/TagContainer.tsx","components/Carousel/Slide/SlideDescription.tsx","components/Carousel/Slide/SlideContent.tsx","components/Carousel/CarouselTitle.tsx","components/Carousel/CarouselContent.tsx","components/Menu.tsx","components/Body.tsx","App.tsx","index.tsx"],"names":["module","exports","colors","deviceSize","device","tablet","desktop","Background","styled","header","NameContainer","div","DevName","JobTitle","Header","TagName","Tag","props","name","Tags","TagContainer","tags","map","value","i","key","DescriptionContainer","Title","Description","SlideDescription","ImageContainer","section","Image","img","SlideContent","index","project","src","window","screen","width","image","imageBig","alt","imageAlt","TitleContent","CarouselTitle","projectsInCarousel","sketchImage","sketchImageBig","CarouselContainer","CarouselContent","naturalSlideWidth","naturalSlideHeight","visibleSlides","totalSlides","NavMenu","nav","LinkContainer","ul","Link","li","Button","button","border","Menu","BodyGrid","body","Body","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e40d70d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sketch-carousel.7b5eb98f.png\";","module.exports = __webpack_public_path__ + \"static/media/sketch-carousel-big.86fcbb81.png\";","const colors = {\r\n  mainColor: \"#7673ff\",\r\n  mainTextColor: \"#fff\",\r\n  mainBackgroundColor: \"#f1f1f1\",\r\n  secondBackgroundColor: \"#f7f7f7\"\r\n};\r\n\r\nconst buttonColors = {\r\n  onHoverColor: \"#e6e6e6\"\r\n};\r\n\r\nexport { colors, buttonColors };\r\n","export const deviceSize = {\r\n  tablet: 500,\r\n  desktop: 2560\r\n};\r\n\r\nexport const device = {\r\n  tablet: `(min-width: ${deviceSize.tablet}px)`,\r\n  desktop: `(min-width: ${deviceSize.desktop}px)`\r\n};\r\n","import React from \"react\";\r\nimport { colors } from \"../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../shared/device\";\r\n\r\nconst Background = styled.header`\r\n  width: 100%;\r\n  background-color: ${colors.mainColor};\r\n  color: ${colors.mainTextColor};\r\n`;\r\n\r\nconst NameContainer = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst DevName = styled.div`\r\n  font-size: 1em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.3em;\r\n  }\r\n`;\r\n\r\nconst JobTitle = styled.div`\r\n  font-size: 1.5em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.8em;\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Background>\r\n      <NameContainer>\r\n        <DevName>Gustavo Passos</DevName>\r\n        <JobTitle>Game & Software Developer</JobTitle>\r\n      </NameContainer>\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { colors } from \"../../../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../shared/device\";\r\n\r\nconst TagName = styled.div`\r\n  font-size: 0.8em;\r\n  background: ${colors.mainBackgroundColor};\r\n  color: ${colors.mainColor};\r\n  text-align: center;\r\n  min-width: 60px;\r\n  margin: 10px;\r\n  padding: 3px;\r\n  border: 3px solid;\r\n  border-color: ${colors.mainColor};\r\n  border-radius: 50px;\r\n  float: right;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.2em;\r\n    min-width: 100px;\r\n    margin: 15px;\r\n  }\r\n`;\r\n\r\ninterface TagProps {\r\n  name: string;\r\n}\r\n\r\nconst Tag = (props: TagProps): React.ReactElement => {\r\n  return <TagName>{props.name}</TagName>;\r\n};\r\n\r\nexport default Tag;\r\n","import React from \"react\";\r\nimport Tag from \"./Tag\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Tags = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n`;\r\n\r\ninterface TagContainerProps {\r\n  tags: string[];\r\n}\r\n\r\nconst TagContainer = (props: TagContainerProps) => {\r\n  return (\r\n    <Tags>\r\n      {props.tags.map((value: string, i: number) => {\r\n        return <Tag name={value} key={i}></Tag>;\r\n      })}\r\n    </Tags>\r\n  );\r\n};\r\n\r\nexport default TagContainer;\r\n","import React from \"react\";\r\nimport { colors } from \"../../../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../shared/device\";\r\n\r\nconst DescriptionContainer = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  bottom: -15%;\r\n  width: 100%;\r\n  height: 25%;\r\n\r\n  @media ${device.tablet} {\r\n    bottom: 0;\r\n    width: 60%;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  background: ${colors.mainColor};\r\n  width: 40%;\r\n  text-align: center;\r\n  padding: 10px 5px;\r\n  color: #fff;\r\n  font-size: 1.1em;\r\n  letter-spacing: 5px;\r\n  border: 1px solid #c2c2c2;\r\n  position: absolute;\r\n  top: -35px;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.3em;\r\n    top: -60px;\r\n    padding: 20px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.div`\r\n  font-size: 0.9em;\r\n  background: #e6e6e6;\r\n  width: 100%;\r\n  padding: 10px;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.1em;\r\n    border-radius: 0 30px 0 0;\r\n  }\r\n`;\r\n\r\nconst SlideDescription = () => {\r\n  return (\r\n    <DescriptionContainer>\r\n      <Title>\r\n        <strong>SKETCH</strong>\r\n      </Title>\r\n      <Description>\r\n        My firt project made with commercial intent. Thereâ€™s a playable demo\r\n        available\r\n      </Description>\r\n    </DescriptionContainer>\r\n  );\r\n};\r\n\r\nexport default SlideDescription;\r\n","import React from \"react\";\r\nimport { Slide } from \"pure-react-carousel\";\r\nimport TagContainer from \"./TagContainer\";\r\nimport Project from \"../../../models/project\";\r\nimport SlideDescription from \"./SlideDescription\";\r\nimport styled from \"styled-components\";\r\nimport { deviceSize, device } from \"../../../shared/device\";\r\n\r\nconst ImageContainer = styled.section`\r\n  position: relative;\r\n  display: flex;\r\n  max-height: 250px;\r\n\r\n  @media ${device.tablet} {\r\n    max-height: 350px;\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n`;\r\n\r\ninterface ProjectSlideProps {\r\n  index: number;\r\n  project: Project;\r\n}\r\n\r\nconst getImageByDeviceSize = (project: Project) => {\r\n  return window.screen.width < deviceSize.tablet\r\n    ? project.image\r\n    : project.imageBig;\r\n};\r\n\r\nconst SlideContent = (props: ProjectSlideProps) => {\r\n  return (\r\n    <Slide index={props.index}>\r\n      <ImageContainer>\r\n        <TagContainer tags={props.project.tags}></TagContainer>\r\n        <Image\r\n          src={getImageByDeviceSize(props.project)}\r\n          alt={props.project.imageAlt}\r\n        ></Image>\r\n        <SlideDescription></SlideDescription>\r\n      </ImageContainer>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default SlideContent;\r\n","import React from \"react\";\r\nimport { colors } from \"../../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../shared/device\";\r\n\r\nconst TitleContent = styled.div`\r\n  background: ${colors.mainColor};\r\n  color: ${colors.mainTextColor};\r\n  text-align: center;\r\n  padding: 10px;\r\n  font-size: 0.95em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.2em;\r\n  }\r\n`;\r\n\r\nconst CarouselTitle = () => {\r\n  return (\r\n    <TitleContent>those are some of the projects I've worked on</TitleContent>\r\n  );\r\n};\r\n\r\nexport default CarouselTitle;\r\n","import React from \"react\";\r\nimport { CarouselProvider, Slider } from \"pure-react-carousel\";\r\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\r\nimport SlideContent from \"./Slide/SlideContent\";\r\nimport CarouselTitle from \"./CarouselTitle\";\r\nimport Project from \"../../models/project\";\r\nimport styled from \"styled-components\";\r\nimport sketchImage from \"../../images/projects/sketch/sketch-carousel.png\";\r\nimport sketchImageBig from \"../../images/projects/sketch/sketch-carousel-big.png\";\r\n\r\nconst projectsInCarousel: Project[] = [\r\n  {\r\n    image: sketchImage,\r\n    imageBig: sketchImageBig,\r\n    imageAlt: \"Image the game Sketch\",\r\n    name: \"sketch\",\r\n    tags: [\"Unity\", \"C#\"]\r\n  }\r\n];\r\n\r\nconst CarouselContainer = styled.div``;\r\n\r\nconst CarouselContent = () => {\r\n  return (\r\n    <CarouselContainer>\r\n      <CarouselTitle></CarouselTitle>\r\n      <CarouselProvider\r\n        naturalSlideWidth={1}\r\n        naturalSlideHeight={1}\r\n        visibleSlides={1}\r\n        totalSlides={1}\r\n      >\r\n        <Slider>\r\n          {projectsInCarousel.map((value: Project, i: number) => {\r\n            return (\r\n              <SlideContent index={i} project={value} key={i}></SlideContent>\r\n            );\r\n          })}\r\n        </Slider>\r\n      </CarouselProvider>\r\n    </CarouselContainer>\r\n  );\r\n};\r\n\r\nexport default CarouselContent;\r\n","import React from \"react\";\r\nimport { colors } from \"../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../shared/device\";\r\n\r\nconst NavMenu = styled.nav`\r\n  position: relative;\r\n`;\r\n\r\nconst LinkContainer = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 100%;\r\n\r\n  @media ${device.tablet} {\r\n    display: inline-flex;\r\n  }\r\n`;\r\n\r\nconst Link = styled.li`\r\n  text-align: center;\r\n  list-style: none;\r\n\r\n  @media ${device.tablet} {\r\n    margin: auto;\r\n    width: 30%;\r\n  }\r\n`;\r\n\r\ninterface ButtonProps {\r\n  border?: boolean;\r\n}\r\n\r\nconst Button = styled.button`\r\n  width: 70%;\r\n  color: ${colors.mainColor};\r\n  background: ${colors.secondBackgroundColor};\r\n  font-size: 1.2em;\r\n  border: none;\r\n  padding: 6% 0;\r\n  border-bottom: ${(props: ButtonProps) =>\r\n    props.border ? \"solid 1px\" : \"none\"};\r\n  border-top: ${(props: ButtonProps) => (props.border ? \"solid 1px\" : \"none\")};\r\n\r\n  :focus,\r\n  :hover {\r\n    cursor: pointer;\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    width: 100%;\r\n    font-size: 1.6em;\r\n    padding: 15% 0;\r\n    border-bottom: none;\r\n    border-top: none;\r\n    border-left: ${(props: ButtonProps) =>\r\n      props.border ? \"solid 1px\" : \"none\"};\r\n    border-right: ${(props: ButtonProps) =>\r\n      props.border ? \"solid 1px\" : \"none\"};\r\n  }\r\n`;\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <NavMenu>\r\n      <LinkContainer>\r\n        <Link>\r\n          <Button>My other projects</Button>\r\n        </Link>\r\n        <Link>\r\n          <Button border>About me</Button>\r\n        </Link>\r\n        <Link>\r\n          <Button>Contact</Button>\r\n        </Link>\r\n      </LinkContainer>\r\n    </NavMenu>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport CarouselContent from \"./Carousel/CarouselContent\";\r\nimport Menu from \"./Menu\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../shared/device\";\r\n\r\nconst BodyGrid = styled.body`\r\n  display: grid;\r\n  grid-template-rows: 15% 45% 40%;\r\n  height: 100%;\r\n\r\n  @media ${device.tablet} {\r\n    grid-template-rows: 15% 55% 30%;\r\n  }\r\n`;\r\n\r\nconst Body = () => {\r\n  return (\r\n    <BodyGrid>\r\n      <Header></Header>\r\n      <CarouselContent></CarouselContent>\r\n      <Menu></Menu>\r\n    </BodyGrid>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Body from \"./components/Body\";\n\nfunction App() {\n  return <Body></Body>;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\n"],"sourceRoot":""}