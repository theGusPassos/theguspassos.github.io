{"version":3,"sources":["images/contacts/gmail.png","images/contacts/github.png","images/contacts/linkedin.png","images/projects/sketch/sketch-carousel.png","images/projects/sketch/sketch-carousel-big.png","images/me/EubyKuma.png","shared/colors.tsx","shared/device.ts","data/contacts.ts","components/contacts/contactCardClick.ts","shared/copyToClipboard.ts","components/common/ToolTip.tsx","components/header/HeaderContacts.tsx","components/common/LinkButton.tsx","components/header/HeaderMenu.tsx","components/header/Header.tsx","components/common/PageStyle.tsx","shared/animations.ts","components/common/PageTitle.tsx","components/project/tag/Tag.tsx","components/project/list/ProjectCard.tsx","data/projects/sketch/SketchDescription.tsx","data/projects/sketch/sketch.ts","data/projects/projectList.ts","components/common/ReturnButton.tsx","shared/locationToAnim.ts","shared/dynamicAnimation.ts","models/routes.ts","components/project/list/ProjectListPage.tsx","components/home/carousel/slide/SlideDescription.tsx","components/project/tag/tagList.tsx","components/home/carousel/slide/SlideContent.tsx","components/home/carousel/CarouselContent.tsx","components/contacts/ContactCard.tsx","components/contacts/ContactsModal.tsx","components/contacts/ContactsButton.tsx","components/home/Menu.tsx","components/home/HomePage.tsx","components/about/NavigationButtons.tsx","components/about/AboutPage.tsx","components/project/view/ProjectViewPage.tsx","components/Routes.tsx","components/Body.tsx","App.tsx","index.tsx"],"names":["module","exports","colors","deviceSize","isInDesktop","currentWidth","device","tablet","desktop","contacts","image","gmailLogo","altImage","message","contactText","linkedinLogo","url","githubLogo","onCardClick","contact","windowRef","window","open","opener","text","input","document","createElement","setAttribute","body","appendChild","select","execCommand","removeChild","copyToClipboard","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","MainToolTip","styled","ReactTooltip","WhiteToolTip","ContactContainer","div","ContactIcon","img","HeaderContacts","map","key","onClick","onKeyDown","e","keyCode","charCode","onCardKeyDown","src","tabIndex","data-tip","LinkButton","button","HeaderMenuStyled","section","LinkContainer","ul","Item","li","MenuButton","props","border","HeaderMenu","to","Background","header","InfoContainer","NameContainer","DevName","JobTitle","Header","goToHome","createHashHistory","push","onKeyPress","isDesktop","PageStyle","AnimationDirection","GetAnimator","component","GetTranslateFromTransform","transform","GetAnimationTransform","animationDirection","FromUp","x","y","FromDown","FromLeft","FromRight","TitleContent","h1","centered","PageTitle","children","TagName","Tag","ProjectCardStyle","CardHeader","ProjectTitle","strong","TagContainerStyled","ProjectDescription","p","LinkButtonStyled","ProjectCard","projectId","project","name","tags","tag","id","SketchDescription","sketch","imageAlt","imageBig","imgBig","container","projectList","LinkStyled","Link","ReturnButtonStyled","ReturnButton","lastLocation","useLastLocation","returnToHome","pathname","getLastVisited","getLocationToAnim","currentLocation","pageHashLocation","replace","getAnimationBasedOnLocation","animation","homePathHash","aboutPathHash","projectListPathHash","ProjectListPageAnimated","ProjectCardContainer","ProjectListPage","location","hash","animationTransform","animationMap","getAnimationMap","a","DescriptionContainer","Title","Description","SlideDescription","projectName","getTagsInProject","getTags","ImageContainer","TagContainer","Image","SlideContent","screen","width","alt","CarouselContainer","CarouselStyled","Carousel","CarouselContent","showArrows","showThumbs","showStatus","showIndicators","emulateTouch","autoPlay","transitionTime","interval","stopOnHover","infiniteLoop","value","i","index","ContactCardStyled","ContactImage","ContactInfo","ContactCard","ModalBackground","ModalWrapper","ContactsContainer","ContactsModal","modalMarkup","onClose","ReactDOM","createPortal","ContactsButton","React","useState","modalIsOpen","setIsOpen","CSSTransition","in","classNames","unmountOnExit","timeout","NavMenu","nav","Menu","HomePageAnimated","HomePage","Navigation","NavigationButtons","AboutPageAnimated","Info","Bio","AboutPage","href","target","rel","ProjectViewPageAnimated","AnimationTransform","ProjectText","ProjectViewPage","Number","filter","Routes","useEffect","ReactGA","pageview","exact","path","render","renderProps","match","params","BodyGrid","TransitionGroupStyled","TransitionGroup","withResizeDetector","basename","configure","initialize","App","handleWidth","getElementById"],"mappings":"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","file":"static/js/main.e2b5fb0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gmail.62549d5c.png\";","module.exports = __webpack_public_path__ + \"static/media/github.9f96cfd1.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.07265057.png\";","module.exports = __webpack_public_path__ + \"static/media/sketch-carousel.7b5eb98f.png\";","module.exports = __webpack_public_path__ + \"static/media/sketch-carousel-big.86fcbb81.png\";","module.exports = __webpack_public_path__ + \"static/media/EubyKuma.de40467c.png\";","const colors = {\r\n  mainColor: \"#7673ff\",\r\n  mainTextColor: \"#fff\",\r\n  mainBackgroundColor: \"#f1f1f1\",\r\n  secondColor: \"#6B68EE\",\r\n  secondBackgroundColor: \"#f7f7f7\",\r\n\r\n  buttonClickedColor: \"#dedede\",\r\n};\r\n\r\nconst buttonColors = {\r\n  onHoverColor: \"#e6e6e6\",\r\n};\r\n\r\nexport { colors, buttonColors };\r\n","export const deviceSize = {\r\n  tablet: 500,\r\n  desktop: 920,\r\n};\r\n\r\nexport function isInDesktop(currentWidth: number) {\r\n  return currentWidth > deviceSize.desktop;\r\n}\r\n\r\nexport const device = {\r\n  tablet: `(min-width: ${deviceSize.tablet}px)`,\r\n  desktop: `(min-width: ${deviceSize.desktop}px)`,\r\n};\r\n","import Contact from \"../models/contact\";\r\nimport gmailLogo from \"../images/contacts/gmail.png\";\r\nimport githubLogo from \"../images/contacts/github.png\";\r\nimport linkedinLogo from \"../images/contacts/linkedin.png\";\r\n\r\nexport const contacts: Contact[] = [\r\n  {\r\n    image: gmailLogo,\r\n    altImage: \"gmail logo\",\r\n    message: \"mail me\",\r\n    contactText: \"theguspassos@gmail.com\",\r\n  },\r\n  {\r\n    image: linkedinLogo,\r\n    altImage: \"linkedin logo\",\r\n    message: \"connect with me\",\r\n    contactText: \"linkedin.com/in/theguspassos/\",\r\n    url: \"https://www.linkedin.com/in/theguspassos/\",\r\n  },\r\n  {\r\n    image: githubLogo,\r\n    altImage: \"github logo\",\r\n    message: \"code with me\",\r\n    contactText: \"github/theguspassos\",\r\n    url: \"https://github.com/theGusPassos\",\r\n  },\r\n];\r\n","import Contact from \"../../models/contact\";\r\nimport { copyToClipboard } from \"../../shared/copyToClipboard\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const onCardClick = (contact: Contact) => {\r\n  if (contact.url) {\r\n    let windowRef = window.open(contact.url, \"_blank\");\r\n    if (windowRef) windowRef.opener = null;\r\n  } else {\r\n    copyToClipboard(contact.contactText);\r\n    toast.info(`my e-mail was copied to your clipboard =)`, {\r\n      position: \"bottom-right\",\r\n      autoClose: 3000,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: false,\r\n      draggable: false,\r\n    });\r\n  }\r\n};\r\n\r\nexport const onCardKeyDown = (e: any, contact: Contact) => {\r\n  if (e.keyCode === 13 || e.charCode === 13) onCardClick(contact);\r\n};\r\n","export const copyToClipboard = (text: string) => {\r\n  const input = document.createElement(\"input\");\r\n  input.setAttribute(\"value\", text);\r\n  document.body.appendChild(input);\r\n  input.select();\r\n  document.execCommand(\"copy\");\r\n  document.body.removeChild(input);\r\n};\r\n","import styled from \"styled-components\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { colors } from \"../../shared/colors\";\r\n\r\nexport const MainToolTip = styled(ReactTooltip)`\r\n  background: ${colors.mainColor} !important;\r\n`;\r\n\r\nexport const WhiteToolTip = styled(ReactTooltip)`\r\n  background: #fff !important;\r\n  color: ${colors.mainColor} !important;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { contacts } from \"../../data/contacts\";\r\nimport Contact from \"../../models/contact\";\r\nimport { onCardClick, onCardKeyDown } from \"../contacts/contactCardClick\";\r\nimport { WhiteToolTip } from \"../common/ToolTip\";\r\n\r\nconst ContactContainer = styled.div`\r\n  width: 50%;\r\n  margin: auto;\r\n  display: flex;\r\n  flex: 1;\r\n`;\r\n\r\nconst ContactIcon = styled.img`\r\n  opacity: 0.3;\r\n  width: 20%;\r\n  margin: auto;\r\n\r\n  :hover,\r\n  :focus {\r\n    cursor: pointer;\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst HeaderContacts = () => {\r\n  const headerItemsBeforeContact = 3;\r\n\r\n  const getContacts = () => {\r\n    return contacts.map((contact: Contact, key: number) => {\r\n      return (\r\n        <ContactIcon\r\n          onClick={() => onCardClick(contact)}\r\n          onKeyDown={(e) => onCardKeyDown(e, contact)}\r\n          src={contact.image}\r\n          key={key}\r\n          tabIndex={key + headerItemsBeforeContact + 1}\r\n          data-tip={contact.message}\r\n        ></ContactIcon>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ContactContainer>\r\n      {getContacts()}\r\n      <WhiteToolTip />\r\n    </ContactContainer>\r\n  );\r\n};\r\n\r\nexport default HeaderContacts;\r\n","import styled from \"styled-components\";\r\nimport { device } from \"../../shared/device\";\r\nimport { colors } from \"../../shared/colors\";\r\n\r\nconst LinkButton = styled.button`\r\n  color: ${colors.mainColor};\r\n  background: ${colors.mainBackgroundColor};\r\n  font-size: 1.2em;\r\n  border: none;\r\n  padding: 4% 0;\r\n\r\n  :focus,\r\n  :hover {\r\n    cursor: pointer;\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.4em;\r\n  }\r\n`;\r\n\r\nexport default LinkButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LinkButton from \"../common/LinkButton\";\r\nimport { colors } from \"../../shared/colors\";\r\n\r\nconst HeaderMenuStyled = styled.section`\r\n  padding: 15% 15% 0 15%;\r\n  height: 25%;\r\n`;\r\n\r\nconst LinkContainer = styled.ul`\r\n  margin: auto;\r\n  padding: 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  text-align: center;\r\n  list-style: none;\r\n`;\r\n\r\ninterface ButtonProps {\r\n  border?: boolean;\r\n}\r\n\r\nconst MenuButton = styled(LinkButton)`\r\n  width: 100%;\r\n  padding: 7% 0;\r\n  color: #fff;\r\n  background: ${colors.mainColor};\r\n  border-top: ${(props: ButtonProps) =>\r\n    props.border ? \"solid 1px white\" : \"none\"};\r\n`;\r\n\r\nconst HeaderMenu = () => {\r\n  return (\r\n    <HeaderMenuStyled>\r\n      <LinkContainer>\r\n        <Item>\r\n          <Link to=\"/projects\" tabIndex={-1}>\r\n            <MenuButton tabIndex={2}>My other projects</MenuButton>\r\n          </Link>\r\n        </Item>\r\n        <Item>\r\n          <Link to=\"/about\" tabIndex={-1}>\r\n            <MenuButton border tabIndex={3}>\r\n              About Me\r\n            </MenuButton>\r\n          </Link>\r\n        </Item>\r\n      </LinkContainer>\r\n    </HeaderMenuStyled>\r\n  );\r\n};\r\n\r\nexport default HeaderMenu;\r\n","import React, { Fragment } from \"react\";\r\nimport { colors } from \"../../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../shared/device\";\r\nimport HeaderContacts from \"./HeaderContacts\";\r\nimport HeaderMenu from \"./HeaderMenu\";\r\nimport { createHashHistory } from \"history\";\r\nimport DeviceInfo from \"../../shared/deviceInfo\";\r\n\r\nconst Background = styled.header`\r\n  width: 100%;\r\n  background-color: ${colors.mainColor};\r\n  color: ${colors.mainTextColor};\r\n  z-index: 10;\r\n\r\n  @media ${device.desktop} {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 300px;\r\n    height: 100%;\r\n    float: left;\r\n    box-shadow: 6px 0px 13px #0000004f;\r\n  }\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  padding: 20px;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 30px;\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    height: 45%;\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst NameContainer = styled.div`\r\n  margin: auto;\r\n  outline-color: #fff;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst DevName = styled.div`\r\n  font-size: 1em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.2em;\r\n  }\r\n`;\r\n\r\nconst JobTitle = styled.div`\r\n  font-size: 1.5em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.7em;\r\n  }\r\n`;\r\n\r\ninterface HeaderProps extends DeviceInfo {}\r\n\r\nconst Header = (props: HeaderProps) => {\r\n  const goToHome = () => {\r\n    const history = createHashHistory();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const goToHomeOnEnter = (e: any) => {\r\n    if (e.keyCode === 13 || e.charCode === 13) goToHome();\r\n  };\r\n\r\n  return (\r\n    <Background>\r\n      <InfoContainer>\r\n        <NameContainer\r\n          onClick={goToHome}\r\n          onKeyPress={goToHomeOnEnter}\r\n          tabIndex={1}\r\n        >\r\n          <DevName>Gustavo Passos</DevName>\r\n          <JobTitle>Game & Software Developer</JobTitle>\r\n        </NameContainer>\r\n      </InfoContainer>\r\n      {props.isDesktop ? (\r\n        <Fragment>\r\n          <HeaderMenu></HeaderMenu>\r\n          <HeaderContacts></HeaderContacts>\r\n        </Fragment>\r\n      ) : null}\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\nimport { device } from \"../../shared/device\";\r\n\r\nconst PageStyle = styled.section`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n\r\n  @media ${device.desktop} {\r\n    max-width: 800px;\r\n    width: 90%;\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nexport default PageStyle;\r\n","import styled, { AnyStyledComponent } from \"styled-components\";\r\n\r\nexport const animationSpeed = 500;\r\nconst animationDistance = 150;\r\n\r\nexport enum AnimationDirection {\r\n  FromUp,\r\n  FromDown,\r\n  FromRight,\r\n  FromLeft,\r\n}\r\n\r\nexport interface Transform {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface AnimatorProps {\r\n  transform: Transform;\r\n}\r\n\r\nexport const GetAnimator = (component: AnyStyledComponent) => {\r\n  return styled(component)`\r\n    &.animation-enter {\r\n      transform: ${(props: AnimatorProps) =>\r\n        GetTranslateFromTransform(props.transform)};\r\n    }\r\n\r\n    &.animation-enter-active {\r\n      transform: translateX(0);\r\n      transition-timing-function: ease-in-out;\r\n      transition: transform ${animationSpeed}ms;\r\n    }\r\n\r\n    &.animation-exit {\r\n      transform: translateX(0);\r\n    }\r\n\r\n    &.animation-exit-active {\r\n      transform: ${(props: AnimatorProps) =>\r\n        GetTranslateFromTransform(props.transform)};\r\n      transition-timing-function: ease-in-out;\r\n      transition: transform ${animationSpeed}ms;\r\n    }\r\n  `;\r\n};\r\n\r\nexport const GetAnimationTransform = (\r\n  animationDirection: AnimationDirection\r\n): Transform => {\r\n  switch (animationDirection) {\r\n    case AnimationDirection.FromUp:\r\n      return { x: 0, y: -animationDistance };\r\n\r\n    case AnimationDirection.FromDown:\r\n      return { x: 0, y: animationDistance };\r\n\r\n    case AnimationDirection.FromLeft:\r\n      return { x: -animationDistance, y: 0 };\r\n\r\n    case AnimationDirection.FromRight:\r\n      return { x: animationDistance, y: 0 };\r\n  }\r\n};\r\n\r\nexport const GetTranslateFromTransform = (transform: Transform): string => {\r\n  return `translate(${transform.x}%, ${transform.y}%)`;\r\n};\r\n","import React from \"react\";\r\nimport { colors } from \"../../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../shared/device\";\r\n\r\ninterface TitleProps {\r\n  centered?: boolean;\r\n}\r\n\r\nconst TitleContent = styled.h1`\r\n  background: ${colors.secondColor};\r\n  color: ${colors.mainTextColor};\r\n  padding: 10px 20px;\r\n  font-size: 0.95em;\r\n  text-align: ${(props: TitleProps) => (props.centered ? \"center\" : \"unset\")};\r\n  box-shadow: 0px 3px 11px 0px #0000009c;\r\n  font-weight: normal;\r\n  margin: 0;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 10px 30px;\r\n    font-size: 1.4em;\r\n    box-shadow: none;\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    text-align: center;\r\n    color: ${colors.mainColor};\r\n    background: ${colors.mainBackgroundColor};\r\n    margin-bottom: 10px;\r\n    font-size: 1.6em;\r\n  }\r\n`;\r\n\r\ninterface PageTitleProps {\r\n  children: string;\r\n  centered?: boolean;\r\n}\r\n\r\nconst PageTitle = (props: PageTitleProps) => {\r\n  return (\r\n    <TitleContent centered={props.centered}>{props.children}</TitleContent>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from \"react\";\r\nimport { colors } from \"../../../shared/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../shared/device\";\r\n\r\nconst TagName = styled.div`\r\n  font-size: 0.8em;\r\n  background: ${colors.mainBackgroundColor};\r\n  color: ${colors.mainColor};\r\n  text-align: center;\r\n  min-width: 60px;\r\n  margin: 10px;\r\n  padding: 3px 7px;\r\n  border: 3px solid;\r\n  border-color: ${colors.mainColor};\r\n  border-radius: 50px;\r\n  float: right;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.2em;\r\n    min-width: 90px;\r\n    margin: 15px;\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    padding: 5px 20px;\r\n  }\r\n`;\r\n\r\ninterface TagProps {\r\n  children: string;\r\n}\r\n\r\nconst Tag = (props: TagProps): React.ReactElement => {\r\n  return <TagName>{props.children}</TagName>;\r\n};\r\n\r\nexport default Tag;\r\n","import React from \"react\";\r\nimport Project from \"../../../models/project\";\r\nimport styled from \"styled-components\";\r\nimport Tag from \"../tag/Tag\";\r\nimport { device } from \"../../../shared/device\";\r\nimport { colors } from \"../../../shared/colors\";\r\nimport LinkButton from \"../../common/LinkButton\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface ProjectCardProps {\r\n  project: Project;\r\n}\r\n\r\nconst ProjectCardStyle = styled.div`\r\n  padding: 20px 0;\r\n  border-bottom: 1px solid ${colors.mainColor};\r\n  transition: 0.3s;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 30px 0;\r\n  }\r\n`;\r\n\r\nconst CardHeader = styled.div`\r\n  display: flow-root;\r\n  position: relative;\r\n`;\r\n\r\nconst ProjectTitle = styled.strong`\r\n  color: ${colors.mainColor};\r\n  float: left;\r\n  font-size: 1.3em;\r\n  position: absolute;\r\n  bottom: 0;\r\n`;\r\n\r\nconst TagContainerStyled = styled.div`\r\n  float: right;\r\n\r\n  div {\r\n    margin: 0;\r\n  }\r\n\r\n  div:first-child {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nconst ProjectDescription = styled.p`\r\n  clear: both;\r\n  padding: 20px 0 10px 0;\r\n  margin: 0;\r\n`;\r\n\r\nconst LinkButtonStyled = styled(LinkButton)`\r\n  padding: 20px 0 0 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst ProjectCard = (props: ProjectCardProps) => {\r\n  const getProjectTags = (project: Project) => {\r\n    return project.tags.map((tag: string, key: number) => {\r\n      return <Tag key={key}>{tag}</Tag>;\r\n    });\r\n  };\r\n\r\n  const getProjectUrl = (projectId: number) => {\r\n    return \"project/\" + projectId;\r\n  };\r\n\r\n  return (\r\n    <ProjectCardStyle>\r\n      <CardHeader>\r\n        <ProjectTitle>{props.project.name}</ProjectTitle>\r\n        <TagContainerStyled>{getProjectTags(props.project)}</TagContainerStyled>\r\n      </CardHeader>\r\n      <ProjectDescription>\r\n        2D fast paced game inspired in hits like Castlevania SOTN and Hollow\r\n        Knight. Not a Metroidvania, though.\r\n      </ProjectDescription>\r\n      <Link to={getProjectUrl(props.project.id)} tabIndex={-1}>\r\n        <LinkButtonStyled>check this project</LinkButtonStyled>\r\n      </Link>\r\n    </ProjectCardStyle>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React from \"react\";\r\n\r\nconst SketchDescription = () => {\r\n  return <div>this is sketch</div>;\r\n};\r\n\r\nexport default SketchDescription;\r\n","import Project from \"../../../models/project\";\r\nimport img from \"../../../images/projects/sketch/sketch-carousel.png\";\r\nimport imgBig from \"../../../images/projects/sketch/sketch-carousel-big.png\";\r\nimport SketchDescription from \"./SketchDescription\";\r\n\r\nexport const sketch: Project = {\r\n  id: 1,\r\n  name: \"sketch\",\r\n  tags: [\"c#\", \"Unity\"],\r\n  imageAlt: \"sketch gameplay screenshot\",\r\n  image: img,\r\n  imageBig: imgBig,\r\n  container: SketchDescription,\r\n};\r\n","import Project from \"../../models/project\";\r\nimport { sketch } from \"./sketch/sketch\";\r\n\r\nexport const projectList: Project[] = [sketch, sketch];\r\n\r\nexport const getProjectById = (id: number) => {\r\n  return projectList.filter((a) => a.id === id)[0];\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../shared/device\";\r\nimport LinkButton from \"./LinkButton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLastLocation, LastLocationType } from \"react-router-last-location\";\r\n\r\nconst LinkStyled = styled(Link)`\r\n  height: 10%;\r\n`;\r\n\r\nconst ReturnButtonStyled = styled(LinkButton)`\r\n  width: 100%;\r\n  position: fixed;\r\n  bottom: 0;\r\n  box-shadow: 0px 3px 11px 0px #0000009c;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.4em;\r\n    padding: 3% 0;\r\n  }\r\n`;\r\n\r\ninterface ReturnProps {\r\n  returnToHome?: boolean;\r\n}\r\n\r\nconst ReturnButton = (props: ReturnProps) => {\r\n  const lastLocation = useLastLocation();\r\n\r\n  const getLastVisited = (lastLocation: LastLocationType): string => {\r\n    if (lastLocation) return lastLocation.pathname;\r\n    return \"/\";\r\n  };\r\n\r\n  return (\r\n    <LinkStyled to={props.returnToHome ? \"/\" : getLastVisited(lastLocation)}>\r\n      <ReturnButtonStyled>Return</ReturnButtonStyled>\r\n    </LinkStyled>\r\n  );\r\n};\r\n\r\nexport default ReturnButton;\r\n","export const getLocationToAnim = (\r\n  currentLocation: string,\r\n  lastLocation: string | undefined,\r\n  pageHashLocation: string\r\n) => {\r\n  return currentLocation === pageHashLocation\r\n    ? lastLocation ?? \"\"\r\n    : currentLocation.replace(\"#\", \"\");\r\n};\r\n","import { AnimationDirection, GetAnimationTransform } from \"./animations\";\r\n\r\nexport interface LocationAnimationMap {\r\n  [location: string]: AnimationDirection;\r\n}\r\n\r\nexport const getAnimationBasedOnLocation = (\r\n  map: LocationAnimationMap,\r\n  currentLocation: string\r\n) => {\r\n  const animation = map[currentLocation] ?? map[\"default\"];\r\n  return GetAnimationTransform(animation);\r\n};\r\n","export const homePath = \"/\";\r\nexport const homePathHash = `#${homePath}`;\r\n\r\nexport const aboutPath = \"/about\";\r\nexport const aboutPathHash = `#${aboutPath}`;\r\n\r\nexport const projectListPath = \"/projects\";\r\nexport const projectListPathHash = `#${projectListPath}`;\r\n\r\nexport const projectPath = \"/project/:id\";\r\nexport const projectPathHash = `#${projectPath}`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PageStyle from \"../../common/PageStyle\";\r\nimport { AnimationDirection, GetAnimator } from \"../../../shared/animations\";\r\nimport PageTitle from \"../../common/PageTitle\";\r\nimport Project from \"../../../models/project\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport { device } from \"../../../shared/device\";\r\nimport { projectList } from \"../../../data/projects/projectList\";\r\nimport ReturnButton from \"../../common/ReturnButton\";\r\nimport { getLocationToAnim } from \"../../../shared/locationToAnim\";\r\nimport {\r\n  LocationAnimationMap,\r\n  getAnimationBasedOnLocation,\r\n} from \"../../../shared/dynamicAnimation\";\r\nimport {\r\n  homePath,\r\n  projectListPathHash,\r\n  aboutPath,\r\n} from \"../../../models/routes\";\r\nimport { useLastLocation } from \"react-router-last-location\";\r\nimport DeviceInfo from \"../../../shared/deviceInfo\";\r\n\r\nconst ProjectListPageAnimated = GetAnimator(PageStyle);\r\n\r\nconst ProjectCardContainer = styled.section`\r\n  height: 90%;\r\n  overflow: auto;\r\n  padding: 20px;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 0 30px;\r\n  }\r\n`;\r\n\r\ninterface ProjectListProps extends DeviceInfo {}\r\n\r\nconst ProjectListPage = (props: ProjectListProps) => {\r\n  const location = getLocationToAnim(\r\n    window.location.hash,\r\n    useLastLocation()?.pathname,\r\n    projectListPathHash\r\n  );\r\n\r\n  const getAnimationMap = () => {\r\n    const animationMap: LocationAnimationMap = {};\r\n    animationMap[homePath] = AnimationDirection.FromRight;\r\n    animationMap[aboutPath] = AnimationDirection.FromRight;\r\n    animationMap[\"default\"] = AnimationDirection.FromDown;\r\n\r\n    return animationMap;\r\n  };\r\n\r\n  const animationTransform = getAnimationBasedOnLocation(\r\n    getAnimationMap(),\r\n    location\r\n  );\r\n\r\n  const getProjectCards = () => {\r\n    return projectList.map((a: Project, key: number) => {\r\n      return <ProjectCard project={a} key={key}></ProjectCard>;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ProjectListPageAnimated transform={animationTransform}>\r\n      {props.isDesktop ? null : <PageTitle centered>my projects</PageTitle>}\r\n      <ProjectCardContainer>{getProjectCards()}</ProjectCardContainer>\r\n      {props.isDesktop ? null : <ReturnButton returnToHome></ReturnButton>}\r\n    </ProjectListPageAnimated>\r\n  );\r\n};\r\n\r\nexport default ProjectListPage;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../../shared/device\";\r\nimport { colors } from \"../../../../shared/colors\";\r\n\r\nconst DescriptionContainer = styled.div`\r\n  display: block;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  @media ${device.tablet} {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst Title = styled.strong`\r\n  background: ${colors.mainColor};\r\n  color: #fff;\r\n  font-size: 1.1em;\r\n  letter-spacing: 5px;\r\n  text-transform: uppercase;\r\n  border: 1px solid #c2c2c2;\r\n  position: absolute;\r\n  left: 0px;\r\n  top: -35px;\r\n  padding: 10px 20px;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.3em;\r\n    top: -60px;\r\n    padding: 20px 30px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.div`\r\n  font-size: 0.9em;\r\n  background: #e6e6e6;\r\n  padding: 10px 20px;\r\n  text-align: left;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.1em;\r\n    border-radius: 0 30px 0 0;\r\n    padding: 20px 30px;\r\n  }\r\n`;\r\n\r\nconst SlideDescription = (props: SlideDescriptionProps) => {\r\n  return (\r\n    <DescriptionContainer>\r\n      <Description>\r\n        My firt project made with commercial intent. There’s a playable demo\r\n        available\r\n      </Description>\r\n      <Title>{props.projectName}</Title>\r\n    </DescriptionContainer>\r\n  );\r\n};\r\n\r\ninterface SlideDescriptionProps {\r\n  projectName: string;\r\n}\r\n\r\nexport default SlideDescription;\r\n","import React from \"react\";\r\nimport Project from \"../../../models/project\";\r\nimport Tag from \"./Tag\";\r\n\r\nexport const getTagsInProject = (project: Project) => {\r\n  return getTags(project.tags);\r\n};\r\n\r\nexport const getTags = (tags: string[]) => {\r\n  return tags.map((tag: string, key: number) => {\r\n    return <Tag key={key}>{tag}</Tag>;\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SlideDescription from \"./SlideDescription\";\r\nimport { createHashHistory } from \"history\";\r\nimport { getTagsInProject } from \"../../../project/tag/tagList\";\r\nimport { colors } from \"../../../../shared/colors\";\r\nimport Project from \"../../../../models/project\";\r\nimport { deviceSize, device } from \"../../../../shared/device\";\r\n\r\nconst ImageContainer = styled.section`\r\n  position: relative;\r\n  display: block;\r\n  background-color: ${colors.mainBackgroundColor};\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst TagContainer = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  margin: auto;\r\n\r\n  @media ${device.desktop} {\r\n    border-radius: 50px;\r\n  }\r\n`;\r\n\r\ninterface ProjectSlideProps {\r\n  index: number;\r\n  project: Project;\r\n}\r\n\r\nconst getImageByDeviceSize = (project: Project) => {\r\n  return window.screen.width < deviceSize.tablet\r\n    ? project.image\r\n    : project.imageBig;\r\n};\r\n\r\nconst SlideContent = (props: ProjectSlideProps) => {\r\n  const goToProjectPage = (projectId: number) => {\r\n    const history = createHashHistory();\r\n    history.push(\"project/\" + projectId);\r\n  };\r\n\r\n  return (\r\n    <ImageContainer onClick={() => goToProjectPage(1)}>\r\n      <TagContainer>{getTagsInProject(props.project)}</TagContainer>\r\n      <Image\r\n        src={getImageByDeviceSize(props.project)}\r\n        alt={props.project.imageAlt}\r\n      ></Image>\r\n      <SlideDescription projectName={props.project.name}></SlideDescription>\r\n    </ImageContainer>\r\n  );\r\n};\r\n\r\nexport default SlideContent;\r\n","import React from \"react\";\r\nimport SlideContent from \"./slide/SlideContent\";\r\nimport styled from \"styled-components\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { projectList } from \"../../../data/projects/projectList\";\r\nimport Project from \"../../../models/project\";\r\nimport DeviceInfo from \"../../../shared/deviceInfo\";\r\nimport { device } from \"../../../shared/device\";\r\n\r\nconst CarouselContainer = styled.div`\r\n  z-index: 10;\r\n`;\r\n\r\nconst CarouselStyled = styled(Carousel)`\r\n  .control-dots {\r\n    top: 0;\r\n    bottom: unset;\r\n  }\r\n\r\n  .dot {\r\n    :focus {\r\n      border: 5px solid white;\r\n    }\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    .carousel.carousel-slider .control-arrow {\r\n      height: 50%;\r\n      margin: auto 0;\r\n\r\n      :focus,\r\n      :hover {\r\n        background: rgba(0, 0, 0, 0.9);\r\n        padding: 20px;\r\n        border: 1px solid white;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface CarouselContent extends DeviceInfo {}\r\n\r\nconst CarouselContent = (props: CarouselContent) => {\r\n  const projectSlides = () => {\r\n    return projectList.map((value: Project, i: number) => {\r\n      return <SlideContent index={i} project={value} key={i}></SlideContent>;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <CarouselContainer>\r\n      <CarouselStyled\r\n        showArrows={props.isDesktop}\r\n        showThumbs={false}\r\n        showStatus={false}\r\n        showIndicators\r\n        emulateTouch\r\n        autoPlay\r\n        transitionTime={700}\r\n        interval={4000}\r\n        stopOnHover\r\n        infiniteLoop\r\n      >\r\n        {projectSlides()}\r\n      </CarouselStyled>\r\n    </CarouselContainer>\r\n  );\r\n};\r\n\r\nexport default CarouselContent;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Contact from \"../../models/contact\";\r\nimport { onCardClick } from \"./contactCardClick\";\r\n\r\nconst ContactCardStyled = styled.div`\r\n  padding: 5% 10%;\r\n  display: flex;\r\n  font-size: 0.9em;\r\n`;\r\n\r\nconst ContactImage = styled.img`\r\n  width: 20%;\r\n  height: 20%;\r\n`;\r\n\r\nconst ContactInfo = styled.div`\r\n  align-self: flex-end;\r\n\r\n  span,\r\n  strong {\r\n    display: block;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\ninterface ContactCardProps {\r\n  contact: Contact;\r\n}\r\n\r\nconst ContactCard = (props: ContactCardProps) => {\r\n  return (\r\n    <ContactCardStyled onClick={() => onCardClick(props.contact)}>\r\n      <ContactImage\r\n        src={props.contact.image}\r\n        alt={props.contact.altImage}\r\n      ></ContactImage>\r\n      <ContactInfo>\r\n        <strong>{props.contact.message}</strong>\r\n        <span>{props.contact.contactText}</span>\r\n      </ContactInfo>\r\n    </ContactCardStyled>\r\n  );\r\n};\r\n\r\nexport default ContactCard;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components\";\r\nimport { animationSpeed } from \"../../shared/animations\";\r\nimport ContactCard from \"./ContactCard\";\r\nimport LinkButton from \"../common/LinkButton\";\r\nimport { contacts } from \"../../data/contacts\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport { colors } from \"../../shared/colors\";\r\nimport Contact from \"../../models/contact\";\r\n\r\nconst ModalBackground = styled.div`\r\n  background: rgba(0, 0, 0, 0.2);\r\n  height: 100%;\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 99999;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &.animation-enter {\r\n    opacity: 0;\r\n\r\n    > div:first-child {\r\n      transform: translate(0, 100%);\r\n    }\r\n  }\r\n\r\n  &.animation-enter-active {\r\n    opacity: 1;\r\n    transition: opacity ${animationSpeed}ms;\r\n\r\n    > div:first-child {\r\n      transform: translate(0, 0);\r\n      transition-timing-function: ease-in-out;\r\n      transition: transform ${animationSpeed}ms;\r\n    }\r\n  }\r\n\r\n  &.animation-exit {\r\n    opacity: 1;\r\n\r\n    > div:first-child {\r\n      transform: translate(0, 0);\r\n    }\r\n  }\r\n\r\n  &.animation-exit-active {\r\n    opacity: 0;\r\n    transition: opacity ${animationSpeed}ms;\r\n\r\n    > div:first-child {\r\n      transform: translate(0, 100%);\r\n      transition-timing-function: ease-in-out;\r\n      transition: transform ${animationSpeed}ms;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ModalWrapper = styled.div`\r\n  background-color: #fff;\r\n  z-index: 999999;\r\n  width: 100%;\r\n  max-width: 500px;\r\n`;\r\n\r\nconst ContactsContainer = styled.div`\r\n  padding: 20px;\r\n\r\n  > div:nth-child(2) {\r\n    border-top: 1px solid ${colors.mainColor};\r\n    border-bottom: 1px solid ${colors.mainColor};\r\n  }\r\n`;\r\n\r\nconst LinkButtonStyled = styled(LinkButton)`\r\n  width: 100%;\r\n  background-color: #fff;\r\n  box-shadow: 0px 3px 11px 0px #0000009c;\r\n  padding: 10px 20px;\r\n`;\r\n\r\ninterface ContactsModalProps {\r\n  onClose(): void;\r\n}\r\n\r\nconst ContactsModal = (props: ContactsModalProps) => {\r\n  const getContacts = () => {\r\n    return contacts.map((contact: Contact, key: number) => {\r\n      return <ContactCard key={key} contact={contact}></ContactCard>;\r\n    });\r\n  };\r\n\r\n  const modalMarkup = (\r\n    <ModalBackground>\r\n      <ModalWrapper>\r\n        <PageTitle centered>My Contacts</PageTitle>\r\n        <ContactsContainer>{getContacts()}</ContactsContainer>\r\n        <LinkButtonStyled onClick={() => props.onClose()}>\r\n          Close\r\n        </LinkButtonStyled>\r\n      </ModalWrapper>\r\n    </ModalBackground>\r\n  );\r\n\r\n  return ReactDOM.createPortal(modalMarkup, document.body);\r\n};\r\n\r\nexport default ContactsModal;\r\n","import React from \"react\";\r\nimport LinkButton from \"../common/LinkButton\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { animationSpeed } from \"../../shared/animations\";\r\nimport ContactsModal from \"./ContactsModal\";\r\n\r\nconst ContactsButton = () => {\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <LinkButton onClick={() => setIsOpen(true)}>My Contacts</LinkButton>\r\n      <CSSTransition\r\n        in={modalIsOpen}\r\n        classNames=\"animation\"\r\n        unmountOnExit\r\n        timeout={animationSpeed}\r\n      >\r\n        <ContactsModal onClose={() => setIsOpen(false)}></ContactsModal>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../shared/device\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LinkButton from \"../common/LinkButton\";\r\nimport ContactsButton from \"../contacts/ContactsButton\";\r\n\r\nconst NavMenu = styled.nav`\r\n  flex: 1;\r\n  display: flex;\r\n`;\r\n\r\nconst LinkContainer = styled.ul`\r\n  margin: auto;\r\n  padding: 0;\r\n  width: 100%;\r\n\r\n  @media ${device.tablet} {\r\n    display: inline-flex;\r\n  }\r\n`;\r\n\r\nconst Item = styled.li`\r\n  text-align: center;\r\n  list-style: none;\r\n\r\n  @media ${device.tablet} {\r\n    margin: auto;\r\n    width: 30%;\r\n  }\r\n`;\r\n\r\ninterface ButtonProps {\r\n  border?: boolean;\r\n}\r\n\r\nconst MenuButton = styled(LinkButton)`\r\n  width: 70%;\r\n  border-bottom: ${(props: ButtonProps) =>\r\n    props.border ? \"solid 1px\" : \"none\"};\r\n  border-top: ${(props: ButtonProps) => (props.border ? \"solid 1px\" : \"none\")};\r\n\r\n  @media ${device.tablet} {\r\n    width: 100%;\r\n    border-bottom: none;\r\n    border-top: none;\r\n    border-left: ${(props: ButtonProps) =>\r\n      props.border ? \"solid 1px\" : \"none\"};\r\n    border-right: ${(props: ButtonProps) =>\r\n      props.border ? \"solid 1px\" : \"none\"};\r\n  }\r\n`;\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <NavMenu>\r\n      <LinkContainer>\r\n        <Item>\r\n          <Link to=\"/projects\">\r\n            <MenuButton>My other projects</MenuButton>\r\n          </Link>\r\n        </Item>\r\n        <Item>\r\n          <Link to=\"/about\">\r\n            <MenuButton border>About me</MenuButton>\r\n          </Link>\r\n        </Item>\r\n        <Item>\r\n          <ContactsButton></ContactsButton>\r\n        </Item>\r\n      </LinkContainer>\r\n    </NavMenu>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport { GetAnimator, AnimationDirection } from \"../../shared/animations\";\r\nimport { useLastLocation } from \"react-router-last-location\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport PageStyle from \"../common/PageStyle\";\r\nimport CarouselContent from \"./carousel/CarouselContent\";\r\nimport {\r\n  LocationAnimationMap,\r\n  getAnimationBasedOnLocation,\r\n} from \"../../shared/dynamicAnimation\";\r\nimport { aboutPath, projectListPath, homePathHash } from \"../../models/routes\";\r\nimport { getLocationToAnim } from \"../../shared/locationToAnim\";\r\nimport { device } from \"../../shared/device\";\r\nimport styled from \"styled-components\";\r\nimport Menu from \"./Menu\";\r\nimport DeviceInfo from \"../../shared/deviceInfo\";\r\n\r\nconst HomePageStyled = styled(PageStyle)`\r\n  @media ${device.desktop} {\r\n    position: relative;\r\n    margin: auto;\r\n    width: 75%;\r\n    height: unset;\r\n    max-width: 700px;\r\n  }\r\n`;\r\n\r\nconst HomePageAnimated = GetAnimator(HomePageStyled);\r\n\r\ninterface HomeProps extends DeviceInfo {}\r\n\r\nconst HomePage = (props: HomeProps) => {\r\n  const location = getLocationToAnim(\r\n    window.location.hash,\r\n    useLastLocation()?.pathname,\r\n    homePathHash\r\n  );\r\n\r\n  const getAnimationMap = () => {\r\n    const animationMap: LocationAnimationMap = {};\r\n    animationMap[aboutPath] = AnimationDirection.FromRight;\r\n    animationMap[projectListPath] = AnimationDirection.FromLeft;\r\n    animationMap[\"default\"] = AnimationDirection.FromDown;\r\n\r\n    return animationMap;\r\n  };\r\n\r\n  const animationTransform = getAnimationBasedOnLocation(\r\n    getAnimationMap(),\r\n    location\r\n  );\r\n\r\n  return (\r\n    <HomePageAnimated transform={animationTransform}>\r\n      <PageTitle>some of the projects I've worked on</PageTitle>\r\n      <CarouselContent isDesktop={props.isDesktop}></CarouselContent>\r\n      {props.isDesktop ? null : <Menu></Menu>}\r\n    </HomePageAnimated>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../shared/device\";\r\nimport LinkButton from \"../common/LinkButton\";\r\nimport { colors } from \"../../shared/colors\";\r\nimport ContactsButton from \"../contacts/ContactsButton\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = styled.nav`\r\n  flex: 1;\r\n  display: flex;\r\n`;\r\n\r\nconst LinkContainer = styled.ul`\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  width: 100%;\r\n  font-size: 1.1em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 0.9em;\r\n  }\r\n`;\r\n\r\nconst Item = styled.li`\r\n  text-align: center;\r\n  list-style: none;\r\n`;\r\n\r\nconst LinkButtonStyled = styled(LinkButton)`\r\n  width: 70%;\r\n  border-top: 1px solid ${colors.mainColor};\r\n`;\r\n\r\nconst NavigationButtons = () => {\r\n  return (\r\n    <Navigation>\r\n      <LinkContainer>\r\n        <Item>\r\n          <ContactsButton></ContactsButton>\r\n        </Item>\r\n        <Item>\r\n          <Link to=\"/\">\r\n            <LinkButtonStyled>Return</LinkButtonStyled>\r\n          </Link>\r\n        </Item>\r\n      </LinkContainer>\r\n    </Navigation>\r\n  );\r\n};\r\n\r\nexport default NavigationButtons;\r\n","import React from \"react\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport styled from \"styled-components\";\r\nimport { AnimationDirection, GetAnimator } from \"../../shared/animations\";\r\nimport image from \"../../images/me/EubyKuma.png\";\r\nimport { device } from \"../../shared/device\";\r\nimport PageStyle from \"../common/PageStyle\";\r\nimport NavigationButtons from \"./NavigationButtons\";\r\nimport DeviceInfo from \"../../shared/deviceInfo\";\r\nimport { getLocationToAnim } from \"../../shared/locationToAnim\";\r\nimport { useLastLocation } from \"react-router-last-location\";\r\nimport { aboutPathHash, homePath, projectListPath } from \"../../models/routes\";\r\nimport {\r\n  getAnimationBasedOnLocation,\r\n  LocationAnimationMap,\r\n} from \"../../shared/dynamicAnimation\";\r\nimport { colors } from \"../../shared/colors\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MainToolTip } from \"../common/ToolTip\";\r\n\r\nconst AboutPageStyled = styled(PageStyle)`\r\n  font-size: 0.9em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.1em;\r\n  }\r\n`;\r\n\r\nconst AboutPageAnimated = GetAnimator(AboutPageStyled);\r\n\r\nconst ImageContainer = styled.div``;\r\n\r\nconst Image = styled.img`\r\n  display: flex;\r\n  width: 45%;\r\n  margin: 5% auto;\r\n\r\n  @media ${device.tablet} {\r\n    width: 25%;\r\n    min-width: 250px;\r\n  }\r\n\r\n  .tooltip {\r\n    background: black;\r\n  }\r\n`;\r\n\r\nconst Info = styled.div`\r\n  margin: 0 10%;\r\n\r\n  span {\r\n    display: block;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst Bio = styled.div`\r\n  padding: 3% 20px;\r\n  line-height: 1.7;\r\n\r\n  p a {\r\n    color: ${colors.mainColor};\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    p {\r\n      margin: 30px 0;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface AboutProps extends DeviceInfo {}\r\n\r\nconst AboutPage = (props: AboutProps) => {\r\n  const location = getLocationToAnim(\r\n    window.location.hash,\r\n    useLastLocation()?.pathname,\r\n    aboutPathHash\r\n  );\r\n\r\n  const getAnimationMap = () => {\r\n    const animationMap: LocationAnimationMap = {};\r\n    animationMap[homePath] = AnimationDirection.FromLeft;\r\n    animationMap[projectListPath] = AnimationDirection.FromLeft;\r\n    animationMap[\"default\"] = AnimationDirection.FromDown;\r\n\r\n    return animationMap;\r\n  };\r\n\r\n  const animationTransform = getAnimationBasedOnLocation(\r\n    getAnimationMap(),\r\n    location\r\n  );\r\n\r\n  return (\r\n    <AboutPageAnimated transform={animationTransform}>\r\n      {props.isDesktop ? null : <PageTitle centered>about me</PageTitle>}\r\n      <ImageContainer>\r\n        <MainToolTip />\r\n        <Image\r\n          src={image}\r\n          alt=\"drawing of me and my pets by @kumamaskie\"\r\n          data-tip=\"drawing by @kumamaskie\"\r\n        ></Image>\r\n        <Info>\r\n          <span>Gustavo Passos, 22 years old, Brazillian</span>\r\n          <span>currently working @ lambda3</span>\r\n        </Info>\r\n      </ImageContainer>\r\n      <Bio>\r\n        <p>\r\n          I’ve been programming for 5 years now, 4 of those as a professional\r\n          software developer in brazillian companies.\r\n        </p>\r\n        <p>\r\n          I'm interested in developing any kind of software or game, regardless\r\n          of the tech stack. I have no preferred programming language or\r\n          framework, the software quality and the user experience are the most\r\n          important things for me. That's why I look forward to working with\r\n          people that have the same objectives.\r\n        </p>\r\n        <p>\r\n          If you're interested in the technologies that I'm already experienced\r\n          with, you can check my <Link to=\"/projects\">project page</Link> for\r\n          finished projects or my{\" \"}\r\n          <a\r\n            href=\"https://github.com/theGusPassos\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            github\r\n          </a>{\" \"}\r\n          for ongoing ones. For professional projects and experience, feel free\r\n          to check my{\" \"}\r\n          <a\r\n            href=\"https://www.linkedin.com/in/theguspassos/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            linkedin page\r\n          </a>\r\n          .\r\n        </p>\r\n        <p>If you need help in a project of yours feel free to contact me =)</p>\r\n      </Bio>\r\n      {props.isDesktop ? null : <NavigationButtons></NavigationButtons>}\r\n    </AboutPageAnimated>\r\n  );\r\n};\r\n\r\nexport default AboutPage;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PageStyle from \"../../common/PageStyle\";\r\nimport {\r\n  AnimationDirection,\r\n  GetAnimator,\r\n  GetAnimationTransform,\r\n} from \"../../../shared/animations\";\r\nimport PageTitle from \"../../common/PageTitle\";\r\nimport Project from \"../../../models/project\";\r\nimport { device } from \"../../../shared/device\";\r\nimport ReturnButton from \"../../common/ReturnButton\";\r\nimport { getProjectById } from \"../../../data/projects/projectList\";\r\nimport { getTagsInProject } from \"../tag/tagList\";\r\nimport DeviceInfo from \"../../../shared/deviceInfo\";\r\n\r\nconst ProjectViewPageAnimated = GetAnimator(PageStyle);\r\nconst AnimationTransform = GetAnimationTransform(AnimationDirection.FromUp);\r\n\r\ninterface ProjectViewProps extends DeviceInfo {\r\n  projectId: number;\r\n  project: Project;\r\n}\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  max-height: 400px;\r\n`;\r\n\r\nconst TagContainer = styled.div`\r\n  display: flex;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst ProjectText = styled.section`\r\n  padding: 20px;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 30px;\r\n  }\r\n`;\r\n\r\nconst ProjectViewPage = (props: ProjectViewProps) => {\r\n  let project = getProjectById(Number(props.projectId));\r\n\r\n  return (\r\n    <ProjectViewPageAnimated transform={AnimationTransform}>\r\n      {props.isDesktop ? null : <PageTitle centered>{project.name}</PageTitle>}\r\n      <Image src={props.project.imageBig} alt={props.project.imageAlt}></Image>\r\n      <TagContainer>{getTagsInProject(props.project)}</TagContainer>\r\n      <ProjectText>{props.project.container()}</ProjectText>\r\n      {props.isDesktop ? null : <ReturnButton></ReturnButton>}\r\n    </ProjectViewPageAnimated>\r\n  );\r\n};\r\n\r\nexport default ProjectViewPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport ProjectListPage from \"./project/list/ProjectListPage\";\r\nimport HomePage from \"./home/HomePage\";\r\nimport AboutPage from \"./about/AboutPage\";\r\nimport ProjectViewPage from \"./project/view/ProjectViewPage\";\r\nimport { sketch } from \"../data/projects/sketch/sketch\";\r\nimport {\r\n  homePath,\r\n  aboutPath,\r\n  projectPath,\r\n  projectListPath,\r\n} from \"../models/routes\";\r\nimport DeviceInfo from \"../shared/deviceInfo\";\r\nimport ReactGA from \"react-ga\";\r\n\r\ninterface RoutesProps extends DeviceInfo {\r\n  location: any;\r\n}\r\n\r\nconst Routes = (props: RoutesProps) => {\r\n  useEffect(() => {\r\n    ReactGA.pageview(window.location.hash);\r\n  }, []);\r\n\r\n  return (\r\n    <Switch location={props.location}>\r\n      <Route exact path={homePath}>\r\n        <HomePage isDesktop={props.isDesktop}></HomePage>\r\n      </Route>\r\n\r\n      <Route exact path={aboutPath}>\r\n        <AboutPage isDesktop={props.isDesktop}></AboutPage>\r\n      </Route>\r\n\r\n      <Route exact path={projectListPath}>\r\n        <ProjectListPage isDesktop={props.isDesktop}></ProjectListPage>\r\n      </Route>\r\n\r\n      <Route\r\n        exact\r\n        path={projectPath}\r\n        render={(renderProps) => {\r\n          return (\r\n            <ProjectViewPage\r\n              projectId={renderProps.match.params.id}\r\n              project={sketch}\r\n              isDesktop={props.isDesktop}\r\n            ></ProjectViewPage>\r\n          );\r\n        }}\r\n      ></Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport Header from \"./header/Header\";\r\nimport styled from \"styled-components\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { LastLocationProvider } from \"react-router-last-location\";\r\nimport Routes from \"./Routes\";\r\nimport { animationSpeed } from \"../shared/animations\";\r\nimport { device, isInDesktop } from \"../shared/device\";\r\nimport { withResizeDetector } from \"react-resize-detector\";\r\nimport ResizeListenerProps from \"../shared/resizeListenerProps\";\r\nimport { colors } from \"../shared/colors\";\r\n\r\nconst BodyGrid = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  margin: auto;\r\n  max-width: 1400px;\r\n  background-color: ${colors.mainBackgroundColor};\r\n\r\n  @media ${device.desktop} {\r\n    display: block;\r\n    box-shadow: 0px 3px 11px 0px #0000000c;\r\n  }\r\n`;\r\n\r\nconst TransitionGroupStyled = styled(TransitionGroup)`\r\n  height: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n\r\n  @media ${device.desktop} {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\ninterface BodyProps extends ResizeListenerProps {}\r\n\r\nconst Body = (props: BodyProps) => {\r\n  return (\r\n    <BodyGrid>\r\n      <HashRouter basename=\"/\">\r\n        <Header isDesktop={isInDesktop(props.width)}></Header>\r\n        <LastLocationProvider>\r\n          <Route\r\n            render={({ location }) => (\r\n              <TransitionGroupStyled>\r\n                <CSSTransition\r\n                  key={location.pathname}\r\n                  classNames=\"animation\"\r\n                  timeout={animationSpeed}\r\n                >\r\n                  <Routes\r\n                    isDesktop={isInDesktop(props.width)}\r\n                    location={location}\r\n                  ></Routes>\r\n                </CSSTransition>\r\n              </TransitionGroupStyled>\r\n            )}\r\n          ></Route>\r\n        </LastLocationProvider>\r\n      </HashRouter>\r\n    </BodyGrid>\r\n  );\r\n};\r\n\r\nexport default withResizeDetector(Body);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Body from \"./components/Body\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport ReactGA from \"react-ga\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntoast.configure();\r\nReactGA.initialize(\"UA-163830671-1\");\r\n\r\nconst App = () => {\r\n  return (\r\n    <Body handleWidth>\r\n      <ToastContainer></ToastContainer>\r\n    </Body>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\n"],"sourceRoot":""}