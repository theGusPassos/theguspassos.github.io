{"version":3,"sources":["images/contacts/gmail.png","images/contacts/github.png","images/contacts/linkedin.png","images/projects/sketch/sketch-carousel.png","images/projects/sketch/sketch-carousel-big.png","images/me/EubyKuma.png","data/colors.tsx","data/device.ts","data/contacts.ts","common-functions/goToExternalPage.ts","components/contacts/contactCardClick.ts","common-functions/copyToClipboard.ts","components/common-components/ToolTip.tsx","components/header/HeaderContacts.tsx","components/common-components/LinkButton.tsx","components/header/HeaderMenu.tsx","components/header/Header.tsx","components/common-styles/pageStyle.ts","animations/animations.ts","components/common-components/PageTitle.tsx","components/project/tag/Tag.tsx","components/project/list/ProjectCard.tsx","components/common-styles/styles.ts","data/projects/portfolio/PortfolioInfo.tsx","data/projects/projectList.ts","data/projects/portfolio/portfolio.ts","components/common-components/ReturnButton.tsx","animations/locationToAnim.ts","animations/dynamicAnimation.ts","data/routes.ts","components/project/list/ProjectListPage.tsx","components/home/carousel/slide/SlideDescription.tsx","components/project/tag/tagList.tsx","components/home/carousel/slide/SlideContent.tsx","components/home/carousel/CarouselContent.tsx","components/contacts/ContactCard.tsx","components/contacts/ContactsModal.tsx","components/contacts/ContactsButton.tsx","components/home/Menu.tsx","components/home/HomePage.tsx","components/about/NavigationButtons.tsx","components/about/AboutPage.tsx","components/project/view/ProjectViewPage.tsx","components/Routes.tsx","components/Body.tsx","App.tsx","index.tsx"],"names":["module","exports","colors","deviceSize","isInDesktop","currentWidth","device","tablet","desktop","contacts","image","gmailLogo","altImage","message","contactText","linkedinLogo","url","githubLogo","goToExternalPage","ref","window","open","opener","onCardClick","contact","text","input","document","createElement","setAttribute","body","appendChild","select","execCommand","removeChild","copyToClipboard","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","MainToolTip","styled","ReactTooltip","WhiteToolTip","ContactContainer","div","ContactIcon","img","HeaderContacts","map","key","onClick","onKeyDown","e","keyCode","charCode","onCardKeyDown","src","tabIndex","data-tip","LinkButton","button","HeaderMenuStyled","section","LinkContainer","ul","Item","li","MenuButton","props","border","HeaderMenu","to","Background","header","InfoContainer","NameContainer","DevName","JobTitle","Header","goToHome","createHashHistory","push","onKeyPress","isDesktop","pageStyle","AnimationDirection","GetAnimator","component","GetTranslateFromTransform","transform","GetAnimationTransform","animationDirection","FromUp","x","y","FromDown","FromLeft","FromRight","TitleContent","h1","centered","PageTitle","children","TagName","Tag","ProjectCardStyle","CardHeader","ProjectTitle","strong","TagContainerStyled","ProjectDescription","p","LinkButtonStyled","ProjectCard","projectId","project","name","tags","tag","id","sectionWithText","css","Info","PortfolioInfo","goToExternalPageOnKeyDown","href","target","rel","projectList","description","imageAlt","imageBig","imgBig","projectInfo","LinkStyled","Link","ReturnButtonStyled","ReturnButton","lastLocation","useLastLocation","returnToHome","pathname","getLastVisited","getLocationToAnim","currentLocation","pageHashLocation","replace","getAnimationBasedOnLocation","animation","homePathHash","aboutPathHash","projectListPathHash","ProjectListPageAnimated","ProjectCardContainer","ProjectListPage","location","hash","animationTransform","animationMap","getAnimationMap","a","DescriptionContainer","Title","Description","SlideDescription","getTagsInProject","getTags","ImageContainer","TagContainer","Image","SlideContent","screen","width","alt","CarouselContainer","CarouselStyled","Carousel","CarouselContent","showArrows","showThumbs","showStatus","showIndicators","emulateTouch","autoPlay","transitionTime","interval","stopOnHover","infiniteLoop","value","i","index","ContactCardStyled","ContactImage","ContactInfo","ContactCard","ModalBackground","ModalWrapper","ContactsContainer","ContactsModal","modalMarkup","onClose","ReactDOM","createPortal","ContactsButton","React","useState","modalIsOpen","setIsOpen","CSSTransition","in","classNames","unmountOnExit","timeout","NavMenu","nav","Menu","HomePageAnimated","HomePage","Navigation","NavigationButtons","AboutPageAnimated","Bio","AboutPage","ProjectViewPageAnimated","AnimationTransform","ProjectText","ProjectViewPage","Number","filter","Routes","useEffect","ReactGA","pageview","exact","path","render","renderProps","match","params","BodyGrid","TransitionGroupStyled","TransitionGroup","withResizeDetector","basename","configure","initialize","App","handleWidth","getElementById"],"mappings":"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","file":"static/js/main.64c57eae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gmail.62549d5c.png\";","module.exports = __webpack_public_path__ + \"static/media/github.9f96cfd1.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.07265057.png\";","module.exports = __webpack_public_path__ + \"static/media/sketch-carousel.7b5eb98f.png\";","module.exports = __webpack_public_path__ + \"static/media/sketch-carousel-big.86fcbb81.png\";","module.exports = __webpack_public_path__ + \"static/media/EubyKuma.de40467c.png\";","const colors = {\r\n  mainColor: \"#7673ff\",\r\n  mainTextColor: \"#fff\",\r\n  mainBackgroundColor: \"#f1f1f1\",\r\n  secondColor: \"#6B68EE\",\r\n  secondBackgroundColor: \"#f7f7f7\",\r\n\r\n  buttonClickedColor: \"#dedede\",\r\n};\r\n\r\nconst buttonColors = {\r\n  onHoverColor: \"#e6e6e6\",\r\n};\r\n\r\nexport { colors, buttonColors };\r\n","export const deviceSize = {\r\n  tablet: 500,\r\n  desktop: 920,\r\n};\r\n\r\nexport function isInDesktop(currentWidth: number) {\r\n  return currentWidth > deviceSize.desktop;\r\n}\r\n\r\nexport const device = {\r\n  tablet: `(min-width: ${deviceSize.tablet}px)`,\r\n  desktop: `(min-width: ${deviceSize.desktop}px)`,\r\n};\r\n","import Contact from \"../models/contact\";\r\nimport gmailLogo from \"../images/contacts/gmail.png\";\r\nimport githubLogo from \"../images/contacts/github.png\";\r\nimport linkedinLogo from \"../images/contacts/linkedin.png\";\r\n\r\nexport const contacts: Contact[] = [\r\n  {\r\n    image: gmailLogo,\r\n    altImage: \"gmail logo\",\r\n    message: \"mail me\",\r\n    contactText: \"theguspassos@gmail.com\",\r\n  },\r\n  {\r\n    image: linkedinLogo,\r\n    altImage: \"linkedin logo\",\r\n    message: \"connect with me\",\r\n    contactText: \"linkedin.com/in/theguspassos/\",\r\n    url: \"https://www.linkedin.com/in/theguspassos/\",\r\n  },\r\n  {\r\n    image: githubLogo,\r\n    altImage: \"github logo\",\r\n    message: \"code with me\",\r\n    contactText: \"github/theguspassos\",\r\n    url: \"https://github.com/theGusPassos\",\r\n  },\r\n];\r\n","export const goToExternalPage = (url: string) => {\r\n  const ref = window.open(url, \"_blank\");\r\n  if (ref) ref.opener = null;\r\n};\r\n\r\nexport const goToExternalPageOnKeyDown = (e: any, url: string) => {\r\n  if (e.keyCode === 13 || e.charCode === 13) goToExternalPage(url);\r\n};\r\n","import Contact from \"../../models/contact\";\r\nimport { copyToClipboard } from \"../../common-functions/copyToClipboard\";\r\nimport { toast } from \"react-toastify\";\r\nimport { goToExternalPage } from \"../../common-functions/goToExternalPage\";\r\n\r\nexport const onCardClick = (contact: Contact) => {\r\n  if (contact.url) {\r\n    goToExternalPage(contact.url);\r\n  } else {\r\n    copyToClipboard(contact.contactText);\r\n    toast.info(`my e-mail was copied to your clipboard =)`, {\r\n      position: \"bottom-right\",\r\n      autoClose: 3000,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: false,\r\n      draggable: false,\r\n    });\r\n  }\r\n};\r\n\r\nexport const onCardKeyDown = (e: any, contact: Contact) => {\r\n  if (e.keyCode === 13 || e.charCode === 13) onCardClick(contact);\r\n};\r\n","export const copyToClipboard = (text: string) => {\r\n  const input = document.createElement(\"input\");\r\n  input.setAttribute(\"value\", text);\r\n  document.body.appendChild(input);\r\n  input.select();\r\n  document.execCommand(\"copy\");\r\n  document.body.removeChild(input);\r\n};\r\n","import styled from \"styled-components\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { colors } from \"../../data/colors\";\r\n\r\nexport const MainToolTip = styled(ReactTooltip)`\r\n  background: ${colors.mainColor} !important;\r\n`;\r\n\r\nexport const WhiteToolTip = styled(ReactTooltip)`\r\n  background: #fff !important;\r\n  color: ${colors.mainColor} !important;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { contacts } from \"../../data/contacts\";\r\nimport Contact from \"../../models/contact\";\r\nimport { onCardClick, onCardKeyDown } from \"../contacts/contactCardClick\";\r\nimport { WhiteToolTip } from \"../common-components/ToolTip\";\r\n\r\nconst ContactContainer = styled.div`\r\n  width: 50%;\r\n  margin: auto;\r\n  display: flex;\r\n  flex: 1;\r\n`;\r\n\r\nconst ContactIcon = styled.img`\r\n  opacity: 0.3;\r\n  width: 20%;\r\n  margin: auto;\r\n\r\n  :hover,\r\n  :focus {\r\n    cursor: pointer;\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst HeaderContacts = () => {\r\n  const headerItemsBeforeContact = 3;\r\n\r\n  const getContacts = () => {\r\n    return contacts.map((contact: Contact, key: number) => {\r\n      return (\r\n        <ContactIcon\r\n          onClick={() => onCardClick(contact)}\r\n          onKeyDown={(e) => onCardKeyDown(e, contact)}\r\n          src={contact.image}\r\n          key={key}\r\n          tabIndex={key + headerItemsBeforeContact + 1}\r\n          data-tip={contact.message}\r\n        ></ContactIcon>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ContactContainer>\r\n      {getContacts()}\r\n      <WhiteToolTip />\r\n    </ContactContainer>\r\n  );\r\n};\r\n\r\nexport default HeaderContacts;\r\n","import styled from \"styled-components\";\r\nimport { device } from \"../../data/device\";\r\nimport { colors } from \"../../data/colors\";\r\n\r\nconst LinkButton = styled.button`\r\n  color: ${colors.mainColor};\r\n  background: ${colors.mainBackgroundColor};\r\n  font-size: 1.2em;\r\n  border: none;\r\n  padding: 4% 0;\r\n  width: 100%;\r\n\r\n  :focus,\r\n  :hover {\r\n    cursor: pointer;\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.4em;\r\n  }\r\n`;\r\n\r\nexport default LinkButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LinkButton from \"../common-components/LinkButton\";\r\nimport { colors } from \"../../data/colors\";\r\n\r\nconst HeaderMenuStyled = styled.section`\r\n  padding: 15% 15% 0 15%;\r\n  height: 25%;\r\n`;\r\n\r\nconst LinkContainer = styled.ul`\r\n  margin: auto;\r\n  padding: 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  text-align: center;\r\n  list-style: none;\r\n`;\r\n\r\ninterface ButtonProps {\r\n  border?: boolean;\r\n}\r\n\r\nconst MenuButton = styled(LinkButton)`\r\n  width: 100%;\r\n  padding: 7% 0;\r\n  color: #fff;\r\n  background: ${colors.mainColor};\r\n  border-top: ${(props: ButtonProps) =>\r\n    props.border ? \"solid 1px white\" : \"none\"};\r\n`;\r\n\r\nconst HeaderMenu = () => {\r\n  return (\r\n    <HeaderMenuStyled>\r\n      <LinkContainer>\r\n        <Item>\r\n          <Link to=\"/projects\" tabIndex={-1}>\r\n            <MenuButton tabIndex={2}>My other projects</MenuButton>\r\n          </Link>\r\n        </Item>\r\n        <Item>\r\n          <Link to=\"/about\" tabIndex={-1}>\r\n            <MenuButton border tabIndex={3}>\r\n              About Me\r\n            </MenuButton>\r\n          </Link>\r\n        </Item>\r\n      </LinkContainer>\r\n    </HeaderMenuStyled>\r\n  );\r\n};\r\n\r\nexport default HeaderMenu;\r\n","import React, { Fragment } from \"react\";\r\nimport { colors } from \"../../data/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../data/device\";\r\nimport HeaderContacts from \"./HeaderContacts\";\r\nimport HeaderMenu from \"./HeaderMenu\";\r\nimport { createHashHistory } from \"history\";\r\nimport DeviceInfo from \"../../models/deviceInfo\";\r\n\r\nconst Background = styled.header`\r\n  width: 100%;\r\n  background-color: ${colors.mainColor};\r\n  color: ${colors.mainTextColor};\r\n  z-index: 10;\r\n\r\n  @media ${device.desktop} {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 300px;\r\n    height: 100%;\r\n    float: left;\r\n    box-shadow: 6px 0px 13px #0000004f;\r\n  }\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  padding: 20px;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 30px;\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    height: 45%;\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst NameContainer = styled.div`\r\n  margin: auto;\r\n  outline-color: #fff;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst DevName = styled.div`\r\n  font-size: 1em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.2em;\r\n  }\r\n`;\r\n\r\nconst JobTitle = styled.div`\r\n  font-size: 1.5em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.7em;\r\n  }\r\n`;\r\n\r\ninterface HeaderProps extends DeviceInfo {}\r\n\r\nconst Header = (props: HeaderProps) => {\r\n  const goToHome = () => {\r\n    const history = createHashHistory();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const goToHomeOnEnter = (e: any) => {\r\n    if (e.keyCode === 13 || e.charCode === 13) goToHome();\r\n  };\r\n\r\n  return (\r\n    <Background>\r\n      <InfoContainer>\r\n        <NameContainer\r\n          onClick={goToHome}\r\n          onKeyPress={goToHomeOnEnter}\r\n          tabIndex={1}\r\n        >\r\n          <DevName>Gustavo Passos</DevName>\r\n          <JobTitle>Game & Software Developer</JobTitle>\r\n        </NameContainer>\r\n      </InfoContainer>\r\n      {props.isDesktop ? (\r\n        <Fragment>\r\n          <HeaderMenu></HeaderMenu>\r\n          <HeaderContacts></HeaderContacts>\r\n        </Fragment>\r\n      ) : null}\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\nimport { device } from \"../../data/device\";\r\n\r\nconst pageStyle = styled.section`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n\r\n  @media ${device.desktop} {\r\n    max-width: 800px;\r\n    width: 90%;\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nexport default pageStyle;\r\n","import styled, { AnyStyledComponent } from \"styled-components\";\r\n\r\nexport const animationSpeed = 500;\r\nconst animationDistance = 150;\r\n\r\nexport enum AnimationDirection {\r\n  FromUp,\r\n  FromDown,\r\n  FromRight,\r\n  FromLeft,\r\n}\r\n\r\nexport interface Transform {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface AnimatorProps {\r\n  transform: Transform;\r\n}\r\n\r\nexport const GetAnimator = (component: AnyStyledComponent) => {\r\n  return styled(component)`\r\n    &.animation-enter {\r\n      transform: ${(props: AnimatorProps) =>\r\n        GetTranslateFromTransform(props.transform)};\r\n    }\r\n\r\n    &.animation-enter-active {\r\n      transform: translateX(0);\r\n      transition-timing-function: ease-in-out;\r\n      transition: transform ${animationSpeed}ms;\r\n    }\r\n\r\n    &.animation-exit {\r\n      transform: translateX(0);\r\n    }\r\n\r\n    &.animation-exit-active {\r\n      transform: ${(props: AnimatorProps) =>\r\n        GetTranslateFromTransform(props.transform)};\r\n      transition-timing-function: ease-in-out;\r\n      transition: transform ${animationSpeed}ms;\r\n    }\r\n  `;\r\n};\r\n\r\nexport const GetAnimationTransform = (\r\n  animationDirection: AnimationDirection\r\n): Transform => {\r\n  switch (animationDirection) {\r\n    case AnimationDirection.FromUp:\r\n      return { x: 0, y: -animationDistance };\r\n\r\n    case AnimationDirection.FromDown:\r\n      return { x: 0, y: animationDistance };\r\n\r\n    case AnimationDirection.FromLeft:\r\n      return { x: -animationDistance, y: 0 };\r\n\r\n    case AnimationDirection.FromRight:\r\n      return { x: animationDistance, y: 0 };\r\n  }\r\n};\r\n\r\nexport const GetTranslateFromTransform = (transform: Transform): string => {\r\n  return `translate(${transform.x}%, ${transform.y}%)`;\r\n};\r\n","import React from \"react\";\r\nimport { colors } from \"../../data/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../data/device\";\r\n\r\ninterface TitleProps {\r\n  centered?: boolean;\r\n}\r\n\r\nconst TitleContent = styled.h1`\r\n  background: ${colors.secondColor};\r\n  color: ${colors.mainTextColor};\r\n  padding: 10px 20px;\r\n  font-size: 0.95em;\r\n  text-align: ${(props: TitleProps) => (props.centered ? \"center\" : \"unset\")};\r\n  box-shadow: 0px 3px 11px 0px #0000009c;\r\n  font-weight: normal;\r\n  margin: 0;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 10px 30px;\r\n    font-size: 1.4em;\r\n    box-shadow: none;\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    text-align: center;\r\n    color: ${colors.mainColor};\r\n    background: ${colors.mainBackgroundColor};\r\n    margin-bottom: 10px;\r\n    font-size: 1.6em;\r\n  }\r\n`;\r\n\r\ninterface PageTitleProps {\r\n  children: string;\r\n  centered?: boolean;\r\n}\r\n\r\nconst PageTitle = (props: PageTitleProps) => {\r\n  return (\r\n    <TitleContent centered={props.centered}>{props.children}</TitleContent>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from \"react\";\r\nimport { colors } from \"../../../data/colors\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../data/device\";\r\n\r\nconst TagName = styled.div`\r\n  font-size: 0.8em;\r\n  background: ${colors.mainBackgroundColor};\r\n  color: ${colors.mainColor};\r\n  text-align: center;\r\n  min-width: 60px;\r\n  margin: 10px;\r\n  padding: 3px 7px;\r\n  border: 3px solid;\r\n  border-color: ${colors.mainColor};\r\n  border-radius: 50px;\r\n  float: right;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.2em;\r\n    min-width: 90px;\r\n    margin: 15px;\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    padding: 5px 20px;\r\n  }\r\n`;\r\n\r\ninterface TagProps {\r\n  children: string;\r\n}\r\n\r\nconst Tag = (props: TagProps): React.ReactElement => {\r\n  return <TagName>{props.children}</TagName>;\r\n};\r\n\r\nexport default Tag;\r\n","import React from \"react\";\r\nimport Project from \"../../../models/project\";\r\nimport styled from \"styled-components\";\r\nimport Tag from \"../tag/Tag\";\r\nimport { device } from \"../../../data/device\";\r\nimport { colors } from \"../../../data/colors\";\r\nimport LinkButton from \"../../common-components/LinkButton\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface ProjectCardProps {\r\n  project: Project;\r\n}\r\n\r\nconst ProjectCardStyle = styled.div`\r\n  padding: 20px 0;\r\n  border-bottom: 1px solid ${colors.mainColor};\r\n  transition: 0.3s;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 30px 0;\r\n  }\r\n`;\r\n\r\nconst CardHeader = styled.div`\r\n  display: flow-root;\r\n  position: relative;\r\n`;\r\n\r\nconst ProjectTitle = styled.strong`\r\n  color: ${colors.mainColor};\r\n  float: left;\r\n  font-size: 1.3em;\r\n  position: absolute;\r\n  bottom: 0;\r\n`;\r\n\r\nconst TagContainerStyled = styled.div`\r\n  float: right;\r\n\r\n  div {\r\n    margin: 0;\r\n  }\r\n\r\n  div:first-child {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nconst ProjectDescription = styled.p`\r\n  clear: both;\r\n  padding: 20px 0 10px 0;\r\n  margin: 0;\r\n`;\r\n\r\nconst LinkButtonStyled = styled(LinkButton)`\r\n  padding: 20px 0 0 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst ProjectCard = (props: ProjectCardProps) => {\r\n  const getProjectTags = (project: Project) => {\r\n    return project.tags.map((tag: string, key: number) => {\r\n      return <Tag key={key}>{tag}</Tag>;\r\n    });\r\n  };\r\n\r\n  const getProjectUrl = (projectId: number) => {\r\n    return \"project/\" + projectId;\r\n  };\r\n\r\n  return (\r\n    <ProjectCardStyle>\r\n      <CardHeader>\r\n        <ProjectTitle>{props.project.name}</ProjectTitle>\r\n        <TagContainerStyled>{getProjectTags(props.project)}</TagContainerStyled>\r\n      </CardHeader>\r\n      <ProjectDescription>\r\n        2D fast paced game inspired in hits like Castlevania SOTN and Hollow\r\n        Knight. Not a Metroidvania, though.\r\n      </ProjectDescription>\r\n      <Link to={getProjectUrl(props.project.id)} tabIndex={-1}>\r\n        <LinkButtonStyled>check this project</LinkButtonStyled>\r\n      </Link>\r\n    </ProjectCardStyle>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import { css } from \"styled-components\";\r\nimport { colors } from \"../../data/colors\";\r\n\r\nexport const sectionWithText = css`\r\n  line-height: 1.7;\r\n\r\n  p a,\r\n  ul li a {\r\n    color: ${colors.mainColor};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { sectionWithText } from \"../../../components/common-styles/styles\";\r\nimport LinkButton from \"../../../components/common-components/LinkButton\";\r\nimport {\r\n  goToExternalPage,\r\n  goToExternalPageOnKeyDown,\r\n} from \"../../../common-functions/goToExternalPage\";\r\n\r\nconst Info = styled.section`\r\n  ${sectionWithText}\r\n`;\r\n\r\nconst PortfolioInfo = () => {\r\n  return (\r\n    <Info>\r\n      <p>\r\n        This website was designed and developed by me using{\" \"}\r\n        <strong>React</strong> and <strong>Figma</strong> for prototyping.\r\n      </p>\r\n      <LinkButton\r\n        onClick={() =>\r\n          goToExternalPage(\r\n            \"https://github.com/theGusPassos/theguspassos.github.io\"\r\n          )\r\n        }\r\n        onKeyDown={(e) =>\r\n          goToExternalPageOnKeyDown(\r\n            e,\r\n            \"https://github.com/theGusPassos/theguspassos.github.io\"\r\n          )\r\n        }\r\n      >\r\n        Check the source code here\r\n      </LinkButton>\r\n      <p>\r\n        I'm using github pages to host the source code for free. The build\r\n        process consists on the generation of a production build from the\r\n        development branch and pushing the transpiled files into the upstream\r\n        master branch. Then the files are served by the github page.{\" \"}\r\n        <a\r\n          href=\"https://github.com/gitname/react-gh-pages\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Here\r\n        </a>{\" \"}\r\n        is the step by step guide on how configure this build process.\r\n      </p>\r\n      <p>\r\n        Since this is just a static page without any back-end server, the\r\n        projects that populate the website are added manualy into a static list.\r\n        Every project has its own component with the HTML info (like this one\r\n        you're reading right now). It's definetly time consuming to add new\r\n        projects into the system, however this process won't be so frequent.\r\n        Besides, the component by project info page is a very flexible approach,\r\n        which is great.\r\n      </p>\r\n      <p>\r\n        I'm plan to still make changes to the website by improving some\r\n        responsivity and accessibility problems. I'm 100% open to feedback, so\r\n        if you have any suggestion feel free to contact me =)\r\n      </p>\r\n    </Info>\r\n  );\r\n};\r\n\r\nexport default PortfolioInfo;\r\n","import Project from \"../../models/project\";\r\nimport { portfolio } from \"./portfolio/portfolio\";\r\n\r\nexport const projectList: Project[] = [portfolio];\r\n\r\nexport const getProjectById = (id: number) => {\r\n  return projectList.filter((a) => a.id === id)[0];\r\n};\r\n","import Project from \"../../../models/project\";\r\nimport img from \"../../../images/projects/sketch/sketch-carousel.png\";\r\nimport imgBig from \"../../../images/projects/sketch/sketch-carousel-big.png\";\r\nimport PortfolioInfo from \"./PortfolioInfo\";\r\n\r\nexport const portfolio: Project = {\r\n  id: 1,\r\n  name: \"My Portfolio\",\r\n  description:\r\n    \"The website you're accessing right now was designed and developed by me.\",\r\n  tags: [\"react\"],\r\n  imageAlt: \"an image of this very own website\",\r\n  image: img,\r\n  imageBig: imgBig,\r\n  projectInfo: PortfolioInfo,\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../data/device\";\r\nimport LinkButton from \"./LinkButton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLastLocation, LastLocationType } from \"react-router-last-location\";\r\n\r\nconst LinkStyled = styled(Link)`\r\n  height: 10%;\r\n`;\r\n\r\nconst ReturnButtonStyled = styled(LinkButton)`\r\n  width: 100%;\r\n  position: fixed;\r\n  bottom: 0;\r\n  box-shadow: 0px 3px 11px 0px #0000009c;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.4em;\r\n    padding: 3% 0;\r\n  }\r\n`;\r\n\r\ninterface ReturnProps {\r\n  returnToHome?: boolean;\r\n}\r\n\r\nconst ReturnButton = (props: ReturnProps) => {\r\n  const lastLocation = useLastLocation();\r\n\r\n  const getLastVisited = (lastLocation: LastLocationType): string => {\r\n    if (lastLocation) return lastLocation.pathname;\r\n    return \"/\";\r\n  };\r\n\r\n  return (\r\n    <LinkStyled to={props.returnToHome ? \"/\" : getLastVisited(lastLocation)}>\r\n      <ReturnButtonStyled>Return</ReturnButtonStyled>\r\n    </LinkStyled>\r\n  );\r\n};\r\n\r\nexport default ReturnButton;\r\n","export const getLocationToAnim = (\r\n  currentLocation: string,\r\n  lastLocation: string | undefined,\r\n  pageHashLocation: string\r\n) => {\r\n  return currentLocation === pageHashLocation\r\n    ? lastLocation ?? \"\"\r\n    : currentLocation.replace(\"#\", \"\");\r\n};\r\n","import { AnimationDirection, GetAnimationTransform } from \"./animations\";\r\n\r\nexport interface LocationAnimationMap {\r\n  [location: string]: AnimationDirection;\r\n}\r\n\r\nexport const getAnimationBasedOnLocation = (\r\n  map: LocationAnimationMap,\r\n  currentLocation: string\r\n) => {\r\n  const animation = map[currentLocation] ?? map[\"default\"];\r\n  return GetAnimationTransform(animation);\r\n};\r\n","export const homePath = \"/\";\r\nexport const homePathHash = `#${homePath}`;\r\n\r\nexport const aboutPath = \"/about\";\r\nexport const aboutPathHash = `#${aboutPath}`;\r\n\r\nexport const projectListPath = \"/projects\";\r\nexport const projectListPathHash = `#${projectListPath}`;\r\n\r\nexport const projectPath = \"/project/:id\";\r\nexport const projectPathHash = `#${projectPath}`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport pageStyle from \"../../common-styles/pageStyle\";\r\nimport {\r\n  AnimationDirection,\r\n  GetAnimator,\r\n} from \"../../../animations/animations\";\r\nimport PageTitle from \"../../common-components/PageTitle\";\r\nimport Project from \"../../../models/project\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport { device } from \"../../../data/device\";\r\nimport { projectList } from \"../../../data/projects/projectList\";\r\nimport ReturnButton from \"../../common-components/ReturnButton\";\r\nimport { getLocationToAnim } from \"../../../animations/locationToAnim\";\r\nimport {\r\n  LocationAnimationMap,\r\n  getAnimationBasedOnLocation,\r\n} from \"../../../animations/dynamicAnimation\";\r\nimport { homePath, projectListPathHash, aboutPath } from \"../../../data/routes\";\r\nimport { useLastLocation } from \"react-router-last-location\";\r\nimport DeviceInfo from \"../../../models/deviceInfo\";\r\n\r\nconst ProjectListPageAnimated = GetAnimator(pageStyle);\r\n\r\nconst ProjectCardContainer = styled.section`\r\n  height: 90%;\r\n  overflow: auto;\r\n  padding: 20px;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 0 30px;\r\n  }\r\n`;\r\n\r\ninterface ProjectListProps extends DeviceInfo {}\r\n\r\nconst ProjectListPage = (props: ProjectListProps) => {\r\n  const location = getLocationToAnim(\r\n    window.location.hash,\r\n    useLastLocation()?.pathname,\r\n    projectListPathHash\r\n  );\r\n\r\n  const getAnimationMap = () => {\r\n    const animationMap: LocationAnimationMap = {};\r\n    animationMap[homePath] = AnimationDirection.FromRight;\r\n    animationMap[aboutPath] = AnimationDirection.FromRight;\r\n    animationMap[\"default\"] = AnimationDirection.FromDown;\r\n\r\n    return animationMap;\r\n  };\r\n\r\n  const animationTransform = getAnimationBasedOnLocation(\r\n    getAnimationMap(),\r\n    location\r\n  );\r\n\r\n  const getProjectCards = () => {\r\n    return projectList.map((a: Project, key: number) => {\r\n      return <ProjectCard project={a} key={key}></ProjectCard>;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ProjectListPageAnimated transform={animationTransform}>\r\n      {props.isDesktop ? null : <PageTitle centered>my projects</PageTitle>}\r\n      <ProjectCardContainer>{getProjectCards()}</ProjectCardContainer>\r\n      {props.isDesktop ? null : <ReturnButton returnToHome></ReturnButton>}\r\n    </ProjectListPageAnimated>\r\n  );\r\n};\r\n\r\nexport default ProjectListPage;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../../data/device\";\r\nimport { colors } from \"../../../../data/colors\";\r\nimport Project from \"../../../../models/project\";\r\n\r\nconst DescriptionContainer = styled.div`\r\n  display: block;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  @media ${device.tablet} {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 55%;\r\n  }\r\n`;\r\n\r\nconst Title = styled.strong`\r\n  background: ${colors.mainColor};\r\n  color: #fff;\r\n  font-size: 1.1em;\r\n  letter-spacing: 5px;\r\n  text-transform: uppercase;\r\n  border: 1px solid #c2c2c2;\r\n  position: absolute;\r\n  left: 0px;\r\n  top: -35px;\r\n  padding: 10px 20px;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.2em;\r\n    top: -60px;\r\n    padding: 20px 30px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.div`\r\n  font-size: 0.9em;\r\n  background: #e6e6e6;\r\n  padding: 10px 20px;\r\n  text-align: left;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.1em;\r\n    border-radius: 0 30px 0 0;\r\n    padding: 20px 30px;\r\n  }\r\n`;\r\n\r\nconst SlideDescription = (props: SlideDescriptionProps) => {\r\n  return (\r\n    <DescriptionContainer>\r\n      <Description>{props.project.description}</Description>\r\n      <Title>{props.project.name}</Title>\r\n    </DescriptionContainer>\r\n  );\r\n};\r\n\r\ninterface SlideDescriptionProps {\r\n  project: Project;\r\n}\r\n\r\nexport default SlideDescription;\r\n","import React from \"react\";\r\nimport Project from \"../../../models/project\";\r\nimport Tag from \"./Tag\";\r\n\r\nexport const getTagsInProject = (project: Project) => {\r\n  return getTags(project.tags);\r\n};\r\n\r\nexport const getTags = (tags: string[]) => {\r\n  return tags.map((tag: string, key: number) => {\r\n    return <Tag key={key}>{tag}</Tag>;\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SlideDescription from \"./SlideDescription\";\r\nimport { createHashHistory } from \"history\";\r\nimport { getTagsInProject } from \"../../../project/tag/tagList\";\r\nimport { colors } from \"../../../../data/colors\";\r\nimport Project from \"../../../../models/project\";\r\nimport { deviceSize, device } from \"../../../../data/device\";\r\n\r\nconst ImageContainer = styled.section`\r\n  position: relative;\r\n  display: block;\r\n  background-color: ${colors.mainBackgroundColor};\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst TagContainer = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  margin: auto;\r\n\r\n  @media ${device.desktop} {\r\n    border-radius: 50px;\r\n  }\r\n`;\r\n\r\ninterface ProjectSlideProps {\r\n  index: number;\r\n  project: Project;\r\n}\r\n\r\nconst getImageByDeviceSize = (project: Project) => {\r\n  return window.screen.width < deviceSize.tablet\r\n    ? project.image\r\n    : project.imageBig;\r\n};\r\n\r\nconst SlideContent = (props: ProjectSlideProps) => {\r\n  const goToProjectPage = (projectId: number) => {\r\n    const history = createHashHistory();\r\n    history.push(\"project/\" + projectId);\r\n  };\r\n\r\n  return (\r\n    <ImageContainer onClick={() => goToProjectPage(1)}>\r\n      <TagContainer>{getTagsInProject(props.project)}</TagContainer>\r\n      <Image\r\n        src={getImageByDeviceSize(props.project)}\r\n        alt={props.project.imageAlt}\r\n      ></Image>\r\n      <SlideDescription project={props.project}></SlideDescription>\r\n    </ImageContainer>\r\n  );\r\n};\r\n\r\nexport default SlideContent;\r\n","import React from \"react\";\r\nimport SlideContent from \"./slide/SlideContent\";\r\nimport styled from \"styled-components\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { projectList } from \"../../../data/projects/projectList\";\r\nimport Project from \"../../../models/project\";\r\nimport DeviceInfo from \"../../../models/deviceInfo\";\r\nimport { device } from \"../../../data/device\";\r\n\r\nconst CarouselContainer = styled.div`\r\n  z-index: 10;\r\n`;\r\n\r\nconst CarouselStyled = styled(Carousel)`\r\n  .control-dots {\r\n    top: 0;\r\n    bottom: unset;\r\n  }\r\n\r\n  .dot {\r\n    :focus {\r\n      border: 5px solid white;\r\n    }\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    .carousel.carousel-slider .control-arrow {\r\n      height: 50%;\r\n      margin: auto 0;\r\n\r\n      :focus,\r\n      :hover {\r\n        background: rgba(0, 0, 0, 0.9);\r\n        padding: 20px;\r\n        border: 1px solid white;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface CarouselContent extends DeviceInfo {}\r\n\r\nconst CarouselContent = (props: CarouselContent) => {\r\n  const projectSlides = () => {\r\n    return projectList.map((value: Project, i: number) => {\r\n      return <SlideContent index={i} project={value} key={i}></SlideContent>;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <CarouselContainer>\r\n      <CarouselStyled\r\n        showArrows={props.isDesktop}\r\n        showThumbs={false}\r\n        showStatus={false}\r\n        showIndicators\r\n        emulateTouch\r\n        autoPlay\r\n        transitionTime={700}\r\n        interval={4000}\r\n        stopOnHover\r\n        infiniteLoop\r\n      >\r\n        {projectSlides()}\r\n      </CarouselStyled>\r\n    </CarouselContainer>\r\n  );\r\n};\r\n\r\nexport default CarouselContent;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Contact from \"../../models/contact\";\r\nimport { onCardClick } from \"./contactCardClick\";\r\n\r\nconst ContactCardStyled = styled.div`\r\n  padding: 5% 10%;\r\n  display: flex;\r\n  font-size: 0.9em;\r\n`;\r\n\r\nconst ContactImage = styled.img`\r\n  width: 20%;\r\n  height: 20%;\r\n`;\r\n\r\nconst ContactInfo = styled.div`\r\n  align-self: flex-end;\r\n\r\n  span,\r\n  strong {\r\n    display: block;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\ninterface ContactCardProps {\r\n  contact: Contact;\r\n}\r\n\r\nconst ContactCard = (props: ContactCardProps) => {\r\n  return (\r\n    <ContactCardStyled onClick={() => onCardClick(props.contact)}>\r\n      <ContactImage\r\n        src={props.contact.image}\r\n        alt={props.contact.altImage}\r\n      ></ContactImage>\r\n      <ContactInfo>\r\n        <strong>{props.contact.message}</strong>\r\n        <span>{props.contact.contactText}</span>\r\n      </ContactInfo>\r\n    </ContactCardStyled>\r\n  );\r\n};\r\n\r\nexport default ContactCard;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from \"styled-components\";\r\nimport { animationSpeed } from \"../../animations/animations\";\r\nimport ContactCard from \"./ContactCard\";\r\nimport LinkButton from \"../common-components/LinkButton\";\r\nimport { contacts } from \"../../data/contacts\";\r\nimport PageTitle from \"../common-components/PageTitle\";\r\nimport { colors } from \"../../data/colors\";\r\nimport Contact from \"../../models/contact\";\r\n\r\nconst ModalBackground = styled.div`\r\n  background: rgba(0, 0, 0, 0.2);\r\n  height: 100%;\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 99999;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &.animation-enter {\r\n    opacity: 0;\r\n\r\n    > div:first-child {\r\n      transform: translate(0, 100%);\r\n    }\r\n  }\r\n\r\n  &.animation-enter-active {\r\n    opacity: 1;\r\n    transition: opacity ${animationSpeed}ms;\r\n\r\n    > div:first-child {\r\n      transform: translate(0, 0);\r\n      transition-timing-function: ease-in-out;\r\n      transition: transform ${animationSpeed}ms;\r\n    }\r\n  }\r\n\r\n  &.animation-exit {\r\n    opacity: 1;\r\n\r\n    > div:first-child {\r\n      transform: translate(0, 0);\r\n    }\r\n  }\r\n\r\n  &.animation-exit-active {\r\n    opacity: 0;\r\n    transition: opacity ${animationSpeed}ms;\r\n\r\n    > div:first-child {\r\n      transform: translate(0, 100%);\r\n      transition-timing-function: ease-in-out;\r\n      transition: transform ${animationSpeed}ms;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ModalWrapper = styled.div`\r\n  background-color: #fff;\r\n  z-index: 999999;\r\n  width: 100%;\r\n  max-width: 500px;\r\n`;\r\n\r\nconst ContactsContainer = styled.div`\r\n  padding: 20px;\r\n\r\n  > div:nth-child(2) {\r\n    border-top: 1px solid ${colors.mainColor};\r\n    border-bottom: 1px solid ${colors.mainColor};\r\n  }\r\n`;\r\n\r\nconst LinkButtonStyled = styled(LinkButton)`\r\n  width: 100%;\r\n  background-color: #fff;\r\n  box-shadow: 0px 3px 11px 0px #0000009c;\r\n  padding: 10px 20px;\r\n`;\r\n\r\ninterface ContactsModalProps {\r\n  onClose(): void;\r\n}\r\n\r\nconst ContactsModal = (props: ContactsModalProps) => {\r\n  const getContacts = () => {\r\n    return contacts.map((contact: Contact, key: number) => {\r\n      return <ContactCard key={key} contact={contact}></ContactCard>;\r\n    });\r\n  };\r\n\r\n  const modalMarkup = (\r\n    <ModalBackground>\r\n      <ModalWrapper>\r\n        <PageTitle centered>My Contacts</PageTitle>\r\n        <ContactsContainer>{getContacts()}</ContactsContainer>\r\n        <LinkButtonStyled onClick={() => props.onClose()}>\r\n          Close\r\n        </LinkButtonStyled>\r\n      </ModalWrapper>\r\n    </ModalBackground>\r\n  );\r\n\r\n  return ReactDOM.createPortal(modalMarkup, document.body);\r\n};\r\n\r\nexport default ContactsModal;\r\n","import React from \"react\";\r\nimport LinkButton from \"../common-components/LinkButton\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { animationSpeed } from \"../../animations/animations\";\r\nimport ContactsModal from \"./ContactsModal\";\r\n\r\nconst ContactsButton = () => {\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <LinkButton onClick={() => setIsOpen(true)}>My Contacts</LinkButton>\r\n      <CSSTransition\r\n        in={modalIsOpen}\r\n        classNames=\"animation\"\r\n        unmountOnExit\r\n        timeout={animationSpeed}\r\n      >\r\n        <ContactsModal onClose={() => setIsOpen(false)}></ContactsModal>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../data/device\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LinkButton from \"../common-components/LinkButton\";\r\nimport ContactsButton from \"../contacts/ContactsButton\";\r\n\r\nconst NavMenu = styled.nav`\r\n  flex: 1;\r\n  display: flex;\r\n`;\r\n\r\nconst LinkContainer = styled.ul`\r\n  margin: auto;\r\n  padding: 0;\r\n  width: 100%;\r\n\r\n  @media ${device.tablet} {\r\n    display: inline-flex;\r\n  }\r\n`;\r\n\r\nconst Item = styled.li`\r\n  text-align: center;\r\n  list-style: none;\r\n\r\n  @media ${device.tablet} {\r\n    margin: auto;\r\n    width: 30%;\r\n  }\r\n`;\r\n\r\ninterface ButtonProps {\r\n  border?: boolean;\r\n}\r\n\r\nconst MenuButton = styled(LinkButton)`\r\n  width: 70%;\r\n  border-bottom: ${(props: ButtonProps) =>\r\n    props.border ? \"solid 1px\" : \"none\"};\r\n  border-top: ${(props: ButtonProps) => (props.border ? \"solid 1px\" : \"none\")};\r\n\r\n  @media ${device.tablet} {\r\n    width: 100%;\r\n    border-bottom: none;\r\n    border-top: none;\r\n    border-left: ${(props: ButtonProps) =>\r\n      props.border ? \"solid 1px\" : \"none\"};\r\n    border-right: ${(props: ButtonProps) =>\r\n      props.border ? \"solid 1px\" : \"none\"};\r\n  }\r\n`;\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <NavMenu>\r\n      <LinkContainer>\r\n        <Item>\r\n          <Link to=\"/projects\">\r\n            <MenuButton>My other projects</MenuButton>\r\n          </Link>\r\n        </Item>\r\n        <Item>\r\n          <Link to=\"/about\">\r\n            <MenuButton border>About me</MenuButton>\r\n          </Link>\r\n        </Item>\r\n        <Item>\r\n          <ContactsButton></ContactsButton>\r\n        </Item>\r\n      </LinkContainer>\r\n    </NavMenu>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport { GetAnimator, AnimationDirection } from \"../../animations/animations\";\r\nimport { useLastLocation } from \"react-router-last-location\";\r\nimport PageTitle from \"../common-components/PageTitle\";\r\nimport pageStyle from \"../common-styles/pageStyle\";\r\nimport CarouselContent from \"./carousel/CarouselContent\";\r\nimport {\r\n  LocationAnimationMap,\r\n  getAnimationBasedOnLocation,\r\n} from \"../../animations/dynamicAnimation\";\r\nimport { aboutPath, projectListPath, homePathHash } from \"../../data/routes\";\r\nimport { getLocationToAnim } from \"../../animations/locationToAnim\";\r\nimport { device } from \"../../data/device\";\r\nimport styled from \"styled-components\";\r\nimport Menu from \"./Menu\";\r\nimport DeviceInfo from \"../../models/deviceInfo\";\r\n\r\nconst HomePageStyled = styled(pageStyle)`\r\n  @media ${device.desktop} {\r\n    position: relative;\r\n    margin: auto;\r\n    width: 75%;\r\n    height: unset;\r\n    max-width: 700px;\r\n  }\r\n`;\r\n\r\nconst HomePageAnimated = GetAnimator(HomePageStyled);\r\n\r\ninterface HomeProps extends DeviceInfo {}\r\n\r\nconst HomePage = (props: HomeProps) => {\r\n  const location = getLocationToAnim(\r\n    window.location.hash,\r\n    useLastLocation()?.pathname,\r\n    homePathHash\r\n  );\r\n\r\n  const getAnimationMap = () => {\r\n    const animationMap: LocationAnimationMap = {};\r\n    animationMap[aboutPath] = AnimationDirection.FromRight;\r\n    animationMap[projectListPath] = AnimationDirection.FromLeft;\r\n    animationMap[\"default\"] = AnimationDirection.FromDown;\r\n\r\n    return animationMap;\r\n  };\r\n\r\n  const animationTransform = getAnimationBasedOnLocation(\r\n    getAnimationMap(),\r\n    location\r\n  );\r\n\r\n  return (\r\n    <HomePageAnimated transform={animationTransform}>\r\n      <PageTitle>some of the projects I've worked on</PageTitle>\r\n      <CarouselContent isDesktop={props.isDesktop}></CarouselContent>\r\n      {props.isDesktop ? null : <Menu></Menu>}\r\n    </HomePageAnimated>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../data/device\";\r\nimport LinkButton from \"../common-components/LinkButton\";\r\nimport { colors } from \"../../data/colors\";\r\nimport ContactsButton from \"../contacts/ContactsButton\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = styled.nav`\r\n  flex: 1;\r\n  display: flex;\r\n`;\r\n\r\nconst LinkContainer = styled.ul`\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  width: 100%;\r\n  font-size: 1.1em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 0.9em;\r\n  }\r\n`;\r\n\r\nconst Item = styled.li`\r\n  text-align: center;\r\n  list-style: none;\r\n`;\r\n\r\nconst LinkButtonStyled = styled(LinkButton)`\r\n  width: 70%;\r\n  border-top: 1px solid ${colors.mainColor};\r\n`;\r\n\r\nconst NavigationButtons = () => {\r\n  return (\r\n    <Navigation>\r\n      <LinkContainer>\r\n        <Item>\r\n          <ContactsButton></ContactsButton>\r\n        </Item>\r\n        <Item>\r\n          <Link to=\"/\">\r\n            <LinkButtonStyled>Return</LinkButtonStyled>\r\n          </Link>\r\n        </Item>\r\n      </LinkContainer>\r\n    </Navigation>\r\n  );\r\n};\r\n\r\nexport default NavigationButtons;\r\n","import React from \"react\";\r\nimport PageTitle from \"../common-components/PageTitle\";\r\nimport styled from \"styled-components\";\r\nimport { AnimationDirection, GetAnimator } from \"../../animations/animations\";\r\nimport image from \"../../images/me/EubyKuma.png\";\r\nimport { device } from \"../../data/device\";\r\nimport pageStyle from \"../common-styles/pageStyle\";\r\nimport NavigationButtons from \"./NavigationButtons\";\r\nimport DeviceInfo from \"../../models/deviceInfo\";\r\nimport { getLocationToAnim } from \"../../animations/locationToAnim\";\r\nimport { useLastLocation } from \"react-router-last-location\";\r\nimport { aboutPathHash, homePath, projectListPath } from \"../../data/routes\";\r\nimport {\r\n  getAnimationBasedOnLocation,\r\n  LocationAnimationMap,\r\n} from \"../../animations/dynamicAnimation\";\r\nimport { colors } from \"../../data/colors\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MainToolTip } from \"../common-components/ToolTip\";\r\nimport { sectionWithText } from \"../common-styles/styles\";\r\n\r\nconst AboutPageStyled = styled(pageStyle)`\r\n  font-size: 0.9em;\r\n\r\n  @media ${device.tablet} {\r\n    font-size: 1.1em;\r\n  }\r\n`;\r\n\r\nconst AboutPageAnimated = GetAnimator(AboutPageStyled);\r\n\r\nconst ImageContainer = styled.div``;\r\n\r\nconst Image = styled.img`\r\n  display: flex;\r\n  width: 45%;\r\n  margin: 5% auto;\r\n\r\n  @media ${device.tablet} {\r\n    width: 25%;\r\n    min-width: 250px;\r\n  }\r\n\r\n  .tooltip {\r\n    background: black;\r\n  }\r\n`;\r\n\r\nconst Info = styled.div`\r\n  margin: 0 10%;\r\n\r\n  span {\r\n    display: block;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst Bio = styled.div`\r\n  padding: 3% 20px;\r\n  ${sectionWithText}\r\n\r\n  @media ${device.tablet} {\r\n    p {\r\n      margin: 30px 0;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface AboutProps extends DeviceInfo {}\r\n\r\nconst AboutPage = (props: AboutProps) => {\r\n  const location = getLocationToAnim(\r\n    window.location.hash,\r\n    useLastLocation()?.pathname,\r\n    aboutPathHash\r\n  );\r\n\r\n  const getAnimationMap = () => {\r\n    const animationMap: LocationAnimationMap = {};\r\n    animationMap[homePath] = AnimationDirection.FromLeft;\r\n    animationMap[projectListPath] = AnimationDirection.FromLeft;\r\n    animationMap[\"default\"] = AnimationDirection.FromDown;\r\n\r\n    return animationMap;\r\n  };\r\n\r\n  const animationTransform = getAnimationBasedOnLocation(\r\n    getAnimationMap(),\r\n    location\r\n  );\r\n\r\n  return (\r\n    <AboutPageAnimated transform={animationTransform}>\r\n      {props.isDesktop ? null : <PageTitle centered>about me</PageTitle>}\r\n      <ImageContainer>\r\n        <MainToolTip />\r\n        <Image\r\n          src={image}\r\n          alt=\"drawing of me and my pets by @kumamaskie\"\r\n          data-tip=\"drawing by @kumamaskie\"\r\n        ></Image>\r\n        <Info>\r\n          <span>Gustavo Passos, 22 years old, Brazillian</span>\r\n          <span>currently working @ lambda3</span>\r\n        </Info>\r\n      </ImageContainer>\r\n      <Bio>\r\n        <p>\r\n          I’ve been programming for 5 years now, 4 of those as a professional\r\n          software developer in brazillian companies.\r\n        </p>\r\n        <p>\r\n          I'm interested in developing any kind of software or game, regardless\r\n          of the tech stack. I have no preferred programming language or\r\n          framework, the software quality and the user experience are the most\r\n          important things for me. That's why I look forward to working with\r\n          people that have the same objectives.\r\n        </p>\r\n        <p>\r\n          If you're interested in the technologies that I'm already experienced\r\n          with, you can check my <Link to=\"/projects\">project page</Link> for\r\n          finished projects or my{\" \"}\r\n          <a\r\n            href=\"https://github.com/theGusPassos\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            github\r\n          </a>{\" \"}\r\n          for ongoing ones. For professional projects and experience, feel free\r\n          to check my{\" \"}\r\n          <a\r\n            href=\"https://www.linkedin.com/in/theguspassos/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            linkedin page\r\n          </a>\r\n          .\r\n        </p>\r\n        <p>If you need help in a project of yours feel free to contact me =)</p>\r\n      </Bio>\r\n      {props.isDesktop ? null : <NavigationButtons></NavigationButtons>}\r\n    </AboutPageAnimated>\r\n  );\r\n};\r\n\r\nexport default AboutPage;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport pageStyle from \"../../common-styles/pageStyle\";\r\nimport {\r\n  AnimationDirection,\r\n  GetAnimator,\r\n  GetAnimationTransform,\r\n} from \"../../../animations/animations\";\r\nimport PageTitle from \"../../common-components/PageTitle\";\r\nimport Project from \"../../../models/project\";\r\nimport { device } from \"../../../data/device\";\r\nimport ReturnButton from \"../../common-components/ReturnButton\";\r\nimport { getProjectById } from \"../../../data/projects/projectList\";\r\nimport { getTagsInProject } from \"../tag/tagList\";\r\nimport DeviceInfo from \"../../../models/deviceInfo\";\r\n\r\nconst ProjectViewPageAnimated = GetAnimator(pageStyle);\r\nconst AnimationTransform = GetAnimationTransform(AnimationDirection.FromUp);\r\n\r\ninterface ProjectViewProps extends DeviceInfo {\r\n  projectId: number;\r\n}\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  max-height: 400px;\r\n`;\r\n\r\nconst TagContainer = styled.div`\r\n  display: flex;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst ProjectText = styled.section`\r\n  height: 90%;\r\n  padding: 15px 20px 20px 20px;\r\n  margin-bottom: 10%;\r\n\r\n  @media ${device.tablet} {\r\n    padding: 30px;\r\n  }\r\n`;\r\n\r\nconst ProjectViewPage = (props: ProjectViewProps) => {\r\n  let project = getProjectById(Number(props.projectId));\r\n\r\n  return (\r\n    <ProjectViewPageAnimated transform={AnimationTransform}>\r\n      {props.isDesktop ? null : <PageTitle centered>{project.name}</PageTitle>}\r\n      <Image src={project.imageBig} alt={project.imageAlt}></Image>\r\n      <TagContainer>{getTagsInProject(project)}</TagContainer>\r\n      <ProjectText>{project.projectInfo()}</ProjectText>\r\n      {/* {props.isDesktop ? null : <ReturnButton></ReturnButton>} */}\r\n    </ProjectViewPageAnimated>\r\n  );\r\n};\r\n\r\nexport default ProjectViewPage;\r\n","import React, { useEffect } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport ProjectListPage from \"./project/list/ProjectListPage\";\r\nimport HomePage from \"./home/HomePage\";\r\nimport AboutPage from \"./about/AboutPage\";\r\nimport ProjectViewPage from \"./project/view/ProjectViewPage\";\r\nimport { sketch } from \"../data/projects/sketch/sketch\";\r\nimport {\r\n  homePath,\r\n  aboutPath,\r\n  projectPath,\r\n  projectListPath,\r\n} from \"../data/routes\";\r\nimport DeviceInfo from \"../models/deviceInfo\";\r\nimport ReactGA from \"react-ga\";\r\n\r\ninterface RoutesProps extends DeviceInfo {\r\n  location: any;\r\n}\r\n\r\nconst Routes = (props: RoutesProps) => {\r\n  useEffect(() => {\r\n    ReactGA.pageview(window.location.hash);\r\n  }, []);\r\n\r\n  return (\r\n    <Switch location={props.location}>\r\n      <Route exact path={homePath}>\r\n        <HomePage isDesktop={props.isDesktop}></HomePage>\r\n      </Route>\r\n\r\n      <Route exact path={aboutPath}>\r\n        <AboutPage isDesktop={props.isDesktop}></AboutPage>\r\n      </Route>\r\n\r\n      <Route exact path={projectListPath}>\r\n        <ProjectListPage isDesktop={props.isDesktop}></ProjectListPage>\r\n      </Route>\r\n\r\n      <Route\r\n        exact\r\n        path={projectPath}\r\n        render={(renderProps) => {\r\n          return (\r\n            <ProjectViewPage\r\n              projectId={renderProps.match.params.id}\r\n              isDesktop={props.isDesktop}\r\n            ></ProjectViewPage>\r\n          );\r\n        }}\r\n      ></Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport Header from \"./header/Header\";\r\nimport styled from \"styled-components\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { LastLocationProvider } from \"react-router-last-location\";\r\nimport Routes from \"./Routes\";\r\nimport { animationSpeed } from \"../animations/animations\";\r\nimport { device, isInDesktop } from \"../data/device\";\r\nimport { withResizeDetector } from \"react-resize-detector\";\r\nimport ResizeListenerProps from \"../models/resizeListenerProps\";\r\nimport { colors } from \"../data/colors\";\r\n\r\nconst BodyGrid = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  margin: auto;\r\n  max-width: 1400px;\r\n  background-color: ${colors.mainBackgroundColor};\r\n\r\n  @media ${device.desktop} {\r\n    display: block;\r\n    box-shadow: 0px 3px 11px 0px #0000000c;\r\n  }\r\n`;\r\n\r\nconst TransitionGroupStyled = styled(TransitionGroup)`\r\n  height: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n\r\n  @media ${device.desktop} {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\ninterface BodyProps extends ResizeListenerProps {}\r\n\r\nconst Body = (props: BodyProps) => {\r\n  return (\r\n    <BodyGrid>\r\n      <HashRouter basename=\"/\">\r\n        <Header isDesktop={isInDesktop(props.width)}></Header>\r\n        <LastLocationProvider>\r\n          <Route\r\n            render={({ location }) => (\r\n              <TransitionGroupStyled>\r\n                <CSSTransition\r\n                  key={location.pathname}\r\n                  classNames=\"animation\"\r\n                  timeout={animationSpeed}\r\n                >\r\n                  <Routes\r\n                    isDesktop={isInDesktop(props.width)}\r\n                    location={location}\r\n                  ></Routes>\r\n                </CSSTransition>\r\n              </TransitionGroupStyled>\r\n            )}\r\n          ></Route>\r\n        </LastLocationProvider>\r\n      </HashRouter>\r\n    </BodyGrid>\r\n  );\r\n};\r\n\r\nexport default withResizeDetector(Body);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Body from \"./components/Body\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport ReactGA from \"react-ga\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntoast.configure();\r\nReactGA.initialize(\"UA-163830671-1\");\r\n\r\nconst App = () => {\r\n  return (\r\n    <Body handleWidth>\r\n      <ToastContainer></ToastContainer>\r\n    </Body>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\n"],"sourceRoot":""}